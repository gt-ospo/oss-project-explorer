{"ast":null,"code":"var _jsxFileName = \"/Users/natekim/Downloads/OSPO/react-os-framework/project-form/client/src/components/ProjectExplorerPage/ProjectExplorer.js\",\n  _s = $RefreshSig$();\nimport ProjectForm from \"../ProjectFormPage/ProjectForm\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProjectExplorer() {\n  _s();\n  const [searchedName, setSearchedName] = useState(\"\");\n  const [projectAreas, setProjectAreas] = useState([]);\n  const [projectLicenses, setProjectLicenses] = useState([]);\n  const [displayedProjects, setDisplayedProjects] = useState([]);\n  const [formData, setFormData] = useState({\n    searchedName: '',\n    projectAreas: [],\n    licenses: [],\n    displayedProjects: []\n  });\n  const projectAreaOptions = [{\n    value: 'ai',\n    label: 'Artifical Intelligence'\n  }, {\n    value: 'bioscience',\n    label: 'Bioscience'\n  }, {\n    value: 'compsci',\n    label: 'Computer Science'\n  }, {\n    value: 'hpc',\n    label: 'High Performance Computing'\n  }, {\n    value: 'graphics',\n    label: 'Computer Graphics'\n  }, {\n    value: 'robotics',\n    label: 'Robotics'\n  }, {\n    value: 'hci',\n    label: 'Human-Computer Interaction'\n  }];\n  const licenseOptions = [{\n    value: 'mit',\n    label: 'MIT License'\n  }, {\n    value: 'apache',\n    label: 'Apache License 2.0'\n  }, {\n    value: 'isc',\n    label: 'ISC License'\n  }, {\n    value: 'bsd-3',\n    label: 'BSD 3-Clause \"New\" or \"Revised\" License'\n  }];\n  const [showForm, setShowForm] = useState(false);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"isolate bg-white px-6 py-24 sm:py-32 lg:px-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-10\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowForm(!showForm),\n        className: `block w-full rounded-md px-3.5 py-2.5 text-center text-sm font-semibold shadow-sm bg-gtgold text-white hover:bg-gtgoldlight focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600`,\n        children: showForm ? \"Close Form\" : \"Submit New Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), showForm && /*#__PURE__*/_jsxDEV(ProjectForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n_s(ProjectExplorer, \"RzvukirDpeQF7F18amwmPeQ/23U=\");\n_c = ProjectExplorer;\n;\nexport default ProjectExplorer;\nvar _c;\n$RefreshReg$(_c, \"ProjectExplorer\");","map":{"version":3,"names":["ProjectForm","useState","useEffect","jsxDEV","_jsxDEV","ProjectExplorer","_s","searchedName","setSearchedName","projectAreas","setProjectAreas","projectLicenses","setProjectLicenses","displayedProjects","setDisplayedProjects","formData","setFormData","licenses","projectAreaOptions","value","label","licenseOptions","showForm","setShowForm","handleChange","e","name","target","prevState","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/natekim/Downloads/OSPO/react-os-framework/project-form/client/src/components/ProjectExplorerPage/ProjectExplorer.js"],"sourcesContent":["import ProjectForm from \"../ProjectFormPage/ProjectForm\";\nimport { useState, useEffect } from \"react\";\n\nfunction ProjectExplorer() {\n    const [searchedName, setSearchedName] = useState(\"\");\n    const [projectAreas, setProjectAreas] = useState([]);\n    const [projectLicenses, setProjectLicenses] = useState([]);\n    const [displayedProjects, setDisplayedProjects] = useState([]);\n\n    const [formData, setFormData] = useState({\n        searchedName: '',\n        projectAreas: [],\n        licenses: [],\n        displayedProjects: []\n    });\n\n    const projectAreaOptions = [\n        { value: 'ai', label: 'Artifical Intelligence' },\n        { value: 'bioscience', label: 'Bioscience' },\n        { value: 'compsci', label: 'Computer Science' },\n        { value: 'hpc', label: 'High Performance Computing' },\n        { value: 'graphics', label: 'Computer Graphics' },\n        { value: 'robotics', label: 'Robotics' },\n        { value: 'hci', label: 'Human-Computer Interaction' }\n    ];\n    const licenseOptions = [\n        { value: 'mit', label: 'MIT License' },\n        { value: 'apache', label: 'Apache License 2.0' },\n        { value: 'isc', label: 'ISC License' },\n        { value: 'bsd-3', label: 'BSD 3-Clause \"New\" or \"Revised\" License' },\n    ];\n\n    const [showForm, setShowForm] = useState(false);\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setFormData(prevState => ({\n            ...prevState,\n            [name]: value\n        }));\n    };\n\n    \n\n    return (\n        <div className=\"isolate bg-white px-6 py-24 sm:py-32 lg:px-8\">\n            <div className=\"mt-10\">\n                <button \n                    onClick={() => setShowForm(!showForm)}\n                    className={`block w-full rounded-md px-3.5 py-2.5 text-center text-sm font-semibold shadow-sm bg-gtgold text-white hover:bg-gtgoldlight focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600`}\n                >\n                    {showForm ? \"Close Form\" : \"Submit New Project\"}\n                </button>\n            </div>\n            \n            {showForm && <ProjectForm />}\n        </div>\n    );\n};\n\nexport default ProjectExplorer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}