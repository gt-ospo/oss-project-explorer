{"ast":null,"code":"import { request as defaultRequest } from \"@octokit/request\";\nimport btoa from \"btoa-lite\";\nasync function scopeToken(options) {\n  const {\n    request: optionsRequest,\n    clientType,\n    clientId,\n    clientSecret,\n    token,\n    ...requestOptions\n  } = options;\n  const request = optionsRequest || /* istanbul ignore next: we always pass a custom request in tests */\n  defaultRequest;\n  const response = await request(\"POST /applications/{client_id}/token/scoped\", {\n    headers: {\n      authorization: `basic ${btoa(`${clientId}:${clientSecret}`)}`\n    },\n    client_id: clientId,\n    access_token: token,\n    ...requestOptions\n  });\n  const authentication = Object.assign({\n    clientType,\n    clientId,\n    clientSecret,\n    token: response.data.token\n  }, response.data.expires_at ? {\n    expiresAt: response.data.expires_at\n  } : {});\n  return {\n    ...response,\n    authentication\n  };\n}\nexport { scopeToken };","map":{"version":3,"names":["request","defaultRequest","btoa","scopeToken","options","optionsRequest","clientType","clientId","clientSecret","token","requestOptions","response","headers","authorization","client_id","access_token","authentication","Object","assign","data","expires_at","expiresAt"],"sources":["C:/Users/natek/Downloads/OSPO/react-os-framework/project-form/client/node_modules/@octokit/oauth-methods/dist-src/scope-token.js"],"sourcesContent":["import { request as defaultRequest } from \"@octokit/request\";\r\nimport btoa from \"btoa-lite\";\r\nasync function scopeToken(options) {\r\n  const {\r\n    request: optionsRequest,\r\n    clientType,\r\n    clientId,\r\n    clientSecret,\r\n    token,\r\n    ...requestOptions\r\n  } = options;\r\n  const request = optionsRequest || /* istanbul ignore next: we always pass a custom request in tests */\r\n  defaultRequest;\r\n  const response = await request(\r\n    \"POST /applications/{client_id}/token/scoped\",\r\n    {\r\n      headers: {\r\n        authorization: `basic ${btoa(`${clientId}:${clientSecret}`)}`\r\n      },\r\n      client_id: clientId,\r\n      access_token: token,\r\n      ...requestOptions\r\n    }\r\n  );\r\n  const authentication = Object.assign(\r\n    {\r\n      clientType,\r\n      clientId,\r\n      clientSecret,\r\n      token: response.data.token\r\n    },\r\n    response.data.expires_at ? { expiresAt: response.data.expires_at } : {}\r\n  );\r\n  return { ...response, authentication };\r\n}\r\nexport {\r\n  scopeToken\r\n};\r\n"],"mappings":"AAAA,SAASA,OAAO,IAAIC,cAAc,QAAQ,kBAAkB;AAC5D,OAAOC,IAAI,MAAM,WAAW;AAC5B,eAAeC,UAAUA,CAACC,OAAO,EAAE;EACjC,MAAM;IACJJ,OAAO,EAAEK,cAAc;IACvBC,UAAU;IACVC,QAAQ;IACRC,YAAY;IACZC,KAAK;IACL,GAAGC;EACL,CAAC,GAAGN,OAAO;EACX,MAAMJ,OAAO,GAAGK,cAAc,IAAI;EAClCJ,cAAc;EACd,MAAMU,QAAQ,GAAG,MAAMX,OAAO,CAC5B,6CAA6C,EAC7C;IACEY,OAAO,EAAE;MACPC,aAAa,EAAG,SAAQX,IAAI,CAAE,GAAEK,QAAS,IAAGC,YAAa,EAAC,CAAE;IAC9D,CAAC;IACDM,SAAS,EAAEP,QAAQ;IACnBQ,YAAY,EAAEN,KAAK;IACnB,GAAGC;EACL,CACF,CAAC;EACD,MAAMM,cAAc,GAAGC,MAAM,CAACC,MAAM,CAClC;IACEZ,UAAU;IACVC,QAAQ;IACRC,YAAY;IACZC,KAAK,EAAEE,QAAQ,CAACQ,IAAI,CAACV;EACvB,CAAC,EACDE,QAAQ,CAACQ,IAAI,CAACC,UAAU,GAAG;IAAEC,SAAS,EAAEV,QAAQ,CAACQ,IAAI,CAACC;EAAW,CAAC,GAAG,CAAC,CACxE,CAAC;EACD,OAAO;IAAE,GAAGT,QAAQ;IAAEK;EAAe,CAAC;AACxC;AACA,SACEb,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}