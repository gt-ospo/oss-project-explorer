{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\natek\\\\Downloads\\\\OSPO\\\\react-os-framework\\\\project-form\\\\client\\\\src\\\\components\\\\ProjectExplorerPage\\\\ProjectExplorer.js\",\n  _s = $RefreshSig$();\nimport ProjectForm from \"../ProjectFormPage/ProjectForm\";\nimport { useMemo, useState, useEffect } from \"react\";\nimport { useReactTable, createColumnHelper, getCoreRowModel, flexRender } from '@tanstack/react-table';\nimport { Octokit } from \"octokit\";\n\n// TODO:\n//  - Input HTML for search bar, category checkboxes on side, and database layout\n//  - Add styling\n//  - Move Github API method to separate file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columnHelper = createColumnHelper();\nconst columns = [columnHelper.accessor(\"projectName\", {\n  header: \"Name\",\n  cell: info => info.getValue()\n}), columnHelper.accessor(row => row.projectAreas.join(\", \"), {\n  id: \"projectAreas\",\n  header: () => \"Project Areas\"\n}), columnHelper.accessor(row => row.licenses.join(\", \"), {\n  id: \"licenses\",\n  header: () => \"Licenses\"\n})];\nfunction ProjectExplorer() {\n  _s();\n  const [projects, setProjects] = useState([]);\n  const projectAreaOptions = [{\n    value: 'ai',\n    label: 'Artifical Intelligence'\n  }, {\n    value: 'bioscience',\n    label: 'Bioscience'\n  }, {\n    value: 'compsci',\n    label: 'Computer Science'\n  }, {\n    value: 'hpc',\n    label: 'High Performance Computing'\n  }, {\n    value: 'graphics',\n    label: 'Computer Graphics'\n  }, {\n    value: 'robotics',\n    label: 'Robotics'\n  }, {\n    value: 'hci',\n    label: 'Human-Computer Interaction'\n  }];\n  const licenseOptions = [{\n    value: 'mit',\n    label: 'MIT License'\n  }, {\n    value: 'apache',\n    label: 'Apache License 2.0'\n  }, {\n    value: 'isc',\n    label: 'ISC License'\n  }, {\n    value: 'bsd-3',\n    label: 'BSD 3-Clause \"New\" or \"Revised\" License'\n  }];\n  const [showForm, setShowForm] = useState(false);\n\n  // Fetch JSON project data and set allProjects\n  useEffect(() => {\n    const octokit = new Octokit({\n      auth: \"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\"\n    });\n    async function fetchProjects() {\n      try {\n        const response = await octokit.request(\"GET /repos/{owner}/{repo}/contents/{path}?ref={branch}\", {\n          owner: \"gt-ospo\",\n          repo: \"open-source-project-explorer\",\n          path: \"project_list.json\",\n          branch: \"json-form-test\"\n        });\n        const content = atob(response.data.content);\n        const projects = JSON.parse(content);\n        setProjects(projects);\n      } catch (error) {\n        console.error(\"Something went wrong while fetching the projects...\", error);\n      }\n    }\n    fetchProjects();\n  }, []);\n  const data = useMemo(() => projects, [projects]);\n  const table = useReactTable({\n    data,\n    columns,\n    getCoreRowModel: getCoreRowModel()\n  });\n\n  // const {\n  //     getTableProps,\n  //     getTableBodyProps,\n  //     headerGroups,\n  //     page, // Use 'page' instead of 'rows' for pagination\n  //     prepareRow,\n  //     canPreviousPage,\n  //     canNextPage,\n  //     pageOptions,\n  //     nextPage,\n  //     previousPage,\n  //     setPageSize,\n  //     state: { pageIndex, pageSize },\n  // } = useReactTable({\n  //     columns,\n  //     data,\n  //     initialState: { pageIndex: 0, pageSize: 10 }, // Set page size to 10 as per requirement\n  // }, useExpanded, usePagination);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"isolate bg-white px-6 py-24 sm:py-32 lg:px-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: table.getHeaderGroups().map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: headerGroup.headers.map(header => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: header.isPlaceholder ? null : flexRender(header.column.columnDef.header, header.getContext())\n          }, header.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 29\n          }, this))\n        }, headerGroup.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: table.getRowModel().rows.map(row => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: row.getVisibleCells().map(cell => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: flexRender(cell.column.columnDef.cell, cell.getContext())\n          }, cell.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 33\n          }, this))\n        }, row.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tfoot\", {\n        children: table.getFooterGroups().map(footerGroup => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: footerGroup.headers.map(header => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: header.isPlaceholder ? null : flexRender(header.column.columnDef.footer, header.getContext())\n          }, header.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 33\n          }, this))\n        }, footerGroup.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-10\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowForm(!showForm),\n        className: `block w-full rounded-md px-3.5 py-2.5 text-center text-sm font-semibold shadow-sm bg-gtgold text-white hover:bg-gtgoldlight focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600`,\n        children: showForm ? \"Close Form\" : \"Submit New Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }, this), showForm && /*#__PURE__*/_jsxDEV(ProjectForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 9\n  }, this);\n}\n_s(ProjectExplorer, \"AnN2ZwIZtp+6/pfF+H+Bpj9HuO0=\", false, function () {\n  return [useReactTable];\n});\n_c = ProjectExplorer;\n;\nexport default ProjectExplorer;\nvar _c;\n$RefreshReg$(_c, \"ProjectExplorer\");","map":{"version":3,"names":["ProjectForm","useMemo","useState","useEffect","useReactTable","createColumnHelper","getCoreRowModel","flexRender","Octokit","jsxDEV","_jsxDEV","columnHelper","columns","accessor","header","cell","info","getValue","row","projectAreas","join","id","licenses","ProjectExplorer","_s","projects","setProjects","projectAreaOptions","value","label","licenseOptions","showForm","setShowForm","octokit","auth","fetchProjects","response","request","owner","repo","path","branch","content","atob","data","JSON","parse","error","console","table","className","children","getHeaderGroups","map","headerGroup","headers","isPlaceholder","column","columnDef","getContext","fileName","_jsxFileName","lineNumber","columnNumber","getRowModel","rows","getVisibleCells","getFooterGroups","footerGroup","footer","onClick","_c","$RefreshReg$"],"sources":["C:/Users/natek/Downloads/OSPO/react-os-framework/project-form/client/src/components/ProjectExplorerPage/ProjectExplorer.js"],"sourcesContent":["import ProjectForm from \"../ProjectFormPage/ProjectForm\";\r\nimport { useMemo, useState, useEffect } from \"react\";\r\nimport { useReactTable, createColumnHelper, getCoreRowModel, flexRender } from '@tanstack/react-table';\r\nimport { Octokit } from \"octokit\";\r\n\r\n// TODO:\r\n//  - Input HTML for search bar, category checkboxes on side, and database layout\r\n//  - Add styling\r\n//  - Move Github API method to separate file\r\n\r\nconst columnHelper = createColumnHelper();\r\nconst columns = [\r\n    columnHelper.accessor(\"projectName\", {\r\n        header: \"Name\",\r\n        cell: info => info.getValue(),\r\n    }),\r\n    columnHelper.accessor(row => row.projectAreas.join(\", \"), {\r\n        id: \"projectAreas\",\r\n        header: () => \"Project Areas\",\r\n    }),\r\n    columnHelper.accessor(row => row.licenses.join(\", \"), {\r\n        id: \"licenses\",\r\n        header: () => \"Licenses\",\r\n    }),\r\n];\r\n\r\nfunction ProjectExplorer() {\r\n    const [projects, setProjects] = useState([]);\r\n\r\n    const projectAreaOptions = [\r\n        { value: 'ai', label: 'Artifical Intelligence' },\r\n        { value: 'bioscience', label: 'Bioscience' },\r\n        { value: 'compsci', label: 'Computer Science' },\r\n        { value: 'hpc', label: 'High Performance Computing' },\r\n        { value: 'graphics', label: 'Computer Graphics' },\r\n        { value: 'robotics', label: 'Robotics' },\r\n        { value: 'hci', label: 'Human-Computer Interaction' }\r\n    ];\r\n    const licenseOptions = [\r\n        { value: 'mit', label: 'MIT License' },\r\n        { value: 'apache', label: 'Apache License 2.0' },\r\n        { value: 'isc', label: 'ISC License' },\r\n        { value: 'bsd-3', label: 'BSD 3-Clause \"New\" or \"Revised\" License' },\r\n    ];\r\n\r\n    const [showForm, setShowForm] = useState(false);\r\n\r\n\r\n    // Fetch JSON project data and set allProjects\r\n    useEffect(() => {\r\n        const octokit = new Octokit({\r\n            auth: \"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\"\r\n        })\r\n\r\n        async function fetchProjects() {\r\n            try {\r\n                const response = await octokit.request(\"GET /repos/{owner}/{repo}/contents/{path}?ref={branch}\", {\r\n                    owner: \"gt-ospo\",\r\n                    repo: \"open-source-project-explorer\",\r\n                    path: \"project_list.json\",\r\n                    branch: \"json-form-test\"\r\n                })\r\n\r\n                const content = atob(response.data.content)\r\n                const projects = JSON.parse(content)\r\n\r\n                setProjects(projects);\r\n\r\n            } catch (error) {\r\n                console.error(\"Something went wrong while fetching the projects...\", error);\r\n            }\r\n        }\r\n\r\n        fetchProjects();\r\n    }, []);\r\n\r\n    const data = useMemo(() => projects, [projects]);\r\n\r\n    const table = useReactTable({\r\n        data,\r\n        columns,\r\n        getCoreRowModel: getCoreRowModel(),\r\n    });\r\n    \r\n    // const {\r\n    //     getTableProps,\r\n    //     getTableBodyProps,\r\n    //     headerGroups,\r\n    //     page, // Use 'page' instead of 'rows' for pagination\r\n    //     prepareRow,\r\n    //     canPreviousPage,\r\n    //     canNextPage,\r\n    //     pageOptions,\r\n    //     nextPage,\r\n    //     previousPage,\r\n    //     setPageSize,\r\n    //     state: { pageIndex, pageSize },\r\n    // } = useReactTable({\r\n    //     columns,\r\n    //     data,\r\n    //     initialState: { pageIndex: 0, pageSize: 10 }, // Set page size to 10 as per requirement\r\n    // }, useExpanded, usePagination);\r\n    \r\n\r\n    return (\r\n        <div className=\"isolate bg-white px-6 py-24 sm:py-32 lg:px-8\">\r\n            <table>\r\n                <thead>\r\n                    {table.getHeaderGroups().map(headerGroup => (\r\n                        <tr key={headerGroup.id}>\r\n                        {headerGroup.headers.map(header => (\r\n                            <th key={header.id}>\r\n                                {header.isPlaceholder\r\n                                    ? null\r\n                                    : flexRender(\r\n                                        header.column.columnDef.header,\r\n                                        header.getContext()\r\n                                    )\r\n                                }\r\n                            </th>\r\n                        ))}\r\n                        </tr>\r\n                    ))}\r\n                </thead>\r\n                <tbody>\r\n                    {table.getRowModel().rows.map(row => (\r\n                        <tr key={row.id}>\r\n                            {row.getVisibleCells().map(cell => (\r\n                                <td key={cell.id}>\r\n                                    {flexRender(cell.column.columnDef.cell, cell.getContext())}\r\n                                </td>\r\n                            ))}\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n                <tfoot>\r\n                    {table.getFooterGroups().map(footerGroup => (\r\n                        <tr key={footerGroup.id}>\r\n                            {footerGroup.headers.map(header => (\r\n                                <th key={header.id}>\r\n                                    {header.isPlaceholder\r\n                                        ? null\r\n                                        : flexRender(\r\n                                            header.column.columnDef.footer,\r\n                                            header.getContext()\r\n                                    )}\r\n                                </th>\r\n                            ))}\r\n                        </tr>\r\n                    ))}\r\n                </tfoot>\r\n            </table>\r\n            \r\n            <div className=\"mt-10\">\r\n                <button \r\n                    onClick={() => setShowForm(!showForm)}\r\n                    className={`block w-full rounded-md px-3.5 py-2.5 text-center text-sm font-semibold shadow-sm bg-gtgold text-white hover:bg-gtgoldlight focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600`}\r\n                >\r\n                    {showForm ? \"Close Form\" : \"Submit New Project\"}\r\n                </button>\r\n            </div>\r\n            \r\n            {showForm && <ProjectForm />}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProjectExplorer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}