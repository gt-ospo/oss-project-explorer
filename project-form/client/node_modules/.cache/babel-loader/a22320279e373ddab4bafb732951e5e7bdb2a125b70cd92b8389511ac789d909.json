{"ast":null,"code":"// pkg/dist-src/version.js\nvar VERSION = \"10.2.0\";\n\n// pkg/dist-src/generated/endpoints.js\nvar Endpoints = {\n  actions: {\n    addCustomLabelsToSelfHostedRunnerForOrg: [\"POST /orgs/{org}/actions/runners/{runner_id}/labels\"],\n    addCustomLabelsToSelfHostedRunnerForRepo: [\"POST /repos/{owner}/{repo}/actions/runners/{runner_id}/labels\"],\n    addSelectedRepoToOrgSecret: [\"PUT /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}\"],\n    addSelectedRepoToOrgVariable: [\"PUT /orgs/{org}/actions/variables/{name}/repositories/{repository_id}\"],\n    approveWorkflowRun: [\"POST /repos/{owner}/{repo}/actions/runs/{run_id}/approve\"],\n    cancelWorkflowRun: [\"POST /repos/{owner}/{repo}/actions/runs/{run_id}/cancel\"],\n    createEnvironmentVariable: [\"POST /repositories/{repository_id}/environments/{environment_name}/variables\"],\n    createOrUpdateEnvironmentSecret: [\"PUT /repositories/{repository_id}/environments/{environment_name}/secrets/{secret_name}\"],\n    createOrUpdateOrgSecret: [\"PUT /orgs/{org}/actions/secrets/{secret_name}\"],\n    createOrUpdateRepoSecret: [\"PUT /repos/{owner}/{repo}/actions/secrets/{secret_name}\"],\n    createOrgVariable: [\"POST /orgs/{org}/actions/variables\"],\n    createRegistrationTokenForOrg: [\"POST /orgs/{org}/actions/runners/registration-token\"],\n    createRegistrationTokenForRepo: [\"POST /repos/{owner}/{repo}/actions/runners/registration-token\"],\n    createRemoveTokenForOrg: [\"POST /orgs/{org}/actions/runners/remove-token\"],\n    createRemoveTokenForRepo: [\"POST /repos/{owner}/{repo}/actions/runners/remove-token\"],\n    createRepoVariable: [\"POST /repos/{owner}/{repo}/actions/variables\"],\n    createWorkflowDispatch: [\"POST /repos/{owner}/{repo}/actions/workflows/{workflow_id}/dispatches\"],\n    deleteActionsCacheById: [\"DELETE /repos/{owner}/{repo}/actions/caches/{cache_id}\"],\n    deleteActionsCacheByKey: [\"DELETE /repos/{owner}/{repo}/actions/caches{?key,ref}\"],\n    deleteArtifact: [\"DELETE /repos/{owner}/{repo}/actions/artifacts/{artifact_id}\"],\n    deleteEnvironmentSecret: [\"DELETE /repositories/{repository_id}/environments/{environment_name}/secrets/{secret_name}\"],\n    deleteEnvironmentVariable: [\"DELETE /repositories/{repository_id}/environments/{environment_name}/variables/{name}\"],\n    deleteOrgSecret: [\"DELETE /orgs/{org}/actions/secrets/{secret_name}\"],\n    deleteOrgVariable: [\"DELETE /orgs/{org}/actions/variables/{name}\"],\n    deleteRepoSecret: [\"DELETE /repos/{owner}/{repo}/actions/secrets/{secret_name}\"],\n    deleteRepoVariable: [\"DELETE /repos/{owner}/{repo}/actions/variables/{name}\"],\n    deleteSelfHostedRunnerFromOrg: [\"DELETE /orgs/{org}/actions/runners/{runner_id}\"],\n    deleteSelfHostedRunnerFromRepo: [\"DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}\"],\n    deleteWorkflowRun: [\"DELETE /repos/{owner}/{repo}/actions/runs/{run_id}\"],\n    deleteWorkflowRunLogs: [\"DELETE /repos/{owner}/{repo}/actions/runs/{run_id}/logs\"],\n    disableSelectedRepositoryGithubActionsOrganization: [\"DELETE /orgs/{org}/actions/permissions/repositories/{repository_id}\"],\n    disableWorkflow: [\"PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/disable\"],\n    downloadArtifact: [\"GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}/{archive_format}\"],\n    downloadJobLogsForWorkflowRun: [\"GET /repos/{owner}/{repo}/actions/jobs/{job_id}/logs\"],\n    downloadWorkflowRunAttemptLogs: [\"GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/logs\"],\n    downloadWorkflowRunLogs: [\"GET /repos/{owner}/{repo}/actions/runs/{run_id}/logs\"],\n    enableSelectedRepositoryGithubActionsOrganization: [\"PUT /orgs/{org}/actions/permissions/repositories/{repository_id}\"],\n    enableWorkflow: [\"PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/enable\"],\n    forceCancelWorkflowRun: [\"POST /repos/{owner}/{repo}/actions/runs/{run_id}/force-cancel\"],\n    generateRunnerJitconfigForOrg: [\"POST /orgs/{org}/actions/runners/generate-jitconfig\"],\n    generateRunnerJitconfigForRepo: [\"POST /repos/{owner}/{repo}/actions/runners/generate-jitconfig\"],\n    getActionsCacheList: [\"GET /repos/{owner}/{repo}/actions/caches\"],\n    getActionsCacheUsage: [\"GET /repos/{owner}/{repo}/actions/cache/usage\"],\n    getActionsCacheUsageByRepoForOrg: [\"GET /orgs/{org}/actions/cache/usage-by-repository\"],\n    getActionsCacheUsageForOrg: [\"GET /orgs/{org}/actions/cache/usage\"],\n    getAllowedActionsOrganization: [\"GET /orgs/{org}/actions/permissions/selected-actions\"],\n    getAllowedActionsRepository: [\"GET /repos/{owner}/{repo}/actions/permissions/selected-actions\"],\n    getArtifact: [\"GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}\"],\n    getEnvironmentPublicKey: [\"GET /repositories/{repository_id}/environments/{environment_name}/secrets/public-key\"],\n    getEnvironmentSecret: [\"GET /repositories/{repository_id}/environments/{environment_name}/secrets/{secret_name}\"],\n    getEnvironmentVariable: [\"GET /repositories/{repository_id}/environments/{environment_name}/variables/{name}\"],\n    getGithubActionsDefaultWorkflowPermissionsOrganization: [\"GET /orgs/{org}/actions/permissions/workflow\"],\n    getGithubActionsDefaultWorkflowPermissionsRepository: [\"GET /repos/{owner}/{repo}/actions/permissions/workflow\"],\n    getGithubActionsPermissionsOrganization: [\"GET /orgs/{org}/actions/permissions\"],\n    getGithubActionsPermissionsRepository: [\"GET /repos/{owner}/{repo}/actions/permissions\"],\n    getJobForWorkflowRun: [\"GET /repos/{owner}/{repo}/actions/jobs/{job_id}\"],\n    getOrgPublicKey: [\"GET /orgs/{org}/actions/secrets/public-key\"],\n    getOrgSecret: [\"GET /orgs/{org}/actions/secrets/{secret_name}\"],\n    getOrgVariable: [\"GET /orgs/{org}/actions/variables/{name}\"],\n    getPendingDeploymentsForRun: [\"GET /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments\"],\n    getRepoPermissions: [\"GET /repos/{owner}/{repo}/actions/permissions\", {}, {\n      renamed: [\"actions\", \"getGithubActionsPermissionsRepository\"]\n    }],\n    getRepoPublicKey: [\"GET /repos/{owner}/{repo}/actions/secrets/public-key\"],\n    getRepoSecret: [\"GET /repos/{owner}/{repo}/actions/secrets/{secret_name}\"],\n    getRepoVariable: [\"GET /repos/{owner}/{repo}/actions/variables/{name}\"],\n    getReviewsForRun: [\"GET /repos/{owner}/{repo}/actions/runs/{run_id}/approvals\"],\n    getSelfHostedRunnerForOrg: [\"GET /orgs/{org}/actions/runners/{runner_id}\"],\n    getSelfHostedRunnerForRepo: [\"GET /repos/{owner}/{repo}/actions/runners/{runner_id}\"],\n    getWorkflow: [\"GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}\"],\n    getWorkflowAccessToRepository: [\"GET /repos/{owner}/{repo}/actions/permissions/access\"],\n    getWorkflowRun: [\"GET /repos/{owner}/{repo}/actions/runs/{run_id}\"],\n    getWorkflowRunAttempt: [\"GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}\"],\n    getWorkflowRunUsage: [\"GET /repos/{owner}/{repo}/actions/runs/{run_id}/timing\"],\n    getWorkflowUsage: [\"GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/timing\"],\n    listArtifactsForRepo: [\"GET /repos/{owner}/{repo}/actions/artifacts\"],\n    listEnvironmentSecrets: [\"GET /repositories/{repository_id}/environments/{environment_name}/secrets\"],\n    listEnvironmentVariables: [\"GET /repositories/{repository_id}/environments/{environment_name}/variables\"],\n    listJobsForWorkflowRun: [\"GET /repos/{owner}/{repo}/actions/runs/{run_id}/jobs\"],\n    listJobsForWorkflowRunAttempt: [\"GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/jobs\"],\n    listLabelsForSelfHostedRunnerForOrg: [\"GET /orgs/{org}/actions/runners/{runner_id}/labels\"],\n    listLabelsForSelfHostedRunnerForRepo: [\"GET /repos/{owner}/{repo}/actions/runners/{runner_id}/labels\"],\n    listOrgSecrets: [\"GET /orgs/{org}/actions/secrets\"],\n    listOrgVariables: [\"GET /orgs/{org}/actions/variables\"],\n    listRepoOrganizationSecrets: [\"GET /repos/{owner}/{repo}/actions/organization-secrets\"],\n    listRepoOrganizationVariables: [\"GET /repos/{owner}/{repo}/actions/organization-variables\"],\n    listRepoSecrets: [\"GET /repos/{owner}/{repo}/actions/secrets\"],\n    listRepoVariables: [\"GET /repos/{owner}/{repo}/actions/variables\"],\n    listRepoWorkflows: [\"GET /repos/{owner}/{repo}/actions/workflows\"],\n    listRunnerApplicationsForOrg: [\"GET /orgs/{org}/actions/runners/downloads\"],\n    listRunnerApplicationsForRepo: [\"GET /repos/{owner}/{repo}/actions/runners/downloads\"],\n    listSelectedReposForOrgSecret: [\"GET /orgs/{org}/actions/secrets/{secret_name}/repositories\"],\n    listSelectedReposForOrgVariable: [\"GET /orgs/{org}/actions/variables/{name}/repositories\"],\n    listSelectedRepositoriesEnabledGithubActionsOrganization: [\"GET /orgs/{org}/actions/permissions/repositories\"],\n    listSelfHostedRunnersForOrg: [\"GET /orgs/{org}/actions/runners\"],\n    listSelfHostedRunnersForRepo: [\"GET /repos/{owner}/{repo}/actions/runners\"],\n    listWorkflowRunArtifacts: [\"GET /repos/{owner}/{repo}/actions/runs/{run_id}/artifacts\"],\n    listWorkflowRuns: [\"GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs\"],\n    listWorkflowRunsForRepo: [\"GET /repos/{owner}/{repo}/actions/runs\"],\n    reRunJobForWorkflowRun: [\"POST /repos/{owner}/{repo}/actions/jobs/{job_id}/rerun\"],\n    reRunWorkflow: [\"POST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun\"],\n    reRunWorkflowFailedJobs: [\"POST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun-failed-jobs\"],\n    removeAllCustomLabelsFromSelfHostedRunnerForOrg: [\"DELETE /orgs/{org}/actions/runners/{runner_id}/labels\"],\n    removeAllCustomLabelsFromSelfHostedRunnerForRepo: [\"DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}/labels\"],\n    removeCustomLabelFromSelfHostedRunnerForOrg: [\"DELETE /orgs/{org}/actions/runners/{runner_id}/labels/{name}\"],\n    removeCustomLabelFromSelfHostedRunnerForRepo: [\"DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}/labels/{name}\"],\n    removeSelectedRepoFromOrgSecret: [\"DELETE /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}\"],\n    removeSelectedRepoFromOrgVariable: [\"DELETE /orgs/{org}/actions/variables/{name}/repositories/{repository_id}\"],\n    reviewCustomGatesForRun: [\"POST /repos/{owner}/{repo}/actions/runs/{run_id}/deployment_protection_rule\"],\n    reviewPendingDeploymentsForRun: [\"POST /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments\"],\n    setAllowedActionsOrganization: [\"PUT /orgs/{org}/actions/permissions/selected-actions\"],\n    setAllowedActionsRepository: [\"PUT /repos/{owner}/{repo}/actions/permissions/selected-actions\"],\n    setCustomLabelsForSelfHostedRunnerForOrg: [\"PUT /orgs/{org}/actions/runners/{runner_id}/labels\"],\n    setCustomLabelsForSelfHostedRunnerForRepo: [\"PUT /repos/{owner}/{repo}/actions/runners/{runner_id}/labels\"],\n    setGithubActionsDefaultWorkflowPermissionsOrganization: [\"PUT /orgs/{org}/actions/permissions/workflow\"],\n    setGithubActionsDefaultWorkflowPermissionsRepository: [\"PUT /repos/{owner}/{repo}/actions/permissions/workflow\"],\n    setGithubActionsPermissionsOrganization: [\"PUT /orgs/{org}/actions/permissions\"],\n    setGithubActionsPermissionsRepository: [\"PUT /repos/{owner}/{repo}/actions/permissions\"],\n    setSelectedReposForOrgSecret: [\"PUT /orgs/{org}/actions/secrets/{secret_name}/repositories\"],\n    setSelectedReposForOrgVariable: [\"PUT /orgs/{org}/actions/variables/{name}/repositories\"],\n    setSelectedRepositoriesEnabledGithubActionsOrganization: [\"PUT /orgs/{org}/actions/permissions/repositories\"],\n    setWorkflowAccessToRepository: [\"PUT /repos/{owner}/{repo}/actions/permissions/access\"],\n    updateEnvironmentVariable: [\"PATCH /repositories/{repository_id}/environments/{environment_name}/variables/{name}\"],\n    updateOrgVariable: [\"PATCH /orgs/{org}/actions/variables/{name}\"],\n    updateRepoVariable: [\"PATCH /repos/{owner}/{repo}/actions/variables/{name}\"]\n  },\n  activity: {\n    checkRepoIsStarredByAuthenticatedUser: [\"GET /user/starred/{owner}/{repo}\"],\n    deleteRepoSubscription: [\"DELETE /repos/{owner}/{repo}/subscription\"],\n    deleteThreadSubscription: [\"DELETE /notifications/threads/{thread_id}/subscription\"],\n    getFeeds: [\"GET /feeds\"],\n    getRepoSubscription: [\"GET /repos/{owner}/{repo}/subscription\"],\n    getThread: [\"GET /notifications/threads/{thread_id}\"],\n    getThreadSubscriptionForAuthenticatedUser: [\"GET /notifications/threads/{thread_id}/subscription\"],\n    listEventsForAuthenticatedUser: [\"GET /users/{username}/events\"],\n    listNotificationsForAuthenticatedUser: [\"GET /notifications\"],\n    listOrgEventsForAuthenticatedUser: [\"GET /users/{username}/events/orgs/{org}\"],\n    listPublicEvents: [\"GET /events\"],\n    listPublicEventsForRepoNetwork: [\"GET /networks/{owner}/{repo}/events\"],\n    listPublicEventsForUser: [\"GET /users/{username}/events/public\"],\n    listPublicOrgEvents: [\"GET /orgs/{org}/events\"],\n    listReceivedEventsForUser: [\"GET /users/{username}/received_events\"],\n    listReceivedPublicEventsForUser: [\"GET /users/{username}/received_events/public\"],\n    listRepoEvents: [\"GET /repos/{owner}/{repo}/events\"],\n    listRepoNotificationsForAuthenticatedUser: [\"GET /repos/{owner}/{repo}/notifications\"],\n    listReposStarredByAuthenticatedUser: [\"GET /user/starred\"],\n    listReposStarredByUser: [\"GET /users/{username}/starred\"],\n    listReposWatchedByUser: [\"GET /users/{username}/subscriptions\"],\n    listStargazersForRepo: [\"GET /repos/{owner}/{repo}/stargazers\"],\n    listWatchedReposForAuthenticatedUser: [\"GET /user/subscriptions\"],\n    listWatchersForRepo: [\"GET /repos/{owner}/{repo}/subscribers\"],\n    markNotificationsAsRead: [\"PUT /notifications\"],\n    markRepoNotificationsAsRead: [\"PUT /repos/{owner}/{repo}/notifications\"],\n    markThreadAsRead: [\"PATCH /notifications/threads/{thread_id}\"],\n    setRepoSubscription: [\"PUT /repos/{owner}/{repo}/subscription\"],\n    setThreadSubscription: [\"PUT /notifications/threads/{thread_id}/subscription\"],\n    starRepoForAuthenticatedUser: [\"PUT /user/starred/{owner}/{repo}\"],\n    unstarRepoForAuthenticatedUser: [\"DELETE /user/starred/{owner}/{repo}\"]\n  },\n  apps: {\n    addRepoToInstallation: [\"PUT /user/installations/{installation_id}/repositories/{repository_id}\", {}, {\n      renamed: [\"apps\", \"addRepoToInstallationForAuthenticatedUser\"]\n    }],\n    addRepoToInstallationForAuthenticatedUser: [\"PUT /user/installations/{installation_id}/repositories/{repository_id}\"],\n    checkToken: [\"POST /applications/{client_id}/token\"],\n    createFromManifest: [\"POST /app-manifests/{code}/conversions\"],\n    createInstallationAccessToken: [\"POST /app/installations/{installation_id}/access_tokens\"],\n    deleteAuthorization: [\"DELETE /applications/{client_id}/grant\"],\n    deleteInstallation: [\"DELETE /app/installations/{installation_id}\"],\n    deleteToken: [\"DELETE /applications/{client_id}/token\"],\n    getAuthenticated: [\"GET /app\"],\n    getBySlug: [\"GET /apps/{app_slug}\"],\n    getInstallation: [\"GET /app/installations/{installation_id}\"],\n    getOrgInstallation: [\"GET /orgs/{org}/installation\"],\n    getRepoInstallation: [\"GET /repos/{owner}/{repo}/installation\"],\n    getSubscriptionPlanForAccount: [\"GET /marketplace_listing/accounts/{account_id}\"],\n    getSubscriptionPlanForAccountStubbed: [\"GET /marketplace_listing/stubbed/accounts/{account_id}\"],\n    getUserInstallation: [\"GET /users/{username}/installation\"],\n    getWebhookConfigForApp: [\"GET /app/hook/config\"],\n    getWebhookDelivery: [\"GET /app/hook/deliveries/{delivery_id}\"],\n    listAccountsForPlan: [\"GET /marketplace_listing/plans/{plan_id}/accounts\"],\n    listAccountsForPlanStubbed: [\"GET /marketplace_listing/stubbed/plans/{plan_id}/accounts\"],\n    listInstallationReposForAuthenticatedUser: [\"GET /user/installations/{installation_id}/repositories\"],\n    listInstallationRequestsForAuthenticatedApp: [\"GET /app/installation-requests\"],\n    listInstallations: [\"GET /app/installations\"],\n    listInstallationsForAuthenticatedUser: [\"GET /user/installations\"],\n    listPlans: [\"GET /marketplace_listing/plans\"],\n    listPlansStubbed: [\"GET /marketplace_listing/stubbed/plans\"],\n    listReposAccessibleToInstallation: [\"GET /installation/repositories\"],\n    listSubscriptionsForAuthenticatedUser: [\"GET /user/marketplace_purchases\"],\n    listSubscriptionsForAuthenticatedUserStubbed: [\"GET /user/marketplace_purchases/stubbed\"],\n    listWebhookDeliveries: [\"GET /app/hook/deliveries\"],\n    redeliverWebhookDelivery: [\"POST /app/hook/deliveries/{delivery_id}/attempts\"],\n    removeRepoFromInstallation: [\"DELETE /user/installations/{installation_id}/repositories/{repository_id}\", {}, {\n      renamed: [\"apps\", \"removeRepoFromInstallationForAuthenticatedUser\"]\n    }],\n    removeRepoFromInstallationForAuthenticatedUser: [\"DELETE /user/installations/{installation_id}/repositories/{repository_id}\"],\n    resetToken: [\"PATCH /applications/{client_id}/token\"],\n    revokeInstallationAccessToken: [\"DELETE /installation/token\"],\n    scopeToken: [\"POST /applications/{client_id}/token/scoped\"],\n    suspendInstallation: [\"PUT /app/installations/{installation_id}/suspended\"],\n    unsuspendInstallation: [\"DELETE /app/installations/{installation_id}/suspended\"],\n    updateWebhookConfigForApp: [\"PATCH /app/hook/config\"]\n  },\n  billing: {\n    getGithubActionsBillingOrg: [\"GET /orgs/{org}/settings/billing/actions\"],\n    getGithubActionsBillingUser: [\"GET /users/{username}/settings/billing/actions\"],\n    getGithubPackagesBillingOrg: [\"GET /orgs/{org}/settings/billing/packages\"],\n    getGithubPackagesBillingUser: [\"GET /users/{username}/settings/billing/packages\"],\n    getSharedStorageBillingOrg: [\"GET /orgs/{org}/settings/billing/shared-storage\"],\n    getSharedStorageBillingUser: [\"GET /users/{username}/settings/billing/shared-storage\"]\n  },\n  checks: {\n    create: [\"POST /repos/{owner}/{repo}/check-runs\"],\n    createSuite: [\"POST /repos/{owner}/{repo}/check-suites\"],\n    get: [\"GET /repos/{owner}/{repo}/check-runs/{check_run_id}\"],\n    getSuite: [\"GET /repos/{owner}/{repo}/check-suites/{check_suite_id}\"],\n    listAnnotations: [\"GET /repos/{owner}/{repo}/check-runs/{check_run_id}/annotations\"],\n    listForRef: [\"GET /repos/{owner}/{repo}/commits/{ref}/check-runs\"],\n    listForSuite: [\"GET /repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runs\"],\n    listSuitesForRef: [\"GET /repos/{owner}/{repo}/commits/{ref}/check-suites\"],\n    rerequestRun: [\"POST /repos/{owner}/{repo}/check-runs/{check_run_id}/rerequest\"],\n    rerequestSuite: [\"POST /repos/{owner}/{repo}/check-suites/{check_suite_id}/rerequest\"],\n    setSuitesPreferences: [\"PATCH /repos/{owner}/{repo}/check-suites/preferences\"],\n    update: [\"PATCH /repos/{owner}/{repo}/check-runs/{check_run_id}\"]\n  },\n  codeScanning: {\n    deleteAnalysis: [\"DELETE /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}{?confirm_delete}\"],\n    getAlert: [\"GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}\", {}, {\n      renamedParameters: {\n        alert_id: \"alert_number\"\n      }\n    }],\n    getAnalysis: [\"GET /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}\"],\n    getCodeqlDatabase: [\"GET /repos/{owner}/{repo}/code-scanning/codeql/databases/{language}\"],\n    getDefaultSetup: [\"GET /repos/{owner}/{repo}/code-scanning/default-setup\"],\n    getSarif: [\"GET /repos/{owner}/{repo}/code-scanning/sarifs/{sarif_id}\"],\n    listAlertInstances: [\"GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances\"],\n    listAlertsForOrg: [\"GET /orgs/{org}/code-scanning/alerts\"],\n    listAlertsForRepo: [\"GET /repos/{owner}/{repo}/code-scanning/alerts\"],\n    listAlertsInstances: [\"GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances\", {}, {\n      renamed: [\"codeScanning\", \"listAlertInstances\"]\n    }],\n    listCodeqlDatabases: [\"GET /repos/{owner}/{repo}/code-scanning/codeql/databases\"],\n    listRecentAnalyses: [\"GET /repos/{owner}/{repo}/code-scanning/analyses\"],\n    updateAlert: [\"PATCH /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}\"],\n    updateDefaultSetup: [\"PATCH /repos/{owner}/{repo}/code-scanning/default-setup\"],\n    uploadSarif: [\"POST /repos/{owner}/{repo}/code-scanning/sarifs\"]\n  },\n  codesOfConduct: {\n    getAllCodesOfConduct: [\"GET /codes_of_conduct\"],\n    getConductCode: [\"GET /codes_of_conduct/{key}\"]\n  },\n  codespaces: {\n    addRepositoryForSecretForAuthenticatedUser: [\"PUT /user/codespaces/secrets/{secret_name}/repositories/{repository_id}\"],\n    addSelectedRepoToOrgSecret: [\"PUT /orgs/{org}/codespaces/secrets/{secret_name}/repositories/{repository_id}\"],\n    checkPermissionsForDevcontainer: [\"GET /repos/{owner}/{repo}/codespaces/permissions_check\"],\n    codespaceMachinesForAuthenticatedUser: [\"GET /user/codespaces/{codespace_name}/machines\"],\n    createForAuthenticatedUser: [\"POST /user/codespaces\"],\n    createOrUpdateOrgSecret: [\"PUT /orgs/{org}/codespaces/secrets/{secret_name}\"],\n    createOrUpdateRepoSecret: [\"PUT /repos/{owner}/{repo}/codespaces/secrets/{secret_name}\"],\n    createOrUpdateSecretForAuthenticatedUser: [\"PUT /user/codespaces/secrets/{secret_name}\"],\n    createWithPrForAuthenticatedUser: [\"POST /repos/{owner}/{repo}/pulls/{pull_number}/codespaces\"],\n    createWithRepoForAuthenticatedUser: [\"POST /repos/{owner}/{repo}/codespaces\"],\n    deleteForAuthenticatedUser: [\"DELETE /user/codespaces/{codespace_name}\"],\n    deleteFromOrganization: [\"DELETE /orgs/{org}/members/{username}/codespaces/{codespace_name}\"],\n    deleteOrgSecret: [\"DELETE /orgs/{org}/codespaces/secrets/{secret_name}\"],\n    deleteRepoSecret: [\"DELETE /repos/{owner}/{repo}/codespaces/secrets/{secret_name}\"],\n    deleteSecretForAuthenticatedUser: [\"DELETE /user/codespaces/secrets/{secret_name}\"],\n    exportForAuthenticatedUser: [\"POST /user/codespaces/{codespace_name}/exports\"],\n    getCodespacesForUserInOrg: [\"GET /orgs/{org}/members/{username}/codespaces\"],\n    getExportDetailsForAuthenticatedUser: [\"GET /user/codespaces/{codespace_name}/exports/{export_id}\"],\n    getForAuthenticatedUser: [\"GET /user/codespaces/{codespace_name}\"],\n    getOrgPublicKey: [\"GET /orgs/{org}/codespaces/secrets/public-key\"],\n    getOrgSecret: [\"GET /orgs/{org}/codespaces/secrets/{secret_name}\"],\n    getPublicKeyForAuthenticatedUser: [\"GET /user/codespaces/secrets/public-key\"],\n    getRepoPublicKey: [\"GET /repos/{owner}/{repo}/codespaces/secrets/public-key\"],\n    getRepoSecret: [\"GET /repos/{owner}/{repo}/codespaces/secrets/{secret_name}\"],\n    getSecretForAuthenticatedUser: [\"GET /user/codespaces/secrets/{secret_name}\"],\n    listDevcontainersInRepositoryForAuthenticatedUser: [\"GET /repos/{owner}/{repo}/codespaces/devcontainers\"],\n    listForAuthenticatedUser: [\"GET /user/codespaces\"],\n    listInOrganization: [\"GET /orgs/{org}/codespaces\", {}, {\n      renamedParameters: {\n        org_id: \"org\"\n      }\n    }],\n    listInRepositoryForAuthenticatedUser: [\"GET /repos/{owner}/{repo}/codespaces\"],\n    listOrgSecrets: [\"GET /orgs/{org}/codespaces/secrets\"],\n    listRepoSecrets: [\"GET /repos/{owner}/{repo}/codespaces/secrets\"],\n    listRepositoriesForSecretForAuthenticatedUser: [\"GET /user/codespaces/secrets/{secret_name}/repositories\"],\n    listSecretsForAuthenticatedUser: [\"GET /user/codespaces/secrets\"],\n    listSelectedReposForOrgSecret: [\"GET /orgs/{org}/codespaces/secrets/{secret_name}/repositories\"],\n    preFlightWithRepoForAuthenticatedUser: [\"GET /repos/{owner}/{repo}/codespaces/new\"],\n    publishForAuthenticatedUser: [\"POST /user/codespaces/{codespace_name}/publish\"],\n    removeRepositoryForSecretForAuthenticatedUser: [\"DELETE /user/codespaces/secrets/{secret_name}/repositories/{repository_id}\"],\n    removeSelectedRepoFromOrgSecret: [\"DELETE /orgs/{org}/codespaces/secrets/{secret_name}/repositories/{repository_id}\"],\n    repoMachinesForAuthenticatedUser: [\"GET /repos/{owner}/{repo}/codespaces/machines\"],\n    setRepositoriesForSecretForAuthenticatedUser: [\"PUT /user/codespaces/secrets/{secret_name}/repositories\"],\n    setSelectedReposForOrgSecret: [\"PUT /orgs/{org}/codespaces/secrets/{secret_name}/repositories\"],\n    startForAuthenticatedUser: [\"POST /user/codespaces/{codespace_name}/start\"],\n    stopForAuthenticatedUser: [\"POST /user/codespaces/{codespace_name}/stop\"],\n    stopInOrganization: [\"POST /orgs/{org}/members/{username}/codespaces/{codespace_name}/stop\"],\n    updateForAuthenticatedUser: [\"PATCH /user/codespaces/{codespace_name}\"]\n  },\n  copilot: {\n    addCopilotForBusinessSeatsForTeams: [\"POST /orgs/{org}/copilot/billing/selected_teams\"],\n    addCopilotForBusinessSeatsForUsers: [\"POST /orgs/{org}/copilot/billing/selected_users\"],\n    cancelCopilotSeatAssignmentForTeams: [\"DELETE /orgs/{org}/copilot/billing/selected_teams\"],\n    cancelCopilotSeatAssignmentForUsers: [\"DELETE /orgs/{org}/copilot/billing/selected_users\"],\n    getCopilotOrganizationDetails: [\"GET /orgs/{org}/copilot/billing\"],\n    getCopilotSeatDetailsForUser: [\"GET /orgs/{org}/members/{username}/copilot\"],\n    listCopilotSeats: [\"GET /orgs/{org}/copilot/billing/seats\"]\n  },\n  dependabot: {\n    addSelectedRepoToOrgSecret: [\"PUT /orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}\"],\n    createOrUpdateOrgSecret: [\"PUT /orgs/{org}/dependabot/secrets/{secret_name}\"],\n    createOrUpdateRepoSecret: [\"PUT /repos/{owner}/{repo}/dependabot/secrets/{secret_name}\"],\n    deleteOrgSecret: [\"DELETE /orgs/{org}/dependabot/secrets/{secret_name}\"],\n    deleteRepoSecret: [\"DELETE /repos/{owner}/{repo}/dependabot/secrets/{secret_name}\"],\n    getAlert: [\"GET /repos/{owner}/{repo}/dependabot/alerts/{alert_number}\"],\n    getOrgPublicKey: [\"GET /orgs/{org}/dependabot/secrets/public-key\"],\n    getOrgSecret: [\"GET /orgs/{org}/dependabot/secrets/{secret_name}\"],\n    getRepoPublicKey: [\"GET /repos/{owner}/{repo}/dependabot/secrets/public-key\"],\n    getRepoSecret: [\"GET /repos/{owner}/{repo}/dependabot/secrets/{secret_name}\"],\n    listAlertsForEnterprise: [\"GET /enterprises/{enterprise}/dependabot/alerts\"],\n    listAlertsForOrg: [\"GET /orgs/{org}/dependabot/alerts\"],\n    listAlertsForRepo: [\"GET /repos/{owner}/{repo}/dependabot/alerts\"],\n    listOrgSecrets: [\"GET /orgs/{org}/dependabot/secrets\"],\n    listRepoSecrets: [\"GET /repos/{owner}/{repo}/dependabot/secrets\"],\n    listSelectedReposForOrgSecret: [\"GET /orgs/{org}/dependabot/secrets/{secret_name}/repositories\"],\n    removeSelectedRepoFromOrgSecret: [\"DELETE /orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}\"],\n    setSelectedReposForOrgSecret: [\"PUT /orgs/{org}/dependabot/secrets/{secret_name}/repositories\"],\n    updateAlert: [\"PATCH /repos/{owner}/{repo}/dependabot/alerts/{alert_number}\"]\n  },\n  dependencyGraph: {\n    createRepositorySnapshot: [\"POST /repos/{owner}/{repo}/dependency-graph/snapshots\"],\n    diffRange: [\"GET /repos/{owner}/{repo}/dependency-graph/compare/{basehead}\"],\n    exportSbom: [\"GET /repos/{owner}/{repo}/dependency-graph/sbom\"]\n  },\n  emojis: {\n    get: [\"GET /emojis\"]\n  },\n  gists: {\n    checkIsStarred: [\"GET /gists/{gist_id}/star\"],\n    create: [\"POST /gists\"],\n    createComment: [\"POST /gists/{gist_id}/comments\"],\n    delete: [\"DELETE /gists/{gist_id}\"],\n    deleteComment: [\"DELETE /gists/{gist_id}/comments/{comment_id}\"],\n    fork: [\"POST /gists/{gist_id}/forks\"],\n    get: [\"GET /gists/{gist_id}\"],\n    getComment: [\"GET /gists/{gist_id}/comments/{comment_id}\"],\n    getRevision: [\"GET /gists/{gist_id}/{sha}\"],\n    list: [\"GET /gists\"],\n    listComments: [\"GET /gists/{gist_id}/comments\"],\n    listCommits: [\"GET /gists/{gist_id}/commits\"],\n    listForUser: [\"GET /users/{username}/gists\"],\n    listForks: [\"GET /gists/{gist_id}/forks\"],\n    listPublic: [\"GET /gists/public\"],\n    listStarred: [\"GET /gists/starred\"],\n    star: [\"PUT /gists/{gist_id}/star\"],\n    unstar: [\"DELETE /gists/{gist_id}/star\"],\n    update: [\"PATCH /gists/{gist_id}\"],\n    updateComment: [\"PATCH /gists/{gist_id}/comments/{comment_id}\"]\n  },\n  git: {\n    createBlob: [\"POST /repos/{owner}/{repo}/git/blobs\"],\n    createCommit: [\"POST /repos/{owner}/{repo}/git/commits\"],\n    createRef: [\"POST /repos/{owner}/{repo}/git/refs\"],\n    createTag: [\"POST /repos/{owner}/{repo}/git/tags\"],\n    createTree: [\"POST /repos/{owner}/{repo}/git/trees\"],\n    deleteRef: [\"DELETE /repos/{owner}/{repo}/git/refs/{ref}\"],\n    getBlob: [\"GET /repos/{owner}/{repo}/git/blobs/{file_sha}\"],\n    getCommit: [\"GET /repos/{owner}/{repo}/git/commits/{commit_sha}\"],\n    getRef: [\"GET /repos/{owner}/{repo}/git/ref/{ref}\"],\n    getTag: [\"GET /repos/{owner}/{repo}/git/tags/{tag_sha}\"],\n    getTree: [\"GET /repos/{owner}/{repo}/git/trees/{tree_sha}\"],\n    listMatchingRefs: [\"GET /repos/{owner}/{repo}/git/matching-refs/{ref}\"],\n    updateRef: [\"PATCH /repos/{owner}/{repo}/git/refs/{ref}\"]\n  },\n  gitignore: {\n    getAllTemplates: [\"GET /gitignore/templates\"],\n    getTemplate: [\"GET /gitignore/templates/{name}\"]\n  },\n  interactions: {\n    getRestrictionsForAuthenticatedUser: [\"GET /user/interaction-limits\"],\n    getRestrictionsForOrg: [\"GET /orgs/{org}/interaction-limits\"],\n    getRestrictionsForRepo: [\"GET /repos/{owner}/{repo}/interaction-limits\"],\n    getRestrictionsForYourPublicRepos: [\"GET /user/interaction-limits\", {}, {\n      renamed: [\"interactions\", \"getRestrictionsForAuthenticatedUser\"]\n    }],\n    removeRestrictionsForAuthenticatedUser: [\"DELETE /user/interaction-limits\"],\n    removeRestrictionsForOrg: [\"DELETE /orgs/{org}/interaction-limits\"],\n    removeRestrictionsForRepo: [\"DELETE /repos/{owner}/{repo}/interaction-limits\"],\n    removeRestrictionsForYourPublicRepos: [\"DELETE /user/interaction-limits\", {}, {\n      renamed: [\"interactions\", \"removeRestrictionsForAuthenticatedUser\"]\n    }],\n    setRestrictionsForAuthenticatedUser: [\"PUT /user/interaction-limits\"],\n    setRestrictionsForOrg: [\"PUT /orgs/{org}/interaction-limits\"],\n    setRestrictionsForRepo: [\"PUT /repos/{owner}/{repo}/interaction-limits\"],\n    setRestrictionsForYourPublicRepos: [\"PUT /user/interaction-limits\", {}, {\n      renamed: [\"interactions\", \"setRestrictionsForAuthenticatedUser\"]\n    }]\n  },\n  issues: {\n    addAssignees: [\"POST /repos/{owner}/{repo}/issues/{issue_number}/assignees\"],\n    addLabels: [\"POST /repos/{owner}/{repo}/issues/{issue_number}/labels\"],\n    checkUserCanBeAssigned: [\"GET /repos/{owner}/{repo}/assignees/{assignee}\"],\n    checkUserCanBeAssignedToIssue: [\"GET /repos/{owner}/{repo}/issues/{issue_number}/assignees/{assignee}\"],\n    create: [\"POST /repos/{owner}/{repo}/issues\"],\n    createComment: [\"POST /repos/{owner}/{repo}/issues/{issue_number}/comments\"],\n    createLabel: [\"POST /repos/{owner}/{repo}/labels\"],\n    createMilestone: [\"POST /repos/{owner}/{repo}/milestones\"],\n    deleteComment: [\"DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}\"],\n    deleteLabel: [\"DELETE /repos/{owner}/{repo}/labels/{name}\"],\n    deleteMilestone: [\"DELETE /repos/{owner}/{repo}/milestones/{milestone_number}\"],\n    get: [\"GET /repos/{owner}/{repo}/issues/{issue_number}\"],\n    getComment: [\"GET /repos/{owner}/{repo}/issues/comments/{comment_id}\"],\n    getEvent: [\"GET /repos/{owner}/{repo}/issues/events/{event_id}\"],\n    getLabel: [\"GET /repos/{owner}/{repo}/labels/{name}\"],\n    getMilestone: [\"GET /repos/{owner}/{repo}/milestones/{milestone_number}\"],\n    list: [\"GET /issues\"],\n    listAssignees: [\"GET /repos/{owner}/{repo}/assignees\"],\n    listComments: [\"GET /repos/{owner}/{repo}/issues/{issue_number}/comments\"],\n    listCommentsForRepo: [\"GET /repos/{owner}/{repo}/issues/comments\"],\n    listEvents: [\"GET /repos/{owner}/{repo}/issues/{issue_number}/events\"],\n    listEventsForRepo: [\"GET /repos/{owner}/{repo}/issues/events\"],\n    listEventsForTimeline: [\"GET /repos/{owner}/{repo}/issues/{issue_number}/timeline\"],\n    listForAuthenticatedUser: [\"GET /user/issues\"],\n    listForOrg: [\"GET /orgs/{org}/issues\"],\n    listForRepo: [\"GET /repos/{owner}/{repo}/issues\"],\n    listLabelsForMilestone: [\"GET /repos/{owner}/{repo}/milestones/{milestone_number}/labels\"],\n    listLabelsForRepo: [\"GET /repos/{owner}/{repo}/labels\"],\n    listLabelsOnIssue: [\"GET /repos/{owner}/{repo}/issues/{issue_number}/labels\"],\n    listMilestones: [\"GET /repos/{owner}/{repo}/milestones\"],\n    lock: [\"PUT /repos/{owner}/{repo}/issues/{issue_number}/lock\"],\n    removeAllLabels: [\"DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels\"],\n    removeAssignees: [\"DELETE /repos/{owner}/{repo}/issues/{issue_number}/assignees\"],\n    removeLabel: [\"DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels/{name}\"],\n    setLabels: [\"PUT /repos/{owner}/{repo}/issues/{issue_number}/labels\"],\n    unlock: [\"DELETE /repos/{owner}/{repo}/issues/{issue_number}/lock\"],\n    update: [\"PATCH /repos/{owner}/{repo}/issues/{issue_number}\"],\n    updateComment: [\"PATCH /repos/{owner}/{repo}/issues/comments/{comment_id}\"],\n    updateLabel: [\"PATCH /repos/{owner}/{repo}/labels/{name}\"],\n    updateMilestone: [\"PATCH /repos/{owner}/{repo}/milestones/{milestone_number}\"]\n  },\n  licenses: {\n    get: [\"GET /licenses/{license}\"],\n    getAllCommonlyUsed: [\"GET /licenses\"],\n    getForRepo: [\"GET /repos/{owner}/{repo}/license\"]\n  },\n  markdown: {\n    render: [\"POST /markdown\"],\n    renderRaw: [\"POST /markdown/raw\", {\n      headers: {\n        \"content-type\": \"text/plain; charset=utf-8\"\n      }\n    }]\n  },\n  meta: {\n    get: [\"GET /meta\"],\n    getAllVersions: [\"GET /versions\"],\n    getOctocat: [\"GET /octocat\"],\n    getZen: [\"GET /zen\"],\n    root: [\"GET /\"]\n  },\n  migrations: {\n    cancelImport: [\"DELETE /repos/{owner}/{repo}/import\", {}, {\n      deprecated: \"octokit.rest.migrations.cancelImport() is deprecated, see https://docs.github.com/rest/migrations/source-imports#cancel-an-import\"\n    }],\n    deleteArchiveForAuthenticatedUser: [\"DELETE /user/migrations/{migration_id}/archive\"],\n    deleteArchiveForOrg: [\"DELETE /orgs/{org}/migrations/{migration_id}/archive\"],\n    downloadArchiveForOrg: [\"GET /orgs/{org}/migrations/{migration_id}/archive\"],\n    getArchiveForAuthenticatedUser: [\"GET /user/migrations/{migration_id}/archive\"],\n    getCommitAuthors: [\"GET /repos/{owner}/{repo}/import/authors\", {}, {\n      deprecated: \"octokit.rest.migrations.getCommitAuthors() is deprecated, see https://docs.github.com/rest/migrations/source-imports#get-commit-authors\"\n    }],\n    getImportStatus: [\"GET /repos/{owner}/{repo}/import\", {}, {\n      deprecated: \"octokit.rest.migrations.getImportStatus() is deprecated, see https://docs.github.com/rest/migrations/source-imports#get-an-import-status\"\n    }],\n    getLargeFiles: [\"GET /repos/{owner}/{repo}/import/large_files\", {}, {\n      deprecated: \"octokit.rest.migrations.getLargeFiles() is deprecated, see https://docs.github.com/rest/migrations/source-imports#get-large-files\"\n    }],\n    getStatusForAuthenticatedUser: [\"GET /user/migrations/{migration_id}\"],\n    getStatusForOrg: [\"GET /orgs/{org}/migrations/{migration_id}\"],\n    listForAuthenticatedUser: [\"GET /user/migrations\"],\n    listForOrg: [\"GET /orgs/{org}/migrations\"],\n    listReposForAuthenticatedUser: [\"GET /user/migrations/{migration_id}/repositories\"],\n    listReposForOrg: [\"GET /orgs/{org}/migrations/{migration_id}/repositories\"],\n    listReposForUser: [\"GET /user/migrations/{migration_id}/repositories\", {}, {\n      renamed: [\"migrations\", \"listReposForAuthenticatedUser\"]\n    }],\n    mapCommitAuthor: [\"PATCH /repos/{owner}/{repo}/import/authors/{author_id}\", {}, {\n      deprecated: \"octokit.rest.migrations.mapCommitAuthor() is deprecated, see https://docs.github.com/rest/migrations/source-imports#map-a-commit-author\"\n    }],\n    setLfsPreference: [\"PATCH /repos/{owner}/{repo}/import/lfs\", {}, {\n      deprecated: \"octokit.rest.migrations.setLfsPreference() is deprecated, see https://docs.github.com/rest/migrations/source-imports#update-git-lfs-preference\"\n    }],\n    startForAuthenticatedUser: [\"POST /user/migrations\"],\n    startForOrg: [\"POST /orgs/{org}/migrations\"],\n    startImport: [\"PUT /repos/{owner}/{repo}/import\", {}, {\n      deprecated: \"octokit.rest.migrations.startImport() is deprecated, see https://docs.github.com/rest/migrations/source-imports#start-an-import\"\n    }],\n    unlockRepoForAuthenticatedUser: [\"DELETE /user/migrations/{migration_id}/repos/{repo_name}/lock\"],\n    unlockRepoForOrg: [\"DELETE /orgs/{org}/migrations/{migration_id}/repos/{repo_name}/lock\"],\n    updateImport: [\"PATCH /repos/{owner}/{repo}/import\", {}, {\n      deprecated: \"octokit.rest.migrations.updateImport() is deprecated, see https://docs.github.com/rest/migrations/source-imports#update-an-import\"\n    }]\n  },\n  orgs: {\n    addSecurityManagerTeam: [\"PUT /orgs/{org}/security-managers/teams/{team_slug}\"],\n    blockUser: [\"PUT /orgs/{org}/blocks/{username}\"],\n    cancelInvitation: [\"DELETE /orgs/{org}/invitations/{invitation_id}\"],\n    checkBlockedUser: [\"GET /orgs/{org}/blocks/{username}\"],\n    checkMembershipForUser: [\"GET /orgs/{org}/members/{username}\"],\n    checkPublicMembershipForUser: [\"GET /orgs/{org}/public_members/{username}\"],\n    convertMemberToOutsideCollaborator: [\"PUT /orgs/{org}/outside_collaborators/{username}\"],\n    createInvitation: [\"POST /orgs/{org}/invitations\"],\n    createOrUpdateCustomProperties: [\"PATCH /orgs/{org}/properties/schema\"],\n    createOrUpdateCustomPropertiesValuesForRepos: [\"PATCH /orgs/{org}/properties/values\"],\n    createOrUpdateCustomProperty: [\"PUT /orgs/{org}/properties/schema/{custom_property_name}\"],\n    createWebhook: [\"POST /orgs/{org}/hooks\"],\n    delete: [\"DELETE /orgs/{org}\"],\n    deleteWebhook: [\"DELETE /orgs/{org}/hooks/{hook_id}\"],\n    enableOrDisableSecurityProductOnAllOrgRepos: [\"POST /orgs/{org}/{security_product}/{enablement}\"],\n    get: [\"GET /orgs/{org}\"],\n    getAllCustomProperties: [\"GET /orgs/{org}/properties/schema\"],\n    getCustomProperty: [\"GET /orgs/{org}/properties/schema/{custom_property_name}\"],\n    getMembershipForAuthenticatedUser: [\"GET /user/memberships/orgs/{org}\"],\n    getMembershipForUser: [\"GET /orgs/{org}/memberships/{username}\"],\n    getWebhook: [\"GET /orgs/{org}/hooks/{hook_id}\"],\n    getWebhookConfigForOrg: [\"GET /orgs/{org}/hooks/{hook_id}/config\"],\n    getWebhookDelivery: [\"GET /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}\"],\n    list: [\"GET /organizations\"],\n    listAppInstallations: [\"GET /orgs/{org}/installations\"],\n    listBlockedUsers: [\"GET /orgs/{org}/blocks\"],\n    listCustomPropertiesValuesForRepos: [\"GET /orgs/{org}/properties/values\"],\n    listFailedInvitations: [\"GET /orgs/{org}/failed_invitations\"],\n    listForAuthenticatedUser: [\"GET /user/orgs\"],\n    listForUser: [\"GET /users/{username}/orgs\"],\n    listInvitationTeams: [\"GET /orgs/{org}/invitations/{invitation_id}/teams\"],\n    listMembers: [\"GET /orgs/{org}/members\"],\n    listMembershipsForAuthenticatedUser: [\"GET /user/memberships/orgs\"],\n    listOutsideCollaborators: [\"GET /orgs/{org}/outside_collaborators\"],\n    listPatGrantRepositories: [\"GET /orgs/{org}/personal-access-tokens/{pat_id}/repositories\"],\n    listPatGrantRequestRepositories: [\"GET /orgs/{org}/personal-access-token-requests/{pat_request_id}/repositories\"],\n    listPatGrantRequests: [\"GET /orgs/{org}/personal-access-token-requests\"],\n    listPatGrants: [\"GET /orgs/{org}/personal-access-tokens\"],\n    listPendingInvitations: [\"GET /orgs/{org}/invitations\"],\n    listPublicMembers: [\"GET /orgs/{org}/public_members\"],\n    listSecurityManagerTeams: [\"GET /orgs/{org}/security-managers\"],\n    listWebhookDeliveries: [\"GET /orgs/{org}/hooks/{hook_id}/deliveries\"],\n    listWebhooks: [\"GET /orgs/{org}/hooks\"],\n    pingWebhook: [\"POST /orgs/{org}/hooks/{hook_id}/pings\"],\n    redeliverWebhookDelivery: [\"POST /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}/attempts\"],\n    removeCustomProperty: [\"DELETE /orgs/{org}/properties/schema/{custom_property_name}\"],\n    removeMember: [\"DELETE /orgs/{org}/members/{username}\"],\n    removeMembershipForUser: [\"DELETE /orgs/{org}/memberships/{username}\"],\n    removeOutsideCollaborator: [\"DELETE /orgs/{org}/outside_collaborators/{username}\"],\n    removePublicMembershipForAuthenticatedUser: [\"DELETE /orgs/{org}/public_members/{username}\"],\n    removeSecurityManagerTeam: [\"DELETE /orgs/{org}/security-managers/teams/{team_slug}\"],\n    reviewPatGrantRequest: [\"POST /orgs/{org}/personal-access-token-requests/{pat_request_id}\"],\n    reviewPatGrantRequestsInBulk: [\"POST /orgs/{org}/personal-access-token-requests\"],\n    setMembershipForUser: [\"PUT /orgs/{org}/memberships/{username}\"],\n    setPublicMembershipForAuthenticatedUser: [\"PUT /orgs/{org}/public_members/{username}\"],\n    unblockUser: [\"DELETE /orgs/{org}/blocks/{username}\"],\n    update: [\"PATCH /orgs/{org}\"],\n    updateMembershipForAuthenticatedUser: [\"PATCH /user/memberships/orgs/{org}\"],\n    updatePatAccess: [\"POST /orgs/{org}/personal-access-tokens/{pat_id}\"],\n    updatePatAccesses: [\"POST /orgs/{org}/personal-access-tokens\"],\n    updateWebhook: [\"PATCH /orgs/{org}/hooks/{hook_id}\"],\n    updateWebhookConfigForOrg: [\"PATCH /orgs/{org}/hooks/{hook_id}/config\"]\n  },\n  packages: {\n    deletePackageForAuthenticatedUser: [\"DELETE /user/packages/{package_type}/{package_name}\"],\n    deletePackageForOrg: [\"DELETE /orgs/{org}/packages/{package_type}/{package_name}\"],\n    deletePackageForUser: [\"DELETE /users/{username}/packages/{package_type}/{package_name}\"],\n    deletePackageVersionForAuthenticatedUser: [\"DELETE /user/packages/{package_type}/{package_name}/versions/{package_version_id}\"],\n    deletePackageVersionForOrg: [\"DELETE /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}\"],\n    deletePackageVersionForUser: [\"DELETE /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}\"],\n    getAllPackageVersionsForAPackageOwnedByAnOrg: [\"GET /orgs/{org}/packages/{package_type}/{package_name}/versions\", {}, {\n      renamed: [\"packages\", \"getAllPackageVersionsForPackageOwnedByOrg\"]\n    }],\n    getAllPackageVersionsForAPackageOwnedByTheAuthenticatedUser: [\"GET /user/packages/{package_type}/{package_name}/versions\", {}, {\n      renamed: [\"packages\", \"getAllPackageVersionsForPackageOwnedByAuthenticatedUser\"]\n    }],\n    getAllPackageVersionsForPackageOwnedByAuthenticatedUser: [\"GET /user/packages/{package_type}/{package_name}/versions\"],\n    getAllPackageVersionsForPackageOwnedByOrg: [\"GET /orgs/{org}/packages/{package_type}/{package_name}/versions\"],\n    getAllPackageVersionsForPackageOwnedByUser: [\"GET /users/{username}/packages/{package_type}/{package_name}/versions\"],\n    getPackageForAuthenticatedUser: [\"GET /user/packages/{package_type}/{package_name}\"],\n    getPackageForOrganization: [\"GET /orgs/{org}/packages/{package_type}/{package_name}\"],\n    getPackageForUser: [\"GET /users/{username}/packages/{package_type}/{package_name}\"],\n    getPackageVersionForAuthenticatedUser: [\"GET /user/packages/{package_type}/{package_name}/versions/{package_version_id}\"],\n    getPackageVersionForOrganization: [\"GET /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}\"],\n    getPackageVersionForUser: [\"GET /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}\"],\n    listDockerMigrationConflictingPackagesForAuthenticatedUser: [\"GET /user/docker/conflicts\"],\n    listDockerMigrationConflictingPackagesForOrganization: [\"GET /orgs/{org}/docker/conflicts\"],\n    listDockerMigrationConflictingPackagesForUser: [\"GET /users/{username}/docker/conflicts\"],\n    listPackagesForAuthenticatedUser: [\"GET /user/packages\"],\n    listPackagesForOrganization: [\"GET /orgs/{org}/packages\"],\n    listPackagesForUser: [\"GET /users/{username}/packages\"],\n    restorePackageForAuthenticatedUser: [\"POST /user/packages/{package_type}/{package_name}/restore{?token}\"],\n    restorePackageForOrg: [\"POST /orgs/{org}/packages/{package_type}/{package_name}/restore{?token}\"],\n    restorePackageForUser: [\"POST /users/{username}/packages/{package_type}/{package_name}/restore{?token}\"],\n    restorePackageVersionForAuthenticatedUser: [\"POST /user/packages/{package_type}/{package_name}/versions/{package_version_id}/restore\"],\n    restorePackageVersionForOrg: [\"POST /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore\"],\n    restorePackageVersionForUser: [\"POST /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore\"]\n  },\n  projects: {\n    addCollaborator: [\"PUT /projects/{project_id}/collaborators/{username}\"],\n    createCard: [\"POST /projects/columns/{column_id}/cards\"],\n    createColumn: [\"POST /projects/{project_id}/columns\"],\n    createForAuthenticatedUser: [\"POST /user/projects\"],\n    createForOrg: [\"POST /orgs/{org}/projects\"],\n    createForRepo: [\"POST /repos/{owner}/{repo}/projects\"],\n    delete: [\"DELETE /projects/{project_id}\"],\n    deleteCard: [\"DELETE /projects/columns/cards/{card_id}\"],\n    deleteColumn: [\"DELETE /projects/columns/{column_id}\"],\n    get: [\"GET /projects/{project_id}\"],\n    getCard: [\"GET /projects/columns/cards/{card_id}\"],\n    getColumn: [\"GET /projects/columns/{column_id}\"],\n    getPermissionForUser: [\"GET /projects/{project_id}/collaborators/{username}/permission\"],\n    listCards: [\"GET /projects/columns/{column_id}/cards\"],\n    listCollaborators: [\"GET /projects/{project_id}/collaborators\"],\n    listColumns: [\"GET /projects/{project_id}/columns\"],\n    listForOrg: [\"GET /orgs/{org}/projects\"],\n    listForRepo: [\"GET /repos/{owner}/{repo}/projects\"],\n    listForUser: [\"GET /users/{username}/projects\"],\n    moveCard: [\"POST /projects/columns/cards/{card_id}/moves\"],\n    moveColumn: [\"POST /projects/columns/{column_id}/moves\"],\n    removeCollaborator: [\"DELETE /projects/{project_id}/collaborators/{username}\"],\n    update: [\"PATCH /projects/{project_id}\"],\n    updateCard: [\"PATCH /projects/columns/cards/{card_id}\"],\n    updateColumn: [\"PATCH /projects/columns/{column_id}\"]\n  },\n  pulls: {\n    checkIfMerged: [\"GET /repos/{owner}/{repo}/pulls/{pull_number}/merge\"],\n    create: [\"POST /repos/{owner}/{repo}/pulls\"],\n    createReplyForReviewComment: [\"POST /repos/{owner}/{repo}/pulls/{pull_number}/comments/{comment_id}/replies\"],\n    createReview: [\"POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews\"],\n    createReviewComment: [\"POST /repos/{owner}/{repo}/pulls/{pull_number}/comments\"],\n    deletePendingReview: [\"DELETE /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}\"],\n    deleteReviewComment: [\"DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}\"],\n    dismissReview: [\"PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/dismissals\"],\n    get: [\"GET /repos/{owner}/{repo}/pulls/{pull_number}\"],\n    getReview: [\"GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}\"],\n    getReviewComment: [\"GET /repos/{owner}/{repo}/pulls/comments/{comment_id}\"],\n    list: [\"GET /repos/{owner}/{repo}/pulls\"],\n    listCommentsForReview: [\"GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/comments\"],\n    listCommits: [\"GET /repos/{owner}/{repo}/pulls/{pull_number}/commits\"],\n    listFiles: [\"GET /repos/{owner}/{repo}/pulls/{pull_number}/files\"],\n    listRequestedReviewers: [\"GET /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers\"],\n    listReviewComments: [\"GET /repos/{owner}/{repo}/pulls/{pull_number}/comments\"],\n    listReviewCommentsForRepo: [\"GET /repos/{owner}/{repo}/pulls/comments\"],\n    listReviews: [\"GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews\"],\n    merge: [\"PUT /repos/{owner}/{repo}/pulls/{pull_number}/merge\"],\n    removeRequestedReviewers: [\"DELETE /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers\"],\n    requestReviewers: [\"POST /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers\"],\n    submitReview: [\"POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/events\"],\n    update: [\"PATCH /repos/{owner}/{repo}/pulls/{pull_number}\"],\n    updateBranch: [\"PUT /repos/{owner}/{repo}/pulls/{pull_number}/update-branch\"],\n    updateReview: [\"PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}\"],\n    updateReviewComment: [\"PATCH /repos/{owner}/{repo}/pulls/comments/{comment_id}\"]\n  },\n  rateLimit: {\n    get: [\"GET /rate_limit\"]\n  },\n  reactions: {\n    createForCommitComment: [\"POST /repos/{owner}/{repo}/comments/{comment_id}/reactions\"],\n    createForIssue: [\"POST /repos/{owner}/{repo}/issues/{issue_number}/reactions\"],\n    createForIssueComment: [\"POST /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions\"],\n    createForPullRequestReviewComment: [\"POST /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions\"],\n    createForRelease: [\"POST /repos/{owner}/{repo}/releases/{release_id}/reactions\"],\n    createForTeamDiscussionCommentInOrg: [\"POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions\"],\n    createForTeamDiscussionInOrg: [\"POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions\"],\n    deleteForCommitComment: [\"DELETE /repos/{owner}/{repo}/comments/{comment_id}/reactions/{reaction_id}\"],\n    deleteForIssue: [\"DELETE /repos/{owner}/{repo}/issues/{issue_number}/reactions/{reaction_id}\"],\n    deleteForIssueComment: [\"DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}\"],\n    deleteForPullRequestComment: [\"DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions/{reaction_id}\"],\n    deleteForRelease: [\"DELETE /repos/{owner}/{repo}/releases/{release_id}/reactions/{reaction_id}\"],\n    deleteForTeamDiscussion: [\"DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions/{reaction_id}\"],\n    deleteForTeamDiscussionComment: [\"DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions/{reaction_id}\"],\n    listForCommitComment: [\"GET /repos/{owner}/{repo}/comments/{comment_id}/reactions\"],\n    listForIssue: [\"GET /repos/{owner}/{repo}/issues/{issue_number}/reactions\"],\n    listForIssueComment: [\"GET /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions\"],\n    listForPullRequestReviewComment: [\"GET /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions\"],\n    listForRelease: [\"GET /repos/{owner}/{repo}/releases/{release_id}/reactions\"],\n    listForTeamDiscussionCommentInOrg: [\"GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions\"],\n    listForTeamDiscussionInOrg: [\"GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions\"]\n  },\n  repos: {\n    acceptInvitation: [\"PATCH /user/repository_invitations/{invitation_id}\", {}, {\n      renamed: [\"repos\", \"acceptInvitationForAuthenticatedUser\"]\n    }],\n    acceptInvitationForAuthenticatedUser: [\"PATCH /user/repository_invitations/{invitation_id}\"],\n    addAppAccessRestrictions: [\"POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps\", {}, {\n      mapToData: \"apps\"\n    }],\n    addCollaborator: [\"PUT /repos/{owner}/{repo}/collaborators/{username}\"],\n    addStatusCheckContexts: [\"POST /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts\", {}, {\n      mapToData: \"contexts\"\n    }],\n    addTeamAccessRestrictions: [\"POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams\", {}, {\n      mapToData: \"teams\"\n    }],\n    addUserAccessRestrictions: [\"POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users\", {}, {\n      mapToData: \"users\"\n    }],\n    checkAutomatedSecurityFixes: [\"GET /repos/{owner}/{repo}/automated-security-fixes\"],\n    checkCollaborator: [\"GET /repos/{owner}/{repo}/collaborators/{username}\"],\n    checkVulnerabilityAlerts: [\"GET /repos/{owner}/{repo}/vulnerability-alerts\"],\n    codeownersErrors: [\"GET /repos/{owner}/{repo}/codeowners/errors\"],\n    compareCommits: [\"GET /repos/{owner}/{repo}/compare/{base}...{head}\"],\n    compareCommitsWithBasehead: [\"GET /repos/{owner}/{repo}/compare/{basehead}\"],\n    createAutolink: [\"POST /repos/{owner}/{repo}/autolinks\"],\n    createCommitComment: [\"POST /repos/{owner}/{repo}/commits/{commit_sha}/comments\"],\n    createCommitSignatureProtection: [\"POST /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures\"],\n    createCommitStatus: [\"POST /repos/{owner}/{repo}/statuses/{sha}\"],\n    createDeployKey: [\"POST /repos/{owner}/{repo}/keys\"],\n    createDeployment: [\"POST /repos/{owner}/{repo}/deployments\"],\n    createDeploymentBranchPolicy: [\"POST /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies\"],\n    createDeploymentProtectionRule: [\"POST /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules\"],\n    createDeploymentStatus: [\"POST /repos/{owner}/{repo}/deployments/{deployment_id}/statuses\"],\n    createDispatchEvent: [\"POST /repos/{owner}/{repo}/dispatches\"],\n    createForAuthenticatedUser: [\"POST /user/repos\"],\n    createFork: [\"POST /repos/{owner}/{repo}/forks\"],\n    createInOrg: [\"POST /orgs/{org}/repos\"],\n    createOrUpdateEnvironment: [\"PUT /repos/{owner}/{repo}/environments/{environment_name}\"],\n    createOrUpdateFileContents: [\"PUT /repos/{owner}/{repo}/contents/{path}\"],\n    createOrgRuleset: [\"POST /orgs/{org}/rulesets\"],\n    createPagesDeployment: [\"POST /repos/{owner}/{repo}/pages/deployment\"],\n    createPagesSite: [\"POST /repos/{owner}/{repo}/pages\"],\n    createRelease: [\"POST /repos/{owner}/{repo}/releases\"],\n    createRepoRuleset: [\"POST /repos/{owner}/{repo}/rulesets\"],\n    createTagProtection: [\"POST /repos/{owner}/{repo}/tags/protection\"],\n    createUsingTemplate: [\"POST /repos/{template_owner}/{template_repo}/generate\"],\n    createWebhook: [\"POST /repos/{owner}/{repo}/hooks\"],\n    declineInvitation: [\"DELETE /user/repository_invitations/{invitation_id}\", {}, {\n      renamed: [\"repos\", \"declineInvitationForAuthenticatedUser\"]\n    }],\n    declineInvitationForAuthenticatedUser: [\"DELETE /user/repository_invitations/{invitation_id}\"],\n    delete: [\"DELETE /repos/{owner}/{repo}\"],\n    deleteAccessRestrictions: [\"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions\"],\n    deleteAdminBranchProtection: [\"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins\"],\n    deleteAnEnvironment: [\"DELETE /repos/{owner}/{repo}/environments/{environment_name}\"],\n    deleteAutolink: [\"DELETE /repos/{owner}/{repo}/autolinks/{autolink_id}\"],\n    deleteBranchProtection: [\"DELETE /repos/{owner}/{repo}/branches/{branch}/protection\"],\n    deleteCommitComment: [\"DELETE /repos/{owner}/{repo}/comments/{comment_id}\"],\n    deleteCommitSignatureProtection: [\"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures\"],\n    deleteDeployKey: [\"DELETE /repos/{owner}/{repo}/keys/{key_id}\"],\n    deleteDeployment: [\"DELETE /repos/{owner}/{repo}/deployments/{deployment_id}\"],\n    deleteDeploymentBranchPolicy: [\"DELETE /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}\"],\n    deleteFile: [\"DELETE /repos/{owner}/{repo}/contents/{path}\"],\n    deleteInvitation: [\"DELETE /repos/{owner}/{repo}/invitations/{invitation_id}\"],\n    deleteOrgRuleset: [\"DELETE /orgs/{org}/rulesets/{ruleset_id}\"],\n    deletePagesSite: [\"DELETE /repos/{owner}/{repo}/pages\"],\n    deletePullRequestReviewProtection: [\"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews\"],\n    deleteRelease: [\"DELETE /repos/{owner}/{repo}/releases/{release_id}\"],\n    deleteReleaseAsset: [\"DELETE /repos/{owner}/{repo}/releases/assets/{asset_id}\"],\n    deleteRepoRuleset: [\"DELETE /repos/{owner}/{repo}/rulesets/{ruleset_id}\"],\n    deleteTagProtection: [\"DELETE /repos/{owner}/{repo}/tags/protection/{tag_protection_id}\"],\n    deleteWebhook: [\"DELETE /repos/{owner}/{repo}/hooks/{hook_id}\"],\n    disableAutomatedSecurityFixes: [\"DELETE /repos/{owner}/{repo}/automated-security-fixes\"],\n    disableDeploymentProtectionRule: [\"DELETE /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/{protection_rule_id}\"],\n    disablePrivateVulnerabilityReporting: [\"DELETE /repos/{owner}/{repo}/private-vulnerability-reporting\"],\n    disableVulnerabilityAlerts: [\"DELETE /repos/{owner}/{repo}/vulnerability-alerts\"],\n    downloadArchive: [\"GET /repos/{owner}/{repo}/zipball/{ref}\", {}, {\n      renamed: [\"repos\", \"downloadZipballArchive\"]\n    }],\n    downloadTarballArchive: [\"GET /repos/{owner}/{repo}/tarball/{ref}\"],\n    downloadZipballArchive: [\"GET /repos/{owner}/{repo}/zipball/{ref}\"],\n    enableAutomatedSecurityFixes: [\"PUT /repos/{owner}/{repo}/automated-security-fixes\"],\n    enablePrivateVulnerabilityReporting: [\"PUT /repos/{owner}/{repo}/private-vulnerability-reporting\"],\n    enableVulnerabilityAlerts: [\"PUT /repos/{owner}/{repo}/vulnerability-alerts\"],\n    generateReleaseNotes: [\"POST /repos/{owner}/{repo}/releases/generate-notes\"],\n    get: [\"GET /repos/{owner}/{repo}\"],\n    getAccessRestrictions: [\"GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions\"],\n    getAdminBranchProtection: [\"GET /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins\"],\n    getAllDeploymentProtectionRules: [\"GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules\"],\n    getAllEnvironments: [\"GET /repos/{owner}/{repo}/environments\"],\n    getAllStatusCheckContexts: [\"GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts\"],\n    getAllTopics: [\"GET /repos/{owner}/{repo}/topics\"],\n    getAppsWithAccessToProtectedBranch: [\"GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps\"],\n    getAutolink: [\"GET /repos/{owner}/{repo}/autolinks/{autolink_id}\"],\n    getBranch: [\"GET /repos/{owner}/{repo}/branches/{branch}\"],\n    getBranchProtection: [\"GET /repos/{owner}/{repo}/branches/{branch}/protection\"],\n    getBranchRules: [\"GET /repos/{owner}/{repo}/rules/branches/{branch}\"],\n    getClones: [\"GET /repos/{owner}/{repo}/traffic/clones\"],\n    getCodeFrequencyStats: [\"GET /repos/{owner}/{repo}/stats/code_frequency\"],\n    getCollaboratorPermissionLevel: [\"GET /repos/{owner}/{repo}/collaborators/{username}/permission\"],\n    getCombinedStatusForRef: [\"GET /repos/{owner}/{repo}/commits/{ref}/status\"],\n    getCommit: [\"GET /repos/{owner}/{repo}/commits/{ref}\"],\n    getCommitActivityStats: [\"GET /repos/{owner}/{repo}/stats/commit_activity\"],\n    getCommitComment: [\"GET /repos/{owner}/{repo}/comments/{comment_id}\"],\n    getCommitSignatureProtection: [\"GET /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures\"],\n    getCommunityProfileMetrics: [\"GET /repos/{owner}/{repo}/community/profile\"],\n    getContent: [\"GET /repos/{owner}/{repo}/contents/{path}\"],\n    getContributorsStats: [\"GET /repos/{owner}/{repo}/stats/contributors\"],\n    getCustomDeploymentProtectionRule: [\"GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/{protection_rule_id}\"],\n    getCustomPropertiesValues: [\"GET /repos/{owner}/{repo}/properties/values\"],\n    getDeployKey: [\"GET /repos/{owner}/{repo}/keys/{key_id}\"],\n    getDeployment: [\"GET /repos/{owner}/{repo}/deployments/{deployment_id}\"],\n    getDeploymentBranchPolicy: [\"GET /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}\"],\n    getDeploymentStatus: [\"GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses/{status_id}\"],\n    getEnvironment: [\"GET /repos/{owner}/{repo}/environments/{environment_name}\"],\n    getLatestPagesBuild: [\"GET /repos/{owner}/{repo}/pages/builds/latest\"],\n    getLatestRelease: [\"GET /repos/{owner}/{repo}/releases/latest\"],\n    getOrgRuleSuite: [\"GET /orgs/{org}/rulesets/rule-suites/{rule_suite_id}\"],\n    getOrgRuleSuites: [\"GET /orgs/{org}/rulesets/rule-suites\"],\n    getOrgRuleset: [\"GET /orgs/{org}/rulesets/{ruleset_id}\"],\n    getOrgRulesets: [\"GET /orgs/{org}/rulesets\"],\n    getPages: [\"GET /repos/{owner}/{repo}/pages\"],\n    getPagesBuild: [\"GET /repos/{owner}/{repo}/pages/builds/{build_id}\"],\n    getPagesHealthCheck: [\"GET /repos/{owner}/{repo}/pages/health\"],\n    getParticipationStats: [\"GET /repos/{owner}/{repo}/stats/participation\"],\n    getPullRequestReviewProtection: [\"GET /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews\"],\n    getPunchCardStats: [\"GET /repos/{owner}/{repo}/stats/punch_card\"],\n    getReadme: [\"GET /repos/{owner}/{repo}/readme\"],\n    getReadmeInDirectory: [\"GET /repos/{owner}/{repo}/readme/{dir}\"],\n    getRelease: [\"GET /repos/{owner}/{repo}/releases/{release_id}\"],\n    getReleaseAsset: [\"GET /repos/{owner}/{repo}/releases/assets/{asset_id}\"],\n    getReleaseByTag: [\"GET /repos/{owner}/{repo}/releases/tags/{tag}\"],\n    getRepoRuleSuite: [\"GET /repos/{owner}/{repo}/rulesets/rule-suites/{rule_suite_id}\"],\n    getRepoRuleSuites: [\"GET /repos/{owner}/{repo}/rulesets/rule-suites\"],\n    getRepoRuleset: [\"GET /repos/{owner}/{repo}/rulesets/{ruleset_id}\"],\n    getRepoRulesets: [\"GET /repos/{owner}/{repo}/rulesets\"],\n    getStatusChecksProtection: [\"GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks\"],\n    getTeamsWithAccessToProtectedBranch: [\"GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams\"],\n    getTopPaths: [\"GET /repos/{owner}/{repo}/traffic/popular/paths\"],\n    getTopReferrers: [\"GET /repos/{owner}/{repo}/traffic/popular/referrers\"],\n    getUsersWithAccessToProtectedBranch: [\"GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users\"],\n    getViews: [\"GET /repos/{owner}/{repo}/traffic/views\"],\n    getWebhook: [\"GET /repos/{owner}/{repo}/hooks/{hook_id}\"],\n    getWebhookConfigForRepo: [\"GET /repos/{owner}/{repo}/hooks/{hook_id}/config\"],\n    getWebhookDelivery: [\"GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}\"],\n    listActivities: [\"GET /repos/{owner}/{repo}/activity\"],\n    listAutolinks: [\"GET /repos/{owner}/{repo}/autolinks\"],\n    listBranches: [\"GET /repos/{owner}/{repo}/branches\"],\n    listBranchesForHeadCommit: [\"GET /repos/{owner}/{repo}/commits/{commit_sha}/branches-where-head\"],\n    listCollaborators: [\"GET /repos/{owner}/{repo}/collaborators\"],\n    listCommentsForCommit: [\"GET /repos/{owner}/{repo}/commits/{commit_sha}/comments\"],\n    listCommitCommentsForRepo: [\"GET /repos/{owner}/{repo}/comments\"],\n    listCommitStatusesForRef: [\"GET /repos/{owner}/{repo}/commits/{ref}/statuses\"],\n    listCommits: [\"GET /repos/{owner}/{repo}/commits\"],\n    listContributors: [\"GET /repos/{owner}/{repo}/contributors\"],\n    listCustomDeploymentRuleIntegrations: [\"GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/apps\"],\n    listDeployKeys: [\"GET /repos/{owner}/{repo}/keys\"],\n    listDeploymentBranchPolicies: [\"GET /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies\"],\n    listDeploymentStatuses: [\"GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses\"],\n    listDeployments: [\"GET /repos/{owner}/{repo}/deployments\"],\n    listForAuthenticatedUser: [\"GET /user/repos\"],\n    listForOrg: [\"GET /orgs/{org}/repos\"],\n    listForUser: [\"GET /users/{username}/repos\"],\n    listForks: [\"GET /repos/{owner}/{repo}/forks\"],\n    listInvitations: [\"GET /repos/{owner}/{repo}/invitations\"],\n    listInvitationsForAuthenticatedUser: [\"GET /user/repository_invitations\"],\n    listLanguages: [\"GET /repos/{owner}/{repo}/languages\"],\n    listPagesBuilds: [\"GET /repos/{owner}/{repo}/pages/builds\"],\n    listPublic: [\"GET /repositories\"],\n    listPullRequestsAssociatedWithCommit: [\"GET /repos/{owner}/{repo}/commits/{commit_sha}/pulls\"],\n    listReleaseAssets: [\"GET /repos/{owner}/{repo}/releases/{release_id}/assets\"],\n    listReleases: [\"GET /repos/{owner}/{repo}/releases\"],\n    listTagProtection: [\"GET /repos/{owner}/{repo}/tags/protection\"],\n    listTags: [\"GET /repos/{owner}/{repo}/tags\"],\n    listTeams: [\"GET /repos/{owner}/{repo}/teams\"],\n    listWebhookDeliveries: [\"GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries\"],\n    listWebhooks: [\"GET /repos/{owner}/{repo}/hooks\"],\n    merge: [\"POST /repos/{owner}/{repo}/merges\"],\n    mergeUpstream: [\"POST /repos/{owner}/{repo}/merge-upstream\"],\n    pingWebhook: [\"POST /repos/{owner}/{repo}/hooks/{hook_id}/pings\"],\n    redeliverWebhookDelivery: [\"POST /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}/attempts\"],\n    removeAppAccessRestrictions: [\"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps\", {}, {\n      mapToData: \"apps\"\n    }],\n    removeCollaborator: [\"DELETE /repos/{owner}/{repo}/collaborators/{username}\"],\n    removeStatusCheckContexts: [\"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts\", {}, {\n      mapToData: \"contexts\"\n    }],\n    removeStatusCheckProtection: [\"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks\"],\n    removeTeamAccessRestrictions: [\"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams\", {}, {\n      mapToData: \"teams\"\n    }],\n    removeUserAccessRestrictions: [\"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users\", {}, {\n      mapToData: \"users\"\n    }],\n    renameBranch: [\"POST /repos/{owner}/{repo}/branches/{branch}/rename\"],\n    replaceAllTopics: [\"PUT /repos/{owner}/{repo}/topics\"],\n    requestPagesBuild: [\"POST /repos/{owner}/{repo}/pages/builds\"],\n    setAdminBranchProtection: [\"POST /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins\"],\n    setAppAccessRestrictions: [\"PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps\", {}, {\n      mapToData: \"apps\"\n    }],\n    setStatusCheckContexts: [\"PUT /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts\", {}, {\n      mapToData: \"contexts\"\n    }],\n    setTeamAccessRestrictions: [\"PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams\", {}, {\n      mapToData: \"teams\"\n    }],\n    setUserAccessRestrictions: [\"PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users\", {}, {\n      mapToData: \"users\"\n    }],\n    testPushWebhook: [\"POST /repos/{owner}/{repo}/hooks/{hook_id}/tests\"],\n    transfer: [\"POST /repos/{owner}/{repo}/transfer\"],\n    update: [\"PATCH /repos/{owner}/{repo}\"],\n    updateBranchProtection: [\"PUT /repos/{owner}/{repo}/branches/{branch}/protection\"],\n    updateCommitComment: [\"PATCH /repos/{owner}/{repo}/comments/{comment_id}\"],\n    updateDeploymentBranchPolicy: [\"PUT /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}\"],\n    updateInformationAboutPagesSite: [\"PUT /repos/{owner}/{repo}/pages\"],\n    updateInvitation: [\"PATCH /repos/{owner}/{repo}/invitations/{invitation_id}\"],\n    updateOrgRuleset: [\"PUT /orgs/{org}/rulesets/{ruleset_id}\"],\n    updatePullRequestReviewProtection: [\"PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews\"],\n    updateRelease: [\"PATCH /repos/{owner}/{repo}/releases/{release_id}\"],\n    updateReleaseAsset: [\"PATCH /repos/{owner}/{repo}/releases/assets/{asset_id}\"],\n    updateRepoRuleset: [\"PUT /repos/{owner}/{repo}/rulesets/{ruleset_id}\"],\n    updateStatusCheckPotection: [\"PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks\", {}, {\n      renamed: [\"repos\", \"updateStatusCheckProtection\"]\n    }],\n    updateStatusCheckProtection: [\"PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks\"],\n    updateWebhook: [\"PATCH /repos/{owner}/{repo}/hooks/{hook_id}\"],\n    updateWebhookConfigForRepo: [\"PATCH /repos/{owner}/{repo}/hooks/{hook_id}/config\"],\n    uploadReleaseAsset: [\"POST /repos/{owner}/{repo}/releases/{release_id}/assets{?name,label}\", {\n      baseUrl: \"https://uploads.github.com\"\n    }]\n  },\n  search: {\n    code: [\"GET /search/code\"],\n    commits: [\"GET /search/commits\"],\n    issuesAndPullRequests: [\"GET /search/issues\"],\n    labels: [\"GET /search/labels\"],\n    repos: [\"GET /search/repositories\"],\n    topics: [\"GET /search/topics\"],\n    users: [\"GET /search/users\"]\n  },\n  secretScanning: {\n    getAlert: [\"GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}\"],\n    listAlertsForEnterprise: [\"GET /enterprises/{enterprise}/secret-scanning/alerts\"],\n    listAlertsForOrg: [\"GET /orgs/{org}/secret-scanning/alerts\"],\n    listAlertsForRepo: [\"GET /repos/{owner}/{repo}/secret-scanning/alerts\"],\n    listLocationsForAlert: [\"GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}/locations\"],\n    updateAlert: [\"PATCH /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}\"]\n  },\n  securityAdvisories: {\n    createPrivateVulnerabilityReport: [\"POST /repos/{owner}/{repo}/security-advisories/reports\"],\n    createRepositoryAdvisory: [\"POST /repos/{owner}/{repo}/security-advisories\"],\n    createRepositoryAdvisoryCveRequest: [\"POST /repos/{owner}/{repo}/security-advisories/{ghsa_id}/cve\"],\n    getGlobalAdvisory: [\"GET /advisories/{ghsa_id}\"],\n    getRepositoryAdvisory: [\"GET /repos/{owner}/{repo}/security-advisories/{ghsa_id}\"],\n    listGlobalAdvisories: [\"GET /advisories\"],\n    listOrgRepositoryAdvisories: [\"GET /orgs/{org}/security-advisories\"],\n    listRepositoryAdvisories: [\"GET /repos/{owner}/{repo}/security-advisories\"],\n    updateRepositoryAdvisory: [\"PATCH /repos/{owner}/{repo}/security-advisories/{ghsa_id}\"]\n  },\n  teams: {\n    addOrUpdateMembershipForUserInOrg: [\"PUT /orgs/{org}/teams/{team_slug}/memberships/{username}\"],\n    addOrUpdateProjectPermissionsInOrg: [\"PUT /orgs/{org}/teams/{team_slug}/projects/{project_id}\"],\n    addOrUpdateRepoPermissionsInOrg: [\"PUT /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}\"],\n    checkPermissionsForProjectInOrg: [\"GET /orgs/{org}/teams/{team_slug}/projects/{project_id}\"],\n    checkPermissionsForRepoInOrg: [\"GET /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}\"],\n    create: [\"POST /orgs/{org}/teams\"],\n    createDiscussionCommentInOrg: [\"POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments\"],\n    createDiscussionInOrg: [\"POST /orgs/{org}/teams/{team_slug}/discussions\"],\n    deleteDiscussionCommentInOrg: [\"DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}\"],\n    deleteDiscussionInOrg: [\"DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}\"],\n    deleteInOrg: [\"DELETE /orgs/{org}/teams/{team_slug}\"],\n    getByName: [\"GET /orgs/{org}/teams/{team_slug}\"],\n    getDiscussionCommentInOrg: [\"GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}\"],\n    getDiscussionInOrg: [\"GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}\"],\n    getMembershipForUserInOrg: [\"GET /orgs/{org}/teams/{team_slug}/memberships/{username}\"],\n    list: [\"GET /orgs/{org}/teams\"],\n    listChildInOrg: [\"GET /orgs/{org}/teams/{team_slug}/teams\"],\n    listDiscussionCommentsInOrg: [\"GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments\"],\n    listDiscussionsInOrg: [\"GET /orgs/{org}/teams/{team_slug}/discussions\"],\n    listForAuthenticatedUser: [\"GET /user/teams\"],\n    listMembersInOrg: [\"GET /orgs/{org}/teams/{team_slug}/members\"],\n    listPendingInvitationsInOrg: [\"GET /orgs/{org}/teams/{team_slug}/invitations\"],\n    listProjectsInOrg: [\"GET /orgs/{org}/teams/{team_slug}/projects\"],\n    listReposInOrg: [\"GET /orgs/{org}/teams/{team_slug}/repos\"],\n    removeMembershipForUserInOrg: [\"DELETE /orgs/{org}/teams/{team_slug}/memberships/{username}\"],\n    removeProjectInOrg: [\"DELETE /orgs/{org}/teams/{team_slug}/projects/{project_id}\"],\n    removeRepoInOrg: [\"DELETE /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}\"],\n    updateDiscussionCommentInOrg: [\"PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}\"],\n    updateDiscussionInOrg: [\"PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}\"],\n    updateInOrg: [\"PATCH /orgs/{org}/teams/{team_slug}\"]\n  },\n  users: {\n    addEmailForAuthenticated: [\"POST /user/emails\", {}, {\n      renamed: [\"users\", \"addEmailForAuthenticatedUser\"]\n    }],\n    addEmailForAuthenticatedUser: [\"POST /user/emails\"],\n    addSocialAccountForAuthenticatedUser: [\"POST /user/social_accounts\"],\n    block: [\"PUT /user/blocks/{username}\"],\n    checkBlocked: [\"GET /user/blocks/{username}\"],\n    checkFollowingForUser: [\"GET /users/{username}/following/{target_user}\"],\n    checkPersonIsFollowedByAuthenticated: [\"GET /user/following/{username}\"],\n    createGpgKeyForAuthenticated: [\"POST /user/gpg_keys\", {}, {\n      renamed: [\"users\", \"createGpgKeyForAuthenticatedUser\"]\n    }],\n    createGpgKeyForAuthenticatedUser: [\"POST /user/gpg_keys\"],\n    createPublicSshKeyForAuthenticated: [\"POST /user/keys\", {}, {\n      renamed: [\"users\", \"createPublicSshKeyForAuthenticatedUser\"]\n    }],\n    createPublicSshKeyForAuthenticatedUser: [\"POST /user/keys\"],\n    createSshSigningKeyForAuthenticatedUser: [\"POST /user/ssh_signing_keys\"],\n    deleteEmailForAuthenticated: [\"DELETE /user/emails\", {}, {\n      renamed: [\"users\", \"deleteEmailForAuthenticatedUser\"]\n    }],\n    deleteEmailForAuthenticatedUser: [\"DELETE /user/emails\"],\n    deleteGpgKeyForAuthenticated: [\"DELETE /user/gpg_keys/{gpg_key_id}\", {}, {\n      renamed: [\"users\", \"deleteGpgKeyForAuthenticatedUser\"]\n    }],\n    deleteGpgKeyForAuthenticatedUser: [\"DELETE /user/gpg_keys/{gpg_key_id}\"],\n    deletePublicSshKeyForAuthenticated: [\"DELETE /user/keys/{key_id}\", {}, {\n      renamed: [\"users\", \"deletePublicSshKeyForAuthenticatedUser\"]\n    }],\n    deletePublicSshKeyForAuthenticatedUser: [\"DELETE /user/keys/{key_id}\"],\n    deleteSocialAccountForAuthenticatedUser: [\"DELETE /user/social_accounts\"],\n    deleteSshSigningKeyForAuthenticatedUser: [\"DELETE /user/ssh_signing_keys/{ssh_signing_key_id}\"],\n    follow: [\"PUT /user/following/{username}\"],\n    getAuthenticated: [\"GET /user\"],\n    getByUsername: [\"GET /users/{username}\"],\n    getContextForUser: [\"GET /users/{username}/hovercard\"],\n    getGpgKeyForAuthenticated: [\"GET /user/gpg_keys/{gpg_key_id}\", {}, {\n      renamed: [\"users\", \"getGpgKeyForAuthenticatedUser\"]\n    }],\n    getGpgKeyForAuthenticatedUser: [\"GET /user/gpg_keys/{gpg_key_id}\"],\n    getPublicSshKeyForAuthenticated: [\"GET /user/keys/{key_id}\", {}, {\n      renamed: [\"users\", \"getPublicSshKeyForAuthenticatedUser\"]\n    }],\n    getPublicSshKeyForAuthenticatedUser: [\"GET /user/keys/{key_id}\"],\n    getSshSigningKeyForAuthenticatedUser: [\"GET /user/ssh_signing_keys/{ssh_signing_key_id}\"],\n    list: [\"GET /users\"],\n    listBlockedByAuthenticated: [\"GET /user/blocks\", {}, {\n      renamed: [\"users\", \"listBlockedByAuthenticatedUser\"]\n    }],\n    listBlockedByAuthenticatedUser: [\"GET /user/blocks\"],\n    listEmailsForAuthenticated: [\"GET /user/emails\", {}, {\n      renamed: [\"users\", \"listEmailsForAuthenticatedUser\"]\n    }],\n    listEmailsForAuthenticatedUser: [\"GET /user/emails\"],\n    listFollowedByAuthenticated: [\"GET /user/following\", {}, {\n      renamed: [\"users\", \"listFollowedByAuthenticatedUser\"]\n    }],\n    listFollowedByAuthenticatedUser: [\"GET /user/following\"],\n    listFollowersForAuthenticatedUser: [\"GET /user/followers\"],\n    listFollowersForUser: [\"GET /users/{username}/followers\"],\n    listFollowingForUser: [\"GET /users/{username}/following\"],\n    listGpgKeysForAuthenticated: [\"GET /user/gpg_keys\", {}, {\n      renamed: [\"users\", \"listGpgKeysForAuthenticatedUser\"]\n    }],\n    listGpgKeysForAuthenticatedUser: [\"GET /user/gpg_keys\"],\n    listGpgKeysForUser: [\"GET /users/{username}/gpg_keys\"],\n    listPublicEmailsForAuthenticated: [\"GET /user/public_emails\", {}, {\n      renamed: [\"users\", \"listPublicEmailsForAuthenticatedUser\"]\n    }],\n    listPublicEmailsForAuthenticatedUser: [\"GET /user/public_emails\"],\n    listPublicKeysForUser: [\"GET /users/{username}/keys\"],\n    listPublicSshKeysForAuthenticated: [\"GET /user/keys\", {}, {\n      renamed: [\"users\", \"listPublicSshKeysForAuthenticatedUser\"]\n    }],\n    listPublicSshKeysForAuthenticatedUser: [\"GET /user/keys\"],\n    listSocialAccountsForAuthenticatedUser: [\"GET /user/social_accounts\"],\n    listSocialAccountsForUser: [\"GET /users/{username}/social_accounts\"],\n    listSshSigningKeysForAuthenticatedUser: [\"GET /user/ssh_signing_keys\"],\n    listSshSigningKeysForUser: [\"GET /users/{username}/ssh_signing_keys\"],\n    setPrimaryEmailVisibilityForAuthenticated: [\"PATCH /user/email/visibility\", {}, {\n      renamed: [\"users\", \"setPrimaryEmailVisibilityForAuthenticatedUser\"]\n    }],\n    setPrimaryEmailVisibilityForAuthenticatedUser: [\"PATCH /user/email/visibility\"],\n    unblock: [\"DELETE /user/blocks/{username}\"],\n    unfollow: [\"DELETE /user/following/{username}\"],\n    updateAuthenticated: [\"PATCH /user\"]\n  }\n};\nvar endpoints_default = Endpoints;\n\n// pkg/dist-src/endpoints-to-methods.js\nvar endpointMethodsMap = /* @__PURE__ */new Map();\nfor (const [scope, endpoints] of Object.entries(endpoints_default)) {\n  for (const [methodName, endpoint] of Object.entries(endpoints)) {\n    const [route, defaults, decorations] = endpoint;\n    const [method, url] = route.split(/ /);\n    const endpointDefaults = Object.assign({\n      method,\n      url\n    }, defaults);\n    if (!endpointMethodsMap.has(scope)) {\n      endpointMethodsMap.set(scope, /* @__PURE__ */new Map());\n    }\n    endpointMethodsMap.get(scope).set(methodName, {\n      scope,\n      methodName,\n      endpointDefaults,\n      decorations\n    });\n  }\n}\nvar handler = {\n  has({\n    scope\n  }, methodName) {\n    return endpointMethodsMap.get(scope).has(methodName);\n  },\n  getOwnPropertyDescriptor(target, methodName) {\n    return {\n      value: this.get(target, methodName),\n      // ensures method is in the cache\n      configurable: true,\n      writable: true,\n      enumerable: true\n    };\n  },\n  defineProperty(target, methodName, descriptor) {\n    Object.defineProperty(target.cache, methodName, descriptor);\n    return true;\n  },\n  deleteProperty(target, methodName) {\n    delete target.cache[methodName];\n    return true;\n  },\n  ownKeys({\n    scope\n  }) {\n    return [...endpointMethodsMap.get(scope).keys()];\n  },\n  set(target, methodName, value) {\n    return target.cache[methodName] = value;\n  },\n  get({\n    octokit,\n    scope,\n    cache\n  }, methodName) {\n    if (cache[methodName]) {\n      return cache[methodName];\n    }\n    const method = endpointMethodsMap.get(scope).get(methodName);\n    if (!method) {\n      return void 0;\n    }\n    const {\n      endpointDefaults,\n      decorations\n    } = method;\n    if (decorations) {\n      cache[methodName] = decorate(octokit, scope, methodName, endpointDefaults, decorations);\n    } else {\n      cache[methodName] = octokit.request.defaults(endpointDefaults);\n    }\n    return cache[methodName];\n  }\n};\nfunction endpointsToMethods(octokit) {\n  const newMethods = {};\n  for (const scope of endpointMethodsMap.keys()) {\n    newMethods[scope] = new Proxy({\n      octokit,\n      scope,\n      cache: {}\n    }, handler);\n  }\n  return newMethods;\n}\nfunction decorate(octokit, scope, methodName, defaults, decorations) {\n  const requestWithDefaults = octokit.request.defaults(defaults);\n  function withDecorations(...args) {\n    let options = requestWithDefaults.endpoint.merge(...args);\n    if (decorations.mapToData) {\n      options = Object.assign({}, options, {\n        data: options[decorations.mapToData],\n        [decorations.mapToData]: void 0\n      });\n      return requestWithDefaults(options);\n    }\n    if (decorations.renamed) {\n      const [newScope, newMethodName] = decorations.renamed;\n      octokit.log.warn(`octokit.${scope}.${methodName}() has been renamed to octokit.${newScope}.${newMethodName}()`);\n    }\n    if (decorations.deprecated) {\n      octokit.log.warn(decorations.deprecated);\n    }\n    if (decorations.renamedParameters) {\n      const options2 = requestWithDefaults.endpoint.merge(...args);\n      for (const [name, alias] of Object.entries(decorations.renamedParameters)) {\n        if (name in options2) {\n          octokit.log.warn(`\"${name}\" parameter is deprecated for \"octokit.${scope}.${methodName}()\". Use \"${alias}\" instead`);\n          if (!(alias in options2)) {\n            options2[alias] = options2[name];\n          }\n          delete options2[name];\n        }\n      }\n      return requestWithDefaults(options2);\n    }\n    return requestWithDefaults(...args);\n  }\n  return Object.assign(withDecorations, requestWithDefaults);\n}\n\n// pkg/dist-src/index.js\nfunction restEndpointMethods(octokit) {\n  const api = endpointsToMethods(octokit);\n  return {\n    rest: api\n  };\n}\nrestEndpointMethods.VERSION = VERSION;\nfunction legacyRestEndpointMethods(octokit) {\n  const api = endpointsToMethods(octokit);\n  return {\n    ...api,\n    rest: api\n  };\n}\nlegacyRestEndpointMethods.VERSION = VERSION;\nexport { legacyRestEndpointMethods, restEndpointMethods };","map":{"version":3,"names":["VERSION","Endpoints","actions","addCustomLabelsToSelfHostedRunnerForOrg","addCustomLabelsToSelfHostedRunnerForRepo","addSelectedRepoToOrgSecret","addSelectedRepoToOrgVariable","approveWorkflowRun","cancelWorkflowRun","createEnvironmentVariable","createOrUpdateEnvironmentSecret","createOrUpdateOrgSecret","createOrUpdateRepoSecret","createOrgVariable","createRegistrationTokenForOrg","createRegistrationTokenForRepo","createRemoveTokenForOrg","createRemoveTokenForRepo","createRepoVariable","createWorkflowDispatch","deleteActionsCacheById","deleteActionsCacheByKey","deleteArtifact","deleteEnvironmentSecret","deleteEnvironmentVariable","deleteOrgSecret","deleteOrgVariable","deleteRepoSecret","deleteRepoVariable","deleteSelfHostedRunnerFromOrg","deleteSelfHostedRunnerFromRepo","deleteWorkflowRun","deleteWorkflowRunLogs","disableSelectedRepositoryGithubActionsOrganization","disableWorkflow","downloadArtifact","downloadJobLogsForWorkflowRun","downloadWorkflowRunAttemptLogs","downloadWorkflowRunLogs","enableSelectedRepositoryGithubActionsOrganization","enableWorkflow","forceCancelWorkflowRun","generateRunnerJitconfigForOrg","generateRunnerJitconfigForRepo","getActionsCacheList","getActionsCacheUsage","getActionsCacheUsageByRepoForOrg","getActionsCacheUsageForOrg","getAllowedActionsOrganization","getAllowedActionsRepository","getArtifact","getEnvironmentPublicKey","getEnvironmentSecret","getEnvironmentVariable","getGithubActionsDefaultWorkflowPermissionsOrganization","getGithubActionsDefaultWorkflowPermissionsRepository","getGithubActionsPermissionsOrganization","getGithubActionsPermissionsRepository","getJobForWorkflowRun","getOrgPublicKey","getOrgSecret","getOrgVariable","getPendingDeploymentsForRun","getRepoPermissions","renamed","getRepoPublicKey","getRepoSecret","getRepoVariable","getReviewsForRun","getSelfHostedRunnerForOrg","getSelfHostedRunnerForRepo","getWorkflow","getWorkflowAccessToRepository","getWorkflowRun","getWorkflowRunAttempt","getWorkflowRunUsage","getWorkflowUsage","listArtifactsForRepo","listEnvironmentSecrets","listEnvironmentVariables","listJobsForWorkflowRun","listJobsForWorkflowRunAttempt","listLabelsForSelfHostedRunnerForOrg","listLabelsForSelfHostedRunnerForRepo","listOrgSecrets","listOrgVariables","listRepoOrganizationSecrets","listRepoOrganizationVariables","listRepoSecrets","listRepoVariables","listRepoWorkflows","listRunnerApplicationsForOrg","listRunnerApplicationsForRepo","listSelectedReposForOrgSecret","listSelectedReposForOrgVariable","listSelectedRepositoriesEnabledGithubActionsOrganization","listSelfHostedRunnersForOrg","listSelfHostedRunnersForRepo","listWorkflowRunArtifacts","listWorkflowRuns","listWorkflowRunsForRepo","reRunJobForWorkflowRun","reRunWorkflow","reRunWorkflowFailedJobs","removeAllCustomLabelsFromSelfHostedRunnerForOrg","removeAllCustomLabelsFromSelfHostedRunnerForRepo","removeCustomLabelFromSelfHostedRunnerForOrg","removeCustomLabelFromSelfHostedRunnerForRepo","removeSelectedRepoFromOrgSecret","removeSelectedRepoFromOrgVariable","reviewCustomGatesForRun","reviewPendingDeploymentsForRun","setAllowedActionsOrganization","setAllowedActionsRepository","setCustomLabelsForSelfHostedRunnerForOrg","setCustomLabelsForSelfHostedRunnerForRepo","setGithubActionsDefaultWorkflowPermissionsOrganization","setGithubActionsDefaultWorkflowPermissionsRepository","setGithubActionsPermissionsOrganization","setGithubActionsPermissionsRepository","setSelectedReposForOrgSecret","setSelectedReposForOrgVariable","setSelectedRepositoriesEnabledGithubActionsOrganization","setWorkflowAccessToRepository","updateEnvironmentVariable","updateOrgVariable","updateRepoVariable","activity","checkRepoIsStarredByAuthenticatedUser","deleteRepoSubscription","deleteThreadSubscription","getFeeds","getRepoSubscription","getThread","getThreadSubscriptionForAuthenticatedUser","listEventsForAuthenticatedUser","listNotificationsForAuthenticatedUser","listOrgEventsForAuthenticatedUser","listPublicEvents","listPublicEventsForRepoNetwork","listPublicEventsForUser","listPublicOrgEvents","listReceivedEventsForUser","listReceivedPublicEventsForUser","listRepoEvents","listRepoNotificationsForAuthenticatedUser","listReposStarredByAuthenticatedUser","listReposStarredByUser","listReposWatchedByUser","listStargazersForRepo","listWatchedReposForAuthenticatedUser","listWatchersForRepo","markNotificationsAsRead","markRepoNotificationsAsRead","markThreadAsRead","setRepoSubscription","setThreadSubscription","starRepoForAuthenticatedUser","unstarRepoForAuthenticatedUser","apps","addRepoToInstallation","addRepoToInstallationForAuthenticatedUser","checkToken","createFromManifest","createInstallationAccessToken","deleteAuthorization","deleteInstallation","deleteToken","getAuthenticated","getBySlug","getInstallation","getOrgInstallation","getRepoInstallation","getSubscriptionPlanForAccount","getSubscriptionPlanForAccountStubbed","getUserInstallation","getWebhookConfigForApp","getWebhookDelivery","listAccountsForPlan","listAccountsForPlanStubbed","listInstallationReposForAuthenticatedUser","listInstallationRequestsForAuthenticatedApp","listInstallations","listInstallationsForAuthenticatedUser","listPlans","listPlansStubbed","listReposAccessibleToInstallation","listSubscriptionsForAuthenticatedUser","listSubscriptionsForAuthenticatedUserStubbed","listWebhookDeliveries","redeliverWebhookDelivery","removeRepoFromInstallation","removeRepoFromInstallationForAuthenticatedUser","resetToken","revokeInstallationAccessToken","scopeToken","suspendInstallation","unsuspendInstallation","updateWebhookConfigForApp","billing","getGithubActionsBillingOrg","getGithubActionsBillingUser","getGithubPackagesBillingOrg","getGithubPackagesBillingUser","getSharedStorageBillingOrg","getSharedStorageBillingUser","checks","create","createSuite","get","getSuite","listAnnotations","listForRef","listForSuite","listSuitesForRef","rerequestRun","rerequestSuite","setSuitesPreferences","update","codeScanning","deleteAnalysis","getAlert","renamedParameters","alert_id","getAnalysis","getCodeqlDatabase","getDefaultSetup","getSarif","listAlertInstances","listAlertsForOrg","listAlertsForRepo","listAlertsInstances","listCodeqlDatabases","listRecentAnalyses","updateAlert","updateDefaultSetup","uploadSarif","codesOfConduct","getAllCodesOfConduct","getConductCode","codespaces","addRepositoryForSecretForAuthenticatedUser","checkPermissionsForDevcontainer","codespaceMachinesForAuthenticatedUser","createForAuthenticatedUser","createOrUpdateSecretForAuthenticatedUser","createWithPrForAuthenticatedUser","createWithRepoForAuthenticatedUser","deleteForAuthenticatedUser","deleteFromOrganization","deleteSecretForAuthenticatedUser","exportForAuthenticatedUser","getCodespacesForUserInOrg","getExportDetailsForAuthenticatedUser","getForAuthenticatedUser","getPublicKeyForAuthenticatedUser","getSecretForAuthenticatedUser","listDevcontainersInRepositoryForAuthenticatedUser","listForAuthenticatedUser","listInOrganization","org_id","listInRepositoryForAuthenticatedUser","listRepositoriesForSecretForAuthenticatedUser","listSecretsForAuthenticatedUser","preFlightWithRepoForAuthenticatedUser","publishForAuthenticatedUser","removeRepositoryForSecretForAuthenticatedUser","repoMachinesForAuthenticatedUser","setRepositoriesForSecretForAuthenticatedUser","startForAuthenticatedUser","stopForAuthenticatedUser","stopInOrganization","updateForAuthenticatedUser","copilot","addCopilotForBusinessSeatsForTeams","addCopilotForBusinessSeatsForUsers","cancelCopilotSeatAssignmentForTeams","cancelCopilotSeatAssignmentForUsers","getCopilotOrganizationDetails","getCopilotSeatDetailsForUser","listCopilotSeats","dependabot","listAlertsForEnterprise","dependencyGraph","createRepositorySnapshot","diffRange","exportSbom","emojis","gists","checkIsStarred","createComment","delete","deleteComment","fork","getComment","getRevision","list","listComments","listCommits","listForUser","listForks","listPublic","listStarred","star","unstar","updateComment","git","createBlob","createCommit","createRef","createTag","createTree","deleteRef","getBlob","getCommit","getRef","getTag","getTree","listMatchingRefs","updateRef","gitignore","getAllTemplates","getTemplate","interactions","getRestrictionsForAuthenticatedUser","getRestrictionsForOrg","getRestrictionsForRepo","getRestrictionsForYourPublicRepos","removeRestrictionsForAuthenticatedUser","removeRestrictionsForOrg","removeRestrictionsForRepo","removeRestrictionsForYourPublicRepos","setRestrictionsForAuthenticatedUser","setRestrictionsForOrg","setRestrictionsForRepo","setRestrictionsForYourPublicRepos","issues","addAssignees","addLabels","checkUserCanBeAssigned","checkUserCanBeAssignedToIssue","createLabel","createMilestone","deleteLabel","deleteMilestone","getEvent","getLabel","getMilestone","listAssignees","listCommentsForRepo","listEvents","listEventsForRepo","listEventsForTimeline","listForOrg","listForRepo","listLabelsForMilestone","listLabelsForRepo","listLabelsOnIssue","listMilestones","lock","removeAllLabels","removeAssignees","removeLabel","setLabels","unlock","updateLabel","updateMilestone","licenses","getAllCommonlyUsed","getForRepo","markdown","render","renderRaw","headers","meta","getAllVersions","getOctocat","getZen","root","migrations","cancelImport","deprecated","deleteArchiveForAuthenticatedUser","deleteArchiveForOrg","downloadArchiveForOrg","getArchiveForAuthenticatedUser","getCommitAuthors","getImportStatus","getLargeFiles","getStatusForAuthenticatedUser","getStatusForOrg","listReposForAuthenticatedUser","listReposForOrg","listReposForUser","mapCommitAuthor","setLfsPreference","startForOrg","startImport","unlockRepoForAuthenticatedUser","unlockRepoForOrg","updateImport","orgs","addSecurityManagerTeam","blockUser","cancelInvitation","checkBlockedUser","checkMembershipForUser","checkPublicMembershipForUser","convertMemberToOutsideCollaborator","createInvitation","createOrUpdateCustomProperties","createOrUpdateCustomPropertiesValuesForRepos","createOrUpdateCustomProperty","createWebhook","deleteWebhook","enableOrDisableSecurityProductOnAllOrgRepos","getAllCustomProperties","getCustomProperty","getMembershipForAuthenticatedUser","getMembershipForUser","getWebhook","getWebhookConfigForOrg","listAppInstallations","listBlockedUsers","listCustomPropertiesValuesForRepos","listFailedInvitations","listInvitationTeams","listMembers","listMembershipsForAuthenticatedUser","listOutsideCollaborators","listPatGrantRepositories","listPatGrantRequestRepositories","listPatGrantRequests","listPatGrants","listPendingInvitations","listPublicMembers","listSecurityManagerTeams","listWebhooks","pingWebhook","removeCustomProperty","removeMember","removeMembershipForUser","removeOutsideCollaborator","removePublicMembershipForAuthenticatedUser","removeSecurityManagerTeam","reviewPatGrantRequest","reviewPatGrantRequestsInBulk","setMembershipForUser","setPublicMembershipForAuthenticatedUser","unblockUser","updateMembershipForAuthenticatedUser","updatePatAccess","updatePatAccesses","updateWebhook","updateWebhookConfigForOrg","packages","deletePackageForAuthenticatedUser","deletePackageForOrg","deletePackageForUser","deletePackageVersionForAuthenticatedUser","deletePackageVersionForOrg","deletePackageVersionForUser","getAllPackageVersionsForAPackageOwnedByAnOrg","getAllPackageVersionsForAPackageOwnedByTheAuthenticatedUser","getAllPackageVersionsForPackageOwnedByAuthenticatedUser","getAllPackageVersionsForPackageOwnedByOrg","getAllPackageVersionsForPackageOwnedByUser","getPackageForAuthenticatedUser","getPackageForOrganization","getPackageForUser","getPackageVersionForAuthenticatedUser","getPackageVersionForOrganization","getPackageVersionForUser","listDockerMigrationConflictingPackagesForAuthenticatedUser","listDockerMigrationConflictingPackagesForOrganization","listDockerMigrationConflictingPackagesForUser","listPackagesForAuthenticatedUser","listPackagesForOrganization","listPackagesForUser","restorePackageForAuthenticatedUser","restorePackageForOrg","restorePackageForUser","restorePackageVersionForAuthenticatedUser","restorePackageVersionForOrg","restorePackageVersionForUser","projects","addCollaborator","createCard","createColumn","createForOrg","createForRepo","deleteCard","deleteColumn","getCard","getColumn","getPermissionForUser","listCards","listCollaborators","listColumns","moveCard","moveColumn","removeCollaborator","updateCard","updateColumn","pulls","checkIfMerged","createReplyForReviewComment","createReview","createReviewComment","deletePendingReview","deleteReviewComment","dismissReview","getReview","getReviewComment","listCommentsForReview","listFiles","listRequestedReviewers","listReviewComments","listReviewCommentsForRepo","listReviews","merge","removeRequestedReviewers","requestReviewers","submitReview","updateBranch","updateReview","updateReviewComment","rateLimit","reactions","createForCommitComment","createForIssue","createForIssueComment","createForPullRequestReviewComment","createForRelease","createForTeamDiscussionCommentInOrg","createForTeamDiscussionInOrg","deleteForCommitComment","deleteForIssue","deleteForIssueComment","deleteForPullRequestComment","deleteForRelease","deleteForTeamDiscussion","deleteForTeamDiscussionComment","listForCommitComment","listForIssue","listForIssueComment","listForPullRequestReviewComment","listForRelease","listForTeamDiscussionCommentInOrg","listForTeamDiscussionInOrg","repos","acceptInvitation","acceptInvitationForAuthenticatedUser","addAppAccessRestrictions","mapToData","addStatusCheckContexts","addTeamAccessRestrictions","addUserAccessRestrictions","checkAutomatedSecurityFixes","checkCollaborator","checkVulnerabilityAlerts","codeownersErrors","compareCommits","compareCommitsWithBasehead","createAutolink","createCommitComment","createCommitSignatureProtection","createCommitStatus","createDeployKey","createDeployment","createDeploymentBranchPolicy","createDeploymentProtectionRule","createDeploymentStatus","createDispatchEvent","createFork","createInOrg","createOrUpdateEnvironment","createOrUpdateFileContents","createOrgRuleset","createPagesDeployment","createPagesSite","createRelease","createRepoRuleset","createTagProtection","createUsingTemplate","declineInvitation","declineInvitationForAuthenticatedUser","deleteAccessRestrictions","deleteAdminBranchProtection","deleteAnEnvironment","deleteAutolink","deleteBranchProtection","deleteCommitComment","deleteCommitSignatureProtection","deleteDeployKey","deleteDeployment","deleteDeploymentBranchPolicy","deleteFile","deleteInvitation","deleteOrgRuleset","deletePagesSite","deletePullRequestReviewProtection","deleteRelease","deleteReleaseAsset","deleteRepoRuleset","deleteTagProtection","disableAutomatedSecurityFixes","disableDeploymentProtectionRule","disablePrivateVulnerabilityReporting","disableVulnerabilityAlerts","downloadArchive","downloadTarballArchive","downloadZipballArchive","enableAutomatedSecurityFixes","enablePrivateVulnerabilityReporting","enableVulnerabilityAlerts","generateReleaseNotes","getAccessRestrictions","getAdminBranchProtection","getAllDeploymentProtectionRules","getAllEnvironments","getAllStatusCheckContexts","getAllTopics","getAppsWithAccessToProtectedBranch","getAutolink","getBranch","getBranchProtection","getBranchRules","getClones","getCodeFrequencyStats","getCollaboratorPermissionLevel","getCombinedStatusForRef","getCommitActivityStats","getCommitComment","getCommitSignatureProtection","getCommunityProfileMetrics","getContent","getContributorsStats","getCustomDeploymentProtectionRule","getCustomPropertiesValues","getDeployKey","getDeployment","getDeploymentBranchPolicy","getDeploymentStatus","getEnvironment","getLatestPagesBuild","getLatestRelease","getOrgRuleSuite","getOrgRuleSuites","getOrgRuleset","getOrgRulesets","getPages","getPagesBuild","getPagesHealthCheck","getParticipationStats","getPullRequestReviewProtection","getPunchCardStats","getReadme","getReadmeInDirectory","getRelease","getReleaseAsset","getReleaseByTag","getRepoRuleSuite","getRepoRuleSuites","getRepoRuleset","getRepoRulesets","getStatusChecksProtection","getTeamsWithAccessToProtectedBranch","getTopPaths","getTopReferrers","getUsersWithAccessToProtectedBranch","getViews","getWebhookConfigForRepo","listActivities","listAutolinks","listBranches","listBranchesForHeadCommit","listCommentsForCommit","listCommitCommentsForRepo","listCommitStatusesForRef","listContributors","listCustomDeploymentRuleIntegrations","listDeployKeys","listDeploymentBranchPolicies","listDeploymentStatuses","listDeployments","listInvitations","listInvitationsForAuthenticatedUser","listLanguages","listPagesBuilds","listPullRequestsAssociatedWithCommit","listReleaseAssets","listReleases","listTagProtection","listTags","listTeams","mergeUpstream","removeAppAccessRestrictions","removeStatusCheckContexts","removeStatusCheckProtection","removeTeamAccessRestrictions","removeUserAccessRestrictions","renameBranch","replaceAllTopics","requestPagesBuild","setAdminBranchProtection","setAppAccessRestrictions","setStatusCheckContexts","setTeamAccessRestrictions","setUserAccessRestrictions","testPushWebhook","transfer","updateBranchProtection","updateCommitComment","updateDeploymentBranchPolicy","updateInformationAboutPagesSite","updateInvitation","updateOrgRuleset","updatePullRequestReviewProtection","updateRelease","updateReleaseAsset","updateRepoRuleset","updateStatusCheckPotection","updateStatusCheckProtection","updateWebhookConfigForRepo","uploadReleaseAsset","baseUrl","search","code","commits","issuesAndPullRequests","labels","topics","users","secretScanning","listLocationsForAlert","securityAdvisories","createPrivateVulnerabilityReport","createRepositoryAdvisory","createRepositoryAdvisoryCveRequest","getGlobalAdvisory","getRepositoryAdvisory","listGlobalAdvisories","listOrgRepositoryAdvisories","listRepositoryAdvisories","updateRepositoryAdvisory","teams","addOrUpdateMembershipForUserInOrg","addOrUpdateProjectPermissionsInOrg","addOrUpdateRepoPermissionsInOrg","checkPermissionsForProjectInOrg","checkPermissionsForRepoInOrg","createDiscussionCommentInOrg","createDiscussionInOrg","deleteDiscussionCommentInOrg","deleteDiscussionInOrg","deleteInOrg","getByName","getDiscussionCommentInOrg","getDiscussionInOrg","getMembershipForUserInOrg","listChildInOrg","listDiscussionCommentsInOrg","listDiscussionsInOrg","listMembersInOrg","listPendingInvitationsInOrg","listProjectsInOrg","listReposInOrg","removeMembershipForUserInOrg","removeProjectInOrg","removeRepoInOrg","updateDiscussionCommentInOrg","updateDiscussionInOrg","updateInOrg","addEmailForAuthenticated","addEmailForAuthenticatedUser","addSocialAccountForAuthenticatedUser","block","checkBlocked","checkFollowingForUser","checkPersonIsFollowedByAuthenticated","createGpgKeyForAuthenticated","createGpgKeyForAuthenticatedUser","createPublicSshKeyForAuthenticated","createPublicSshKeyForAuthenticatedUser","createSshSigningKeyForAuthenticatedUser","deleteEmailForAuthenticated","deleteEmailForAuthenticatedUser","deleteGpgKeyForAuthenticated","deleteGpgKeyForAuthenticatedUser","deletePublicSshKeyForAuthenticated","deletePublicSshKeyForAuthenticatedUser","deleteSocialAccountForAuthenticatedUser","deleteSshSigningKeyForAuthenticatedUser","follow","getByUsername","getContextForUser","getGpgKeyForAuthenticated","getGpgKeyForAuthenticatedUser","getPublicSshKeyForAuthenticated","getPublicSshKeyForAuthenticatedUser","getSshSigningKeyForAuthenticatedUser","listBlockedByAuthenticated","listBlockedByAuthenticatedUser","listEmailsForAuthenticated","listEmailsForAuthenticatedUser","listFollowedByAuthenticated","listFollowedByAuthenticatedUser","listFollowersForAuthenticatedUser","listFollowersForUser","listFollowingForUser","listGpgKeysForAuthenticated","listGpgKeysForAuthenticatedUser","listGpgKeysForUser","listPublicEmailsForAuthenticated","listPublicEmailsForAuthenticatedUser","listPublicKeysForUser","listPublicSshKeysForAuthenticated","listPublicSshKeysForAuthenticatedUser","listSocialAccountsForAuthenticatedUser","listSocialAccountsForUser","listSshSigningKeysForAuthenticatedUser","listSshSigningKeysForUser","setPrimaryEmailVisibilityForAuthenticated","setPrimaryEmailVisibilityForAuthenticatedUser","unblock","unfollow","updateAuthenticated","endpoints_default","endpointMethodsMap","Map","scope","endpoints","Object","entries","methodName","endpoint","route","defaults","decorations","method","url","split","endpointDefaults","assign","has","set","handler","getOwnPropertyDescriptor","target","value","configurable","writable","enumerable","defineProperty","descriptor","cache","deleteProperty","ownKeys","keys","octokit","decorate","request","endpointsToMethods","newMethods","Proxy","requestWithDefaults","withDecorations","args","options","data","newScope","newMethodName","log","warn","options2","name","alias","restEndpointMethods","api","rest","legacyRestEndpointMethods"],"sources":["C:/Users/natek/Downloads/OSPO/react-os-framework/project-form/client/node_modules/@octokit/plugin-rest-endpoint-methods/dist-web/index.js"],"sourcesContent":["// pkg/dist-src/version.js\r\nvar VERSION = \"10.2.0\";\r\n\r\n// pkg/dist-src/generated/endpoints.js\r\nvar Endpoints = {\r\n  actions: {\r\n    addCustomLabelsToSelfHostedRunnerForOrg: [\r\n      \"POST /orgs/{org}/actions/runners/{runner_id}/labels\"\r\n    ],\r\n    addCustomLabelsToSelfHostedRunnerForRepo: [\r\n      \"POST /repos/{owner}/{repo}/actions/runners/{runner_id}/labels\"\r\n    ],\r\n    addSelectedRepoToOrgSecret: [\r\n      \"PUT /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}\"\r\n    ],\r\n    addSelectedRepoToOrgVariable: [\r\n      \"PUT /orgs/{org}/actions/variables/{name}/repositories/{repository_id}\"\r\n    ],\r\n    approveWorkflowRun: [\r\n      \"POST /repos/{owner}/{repo}/actions/runs/{run_id}/approve\"\r\n    ],\r\n    cancelWorkflowRun: [\r\n      \"POST /repos/{owner}/{repo}/actions/runs/{run_id}/cancel\"\r\n    ],\r\n    createEnvironmentVariable: [\r\n      \"POST /repositories/{repository_id}/environments/{environment_name}/variables\"\r\n    ],\r\n    createOrUpdateEnvironmentSecret: [\r\n      \"PUT /repositories/{repository_id}/environments/{environment_name}/secrets/{secret_name}\"\r\n    ],\r\n    createOrUpdateOrgSecret: [\"PUT /orgs/{org}/actions/secrets/{secret_name}\"],\r\n    createOrUpdateRepoSecret: [\r\n      \"PUT /repos/{owner}/{repo}/actions/secrets/{secret_name}\"\r\n    ],\r\n    createOrgVariable: [\"POST /orgs/{org}/actions/variables\"],\r\n    createRegistrationTokenForOrg: [\r\n      \"POST /orgs/{org}/actions/runners/registration-token\"\r\n    ],\r\n    createRegistrationTokenForRepo: [\r\n      \"POST /repos/{owner}/{repo}/actions/runners/registration-token\"\r\n    ],\r\n    createRemoveTokenForOrg: [\"POST /orgs/{org}/actions/runners/remove-token\"],\r\n    createRemoveTokenForRepo: [\r\n      \"POST /repos/{owner}/{repo}/actions/runners/remove-token\"\r\n    ],\r\n    createRepoVariable: [\"POST /repos/{owner}/{repo}/actions/variables\"],\r\n    createWorkflowDispatch: [\r\n      \"POST /repos/{owner}/{repo}/actions/workflows/{workflow_id}/dispatches\"\r\n    ],\r\n    deleteActionsCacheById: [\r\n      \"DELETE /repos/{owner}/{repo}/actions/caches/{cache_id}\"\r\n    ],\r\n    deleteActionsCacheByKey: [\r\n      \"DELETE /repos/{owner}/{repo}/actions/caches{?key,ref}\"\r\n    ],\r\n    deleteArtifact: [\r\n      \"DELETE /repos/{owner}/{repo}/actions/artifacts/{artifact_id}\"\r\n    ],\r\n    deleteEnvironmentSecret: [\r\n      \"DELETE /repositories/{repository_id}/environments/{environment_name}/secrets/{secret_name}\"\r\n    ],\r\n    deleteEnvironmentVariable: [\r\n      \"DELETE /repositories/{repository_id}/environments/{environment_name}/variables/{name}\"\r\n    ],\r\n    deleteOrgSecret: [\"DELETE /orgs/{org}/actions/secrets/{secret_name}\"],\r\n    deleteOrgVariable: [\"DELETE /orgs/{org}/actions/variables/{name}\"],\r\n    deleteRepoSecret: [\r\n      \"DELETE /repos/{owner}/{repo}/actions/secrets/{secret_name}\"\r\n    ],\r\n    deleteRepoVariable: [\r\n      \"DELETE /repos/{owner}/{repo}/actions/variables/{name}\"\r\n    ],\r\n    deleteSelfHostedRunnerFromOrg: [\r\n      \"DELETE /orgs/{org}/actions/runners/{runner_id}\"\r\n    ],\r\n    deleteSelfHostedRunnerFromRepo: [\r\n      \"DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}\"\r\n    ],\r\n    deleteWorkflowRun: [\"DELETE /repos/{owner}/{repo}/actions/runs/{run_id}\"],\r\n    deleteWorkflowRunLogs: [\r\n      \"DELETE /repos/{owner}/{repo}/actions/runs/{run_id}/logs\"\r\n    ],\r\n    disableSelectedRepositoryGithubActionsOrganization: [\r\n      \"DELETE /orgs/{org}/actions/permissions/repositories/{repository_id}\"\r\n    ],\r\n    disableWorkflow: [\r\n      \"PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/disable\"\r\n    ],\r\n    downloadArtifact: [\r\n      \"GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}/{archive_format}\"\r\n    ],\r\n    downloadJobLogsForWorkflowRun: [\r\n      \"GET /repos/{owner}/{repo}/actions/jobs/{job_id}/logs\"\r\n    ],\r\n    downloadWorkflowRunAttemptLogs: [\r\n      \"GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/logs\"\r\n    ],\r\n    downloadWorkflowRunLogs: [\r\n      \"GET /repos/{owner}/{repo}/actions/runs/{run_id}/logs\"\r\n    ],\r\n    enableSelectedRepositoryGithubActionsOrganization: [\r\n      \"PUT /orgs/{org}/actions/permissions/repositories/{repository_id}\"\r\n    ],\r\n    enableWorkflow: [\r\n      \"PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/enable\"\r\n    ],\r\n    forceCancelWorkflowRun: [\r\n      \"POST /repos/{owner}/{repo}/actions/runs/{run_id}/force-cancel\"\r\n    ],\r\n    generateRunnerJitconfigForOrg: [\r\n      \"POST /orgs/{org}/actions/runners/generate-jitconfig\"\r\n    ],\r\n    generateRunnerJitconfigForRepo: [\r\n      \"POST /repos/{owner}/{repo}/actions/runners/generate-jitconfig\"\r\n    ],\r\n    getActionsCacheList: [\"GET /repos/{owner}/{repo}/actions/caches\"],\r\n    getActionsCacheUsage: [\"GET /repos/{owner}/{repo}/actions/cache/usage\"],\r\n    getActionsCacheUsageByRepoForOrg: [\r\n      \"GET /orgs/{org}/actions/cache/usage-by-repository\"\r\n    ],\r\n    getActionsCacheUsageForOrg: [\"GET /orgs/{org}/actions/cache/usage\"],\r\n    getAllowedActionsOrganization: [\r\n      \"GET /orgs/{org}/actions/permissions/selected-actions\"\r\n    ],\r\n    getAllowedActionsRepository: [\r\n      \"GET /repos/{owner}/{repo}/actions/permissions/selected-actions\"\r\n    ],\r\n    getArtifact: [\"GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}\"],\r\n    getEnvironmentPublicKey: [\r\n      \"GET /repositories/{repository_id}/environments/{environment_name}/secrets/public-key\"\r\n    ],\r\n    getEnvironmentSecret: [\r\n      \"GET /repositories/{repository_id}/environments/{environment_name}/secrets/{secret_name}\"\r\n    ],\r\n    getEnvironmentVariable: [\r\n      \"GET /repositories/{repository_id}/environments/{environment_name}/variables/{name}\"\r\n    ],\r\n    getGithubActionsDefaultWorkflowPermissionsOrganization: [\r\n      \"GET /orgs/{org}/actions/permissions/workflow\"\r\n    ],\r\n    getGithubActionsDefaultWorkflowPermissionsRepository: [\r\n      \"GET /repos/{owner}/{repo}/actions/permissions/workflow\"\r\n    ],\r\n    getGithubActionsPermissionsOrganization: [\r\n      \"GET /orgs/{org}/actions/permissions\"\r\n    ],\r\n    getGithubActionsPermissionsRepository: [\r\n      \"GET /repos/{owner}/{repo}/actions/permissions\"\r\n    ],\r\n    getJobForWorkflowRun: [\"GET /repos/{owner}/{repo}/actions/jobs/{job_id}\"],\r\n    getOrgPublicKey: [\"GET /orgs/{org}/actions/secrets/public-key\"],\r\n    getOrgSecret: [\"GET /orgs/{org}/actions/secrets/{secret_name}\"],\r\n    getOrgVariable: [\"GET /orgs/{org}/actions/variables/{name}\"],\r\n    getPendingDeploymentsForRun: [\r\n      \"GET /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments\"\r\n    ],\r\n    getRepoPermissions: [\r\n      \"GET /repos/{owner}/{repo}/actions/permissions\",\r\n      {},\r\n      { renamed: [\"actions\", \"getGithubActionsPermissionsRepository\"] }\r\n    ],\r\n    getRepoPublicKey: [\"GET /repos/{owner}/{repo}/actions/secrets/public-key\"],\r\n    getRepoSecret: [\"GET /repos/{owner}/{repo}/actions/secrets/{secret_name}\"],\r\n    getRepoVariable: [\"GET /repos/{owner}/{repo}/actions/variables/{name}\"],\r\n    getReviewsForRun: [\r\n      \"GET /repos/{owner}/{repo}/actions/runs/{run_id}/approvals\"\r\n    ],\r\n    getSelfHostedRunnerForOrg: [\"GET /orgs/{org}/actions/runners/{runner_id}\"],\r\n    getSelfHostedRunnerForRepo: [\r\n      \"GET /repos/{owner}/{repo}/actions/runners/{runner_id}\"\r\n    ],\r\n    getWorkflow: [\"GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}\"],\r\n    getWorkflowAccessToRepository: [\r\n      \"GET /repos/{owner}/{repo}/actions/permissions/access\"\r\n    ],\r\n    getWorkflowRun: [\"GET /repos/{owner}/{repo}/actions/runs/{run_id}\"],\r\n    getWorkflowRunAttempt: [\r\n      \"GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}\"\r\n    ],\r\n    getWorkflowRunUsage: [\r\n      \"GET /repos/{owner}/{repo}/actions/runs/{run_id}/timing\"\r\n    ],\r\n    getWorkflowUsage: [\r\n      \"GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/timing\"\r\n    ],\r\n    listArtifactsForRepo: [\"GET /repos/{owner}/{repo}/actions/artifacts\"],\r\n    listEnvironmentSecrets: [\r\n      \"GET /repositories/{repository_id}/environments/{environment_name}/secrets\"\r\n    ],\r\n    listEnvironmentVariables: [\r\n      \"GET /repositories/{repository_id}/environments/{environment_name}/variables\"\r\n    ],\r\n    listJobsForWorkflowRun: [\r\n      \"GET /repos/{owner}/{repo}/actions/runs/{run_id}/jobs\"\r\n    ],\r\n    listJobsForWorkflowRunAttempt: [\r\n      \"GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/jobs\"\r\n    ],\r\n    listLabelsForSelfHostedRunnerForOrg: [\r\n      \"GET /orgs/{org}/actions/runners/{runner_id}/labels\"\r\n    ],\r\n    listLabelsForSelfHostedRunnerForRepo: [\r\n      \"GET /repos/{owner}/{repo}/actions/runners/{runner_id}/labels\"\r\n    ],\r\n    listOrgSecrets: [\"GET /orgs/{org}/actions/secrets\"],\r\n    listOrgVariables: [\"GET /orgs/{org}/actions/variables\"],\r\n    listRepoOrganizationSecrets: [\r\n      \"GET /repos/{owner}/{repo}/actions/organization-secrets\"\r\n    ],\r\n    listRepoOrganizationVariables: [\r\n      \"GET /repos/{owner}/{repo}/actions/organization-variables\"\r\n    ],\r\n    listRepoSecrets: [\"GET /repos/{owner}/{repo}/actions/secrets\"],\r\n    listRepoVariables: [\"GET /repos/{owner}/{repo}/actions/variables\"],\r\n    listRepoWorkflows: [\"GET /repos/{owner}/{repo}/actions/workflows\"],\r\n    listRunnerApplicationsForOrg: [\"GET /orgs/{org}/actions/runners/downloads\"],\r\n    listRunnerApplicationsForRepo: [\r\n      \"GET /repos/{owner}/{repo}/actions/runners/downloads\"\r\n    ],\r\n    listSelectedReposForOrgSecret: [\r\n      \"GET /orgs/{org}/actions/secrets/{secret_name}/repositories\"\r\n    ],\r\n    listSelectedReposForOrgVariable: [\r\n      \"GET /orgs/{org}/actions/variables/{name}/repositories\"\r\n    ],\r\n    listSelectedRepositoriesEnabledGithubActionsOrganization: [\r\n      \"GET /orgs/{org}/actions/permissions/repositories\"\r\n    ],\r\n    listSelfHostedRunnersForOrg: [\"GET /orgs/{org}/actions/runners\"],\r\n    listSelfHostedRunnersForRepo: [\"GET /repos/{owner}/{repo}/actions/runners\"],\r\n    listWorkflowRunArtifacts: [\r\n      \"GET /repos/{owner}/{repo}/actions/runs/{run_id}/artifacts\"\r\n    ],\r\n    listWorkflowRuns: [\r\n      \"GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs\"\r\n    ],\r\n    listWorkflowRunsForRepo: [\"GET /repos/{owner}/{repo}/actions/runs\"],\r\n    reRunJobForWorkflowRun: [\r\n      \"POST /repos/{owner}/{repo}/actions/jobs/{job_id}/rerun\"\r\n    ],\r\n    reRunWorkflow: [\"POST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun\"],\r\n    reRunWorkflowFailedJobs: [\r\n      \"POST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun-failed-jobs\"\r\n    ],\r\n    removeAllCustomLabelsFromSelfHostedRunnerForOrg: [\r\n      \"DELETE /orgs/{org}/actions/runners/{runner_id}/labels\"\r\n    ],\r\n    removeAllCustomLabelsFromSelfHostedRunnerForRepo: [\r\n      \"DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}/labels\"\r\n    ],\r\n    removeCustomLabelFromSelfHostedRunnerForOrg: [\r\n      \"DELETE /orgs/{org}/actions/runners/{runner_id}/labels/{name}\"\r\n    ],\r\n    removeCustomLabelFromSelfHostedRunnerForRepo: [\r\n      \"DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}/labels/{name}\"\r\n    ],\r\n    removeSelectedRepoFromOrgSecret: [\r\n      \"DELETE /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}\"\r\n    ],\r\n    removeSelectedRepoFromOrgVariable: [\r\n      \"DELETE /orgs/{org}/actions/variables/{name}/repositories/{repository_id}\"\r\n    ],\r\n    reviewCustomGatesForRun: [\r\n      \"POST /repos/{owner}/{repo}/actions/runs/{run_id}/deployment_protection_rule\"\r\n    ],\r\n    reviewPendingDeploymentsForRun: [\r\n      \"POST /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments\"\r\n    ],\r\n    setAllowedActionsOrganization: [\r\n      \"PUT /orgs/{org}/actions/permissions/selected-actions\"\r\n    ],\r\n    setAllowedActionsRepository: [\r\n      \"PUT /repos/{owner}/{repo}/actions/permissions/selected-actions\"\r\n    ],\r\n    setCustomLabelsForSelfHostedRunnerForOrg: [\r\n      \"PUT /orgs/{org}/actions/runners/{runner_id}/labels\"\r\n    ],\r\n    setCustomLabelsForSelfHostedRunnerForRepo: [\r\n      \"PUT /repos/{owner}/{repo}/actions/runners/{runner_id}/labels\"\r\n    ],\r\n    setGithubActionsDefaultWorkflowPermissionsOrganization: [\r\n      \"PUT /orgs/{org}/actions/permissions/workflow\"\r\n    ],\r\n    setGithubActionsDefaultWorkflowPermissionsRepository: [\r\n      \"PUT /repos/{owner}/{repo}/actions/permissions/workflow\"\r\n    ],\r\n    setGithubActionsPermissionsOrganization: [\r\n      \"PUT /orgs/{org}/actions/permissions\"\r\n    ],\r\n    setGithubActionsPermissionsRepository: [\r\n      \"PUT /repos/{owner}/{repo}/actions/permissions\"\r\n    ],\r\n    setSelectedReposForOrgSecret: [\r\n      \"PUT /orgs/{org}/actions/secrets/{secret_name}/repositories\"\r\n    ],\r\n    setSelectedReposForOrgVariable: [\r\n      \"PUT /orgs/{org}/actions/variables/{name}/repositories\"\r\n    ],\r\n    setSelectedRepositoriesEnabledGithubActionsOrganization: [\r\n      \"PUT /orgs/{org}/actions/permissions/repositories\"\r\n    ],\r\n    setWorkflowAccessToRepository: [\r\n      \"PUT /repos/{owner}/{repo}/actions/permissions/access\"\r\n    ],\r\n    updateEnvironmentVariable: [\r\n      \"PATCH /repositories/{repository_id}/environments/{environment_name}/variables/{name}\"\r\n    ],\r\n    updateOrgVariable: [\"PATCH /orgs/{org}/actions/variables/{name}\"],\r\n    updateRepoVariable: [\r\n      \"PATCH /repos/{owner}/{repo}/actions/variables/{name}\"\r\n    ]\r\n  },\r\n  activity: {\r\n    checkRepoIsStarredByAuthenticatedUser: [\"GET /user/starred/{owner}/{repo}\"],\r\n    deleteRepoSubscription: [\"DELETE /repos/{owner}/{repo}/subscription\"],\r\n    deleteThreadSubscription: [\r\n      \"DELETE /notifications/threads/{thread_id}/subscription\"\r\n    ],\r\n    getFeeds: [\"GET /feeds\"],\r\n    getRepoSubscription: [\"GET /repos/{owner}/{repo}/subscription\"],\r\n    getThread: [\"GET /notifications/threads/{thread_id}\"],\r\n    getThreadSubscriptionForAuthenticatedUser: [\r\n      \"GET /notifications/threads/{thread_id}/subscription\"\r\n    ],\r\n    listEventsForAuthenticatedUser: [\"GET /users/{username}/events\"],\r\n    listNotificationsForAuthenticatedUser: [\"GET /notifications\"],\r\n    listOrgEventsForAuthenticatedUser: [\r\n      \"GET /users/{username}/events/orgs/{org}\"\r\n    ],\r\n    listPublicEvents: [\"GET /events\"],\r\n    listPublicEventsForRepoNetwork: [\"GET /networks/{owner}/{repo}/events\"],\r\n    listPublicEventsForUser: [\"GET /users/{username}/events/public\"],\r\n    listPublicOrgEvents: [\"GET /orgs/{org}/events\"],\r\n    listReceivedEventsForUser: [\"GET /users/{username}/received_events\"],\r\n    listReceivedPublicEventsForUser: [\r\n      \"GET /users/{username}/received_events/public\"\r\n    ],\r\n    listRepoEvents: [\"GET /repos/{owner}/{repo}/events\"],\r\n    listRepoNotificationsForAuthenticatedUser: [\r\n      \"GET /repos/{owner}/{repo}/notifications\"\r\n    ],\r\n    listReposStarredByAuthenticatedUser: [\"GET /user/starred\"],\r\n    listReposStarredByUser: [\"GET /users/{username}/starred\"],\r\n    listReposWatchedByUser: [\"GET /users/{username}/subscriptions\"],\r\n    listStargazersForRepo: [\"GET /repos/{owner}/{repo}/stargazers\"],\r\n    listWatchedReposForAuthenticatedUser: [\"GET /user/subscriptions\"],\r\n    listWatchersForRepo: [\"GET /repos/{owner}/{repo}/subscribers\"],\r\n    markNotificationsAsRead: [\"PUT /notifications\"],\r\n    markRepoNotificationsAsRead: [\"PUT /repos/{owner}/{repo}/notifications\"],\r\n    markThreadAsRead: [\"PATCH /notifications/threads/{thread_id}\"],\r\n    setRepoSubscription: [\"PUT /repos/{owner}/{repo}/subscription\"],\r\n    setThreadSubscription: [\r\n      \"PUT /notifications/threads/{thread_id}/subscription\"\r\n    ],\r\n    starRepoForAuthenticatedUser: [\"PUT /user/starred/{owner}/{repo}\"],\r\n    unstarRepoForAuthenticatedUser: [\"DELETE /user/starred/{owner}/{repo}\"]\r\n  },\r\n  apps: {\r\n    addRepoToInstallation: [\r\n      \"PUT /user/installations/{installation_id}/repositories/{repository_id}\",\r\n      {},\r\n      { renamed: [\"apps\", \"addRepoToInstallationForAuthenticatedUser\"] }\r\n    ],\r\n    addRepoToInstallationForAuthenticatedUser: [\r\n      \"PUT /user/installations/{installation_id}/repositories/{repository_id}\"\r\n    ],\r\n    checkToken: [\"POST /applications/{client_id}/token\"],\r\n    createFromManifest: [\"POST /app-manifests/{code}/conversions\"],\r\n    createInstallationAccessToken: [\r\n      \"POST /app/installations/{installation_id}/access_tokens\"\r\n    ],\r\n    deleteAuthorization: [\"DELETE /applications/{client_id}/grant\"],\r\n    deleteInstallation: [\"DELETE /app/installations/{installation_id}\"],\r\n    deleteToken: [\"DELETE /applications/{client_id}/token\"],\r\n    getAuthenticated: [\"GET /app\"],\r\n    getBySlug: [\"GET /apps/{app_slug}\"],\r\n    getInstallation: [\"GET /app/installations/{installation_id}\"],\r\n    getOrgInstallation: [\"GET /orgs/{org}/installation\"],\r\n    getRepoInstallation: [\"GET /repos/{owner}/{repo}/installation\"],\r\n    getSubscriptionPlanForAccount: [\r\n      \"GET /marketplace_listing/accounts/{account_id}\"\r\n    ],\r\n    getSubscriptionPlanForAccountStubbed: [\r\n      \"GET /marketplace_listing/stubbed/accounts/{account_id}\"\r\n    ],\r\n    getUserInstallation: [\"GET /users/{username}/installation\"],\r\n    getWebhookConfigForApp: [\"GET /app/hook/config\"],\r\n    getWebhookDelivery: [\"GET /app/hook/deliveries/{delivery_id}\"],\r\n    listAccountsForPlan: [\"GET /marketplace_listing/plans/{plan_id}/accounts\"],\r\n    listAccountsForPlanStubbed: [\r\n      \"GET /marketplace_listing/stubbed/plans/{plan_id}/accounts\"\r\n    ],\r\n    listInstallationReposForAuthenticatedUser: [\r\n      \"GET /user/installations/{installation_id}/repositories\"\r\n    ],\r\n    listInstallationRequestsForAuthenticatedApp: [\r\n      \"GET /app/installation-requests\"\r\n    ],\r\n    listInstallations: [\"GET /app/installations\"],\r\n    listInstallationsForAuthenticatedUser: [\"GET /user/installations\"],\r\n    listPlans: [\"GET /marketplace_listing/plans\"],\r\n    listPlansStubbed: [\"GET /marketplace_listing/stubbed/plans\"],\r\n    listReposAccessibleToInstallation: [\"GET /installation/repositories\"],\r\n    listSubscriptionsForAuthenticatedUser: [\"GET /user/marketplace_purchases\"],\r\n    listSubscriptionsForAuthenticatedUserStubbed: [\r\n      \"GET /user/marketplace_purchases/stubbed\"\r\n    ],\r\n    listWebhookDeliveries: [\"GET /app/hook/deliveries\"],\r\n    redeliverWebhookDelivery: [\r\n      \"POST /app/hook/deliveries/{delivery_id}/attempts\"\r\n    ],\r\n    removeRepoFromInstallation: [\r\n      \"DELETE /user/installations/{installation_id}/repositories/{repository_id}\",\r\n      {},\r\n      { renamed: [\"apps\", \"removeRepoFromInstallationForAuthenticatedUser\"] }\r\n    ],\r\n    removeRepoFromInstallationForAuthenticatedUser: [\r\n      \"DELETE /user/installations/{installation_id}/repositories/{repository_id}\"\r\n    ],\r\n    resetToken: [\"PATCH /applications/{client_id}/token\"],\r\n    revokeInstallationAccessToken: [\"DELETE /installation/token\"],\r\n    scopeToken: [\"POST /applications/{client_id}/token/scoped\"],\r\n    suspendInstallation: [\"PUT /app/installations/{installation_id}/suspended\"],\r\n    unsuspendInstallation: [\r\n      \"DELETE /app/installations/{installation_id}/suspended\"\r\n    ],\r\n    updateWebhookConfigForApp: [\"PATCH /app/hook/config\"]\r\n  },\r\n  billing: {\r\n    getGithubActionsBillingOrg: [\"GET /orgs/{org}/settings/billing/actions\"],\r\n    getGithubActionsBillingUser: [\r\n      \"GET /users/{username}/settings/billing/actions\"\r\n    ],\r\n    getGithubPackagesBillingOrg: [\"GET /orgs/{org}/settings/billing/packages\"],\r\n    getGithubPackagesBillingUser: [\r\n      \"GET /users/{username}/settings/billing/packages\"\r\n    ],\r\n    getSharedStorageBillingOrg: [\r\n      \"GET /orgs/{org}/settings/billing/shared-storage\"\r\n    ],\r\n    getSharedStorageBillingUser: [\r\n      \"GET /users/{username}/settings/billing/shared-storage\"\r\n    ]\r\n  },\r\n  checks: {\r\n    create: [\"POST /repos/{owner}/{repo}/check-runs\"],\r\n    createSuite: [\"POST /repos/{owner}/{repo}/check-suites\"],\r\n    get: [\"GET /repos/{owner}/{repo}/check-runs/{check_run_id}\"],\r\n    getSuite: [\"GET /repos/{owner}/{repo}/check-suites/{check_suite_id}\"],\r\n    listAnnotations: [\r\n      \"GET /repos/{owner}/{repo}/check-runs/{check_run_id}/annotations\"\r\n    ],\r\n    listForRef: [\"GET /repos/{owner}/{repo}/commits/{ref}/check-runs\"],\r\n    listForSuite: [\r\n      \"GET /repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runs\"\r\n    ],\r\n    listSuitesForRef: [\"GET /repos/{owner}/{repo}/commits/{ref}/check-suites\"],\r\n    rerequestRun: [\r\n      \"POST /repos/{owner}/{repo}/check-runs/{check_run_id}/rerequest\"\r\n    ],\r\n    rerequestSuite: [\r\n      \"POST /repos/{owner}/{repo}/check-suites/{check_suite_id}/rerequest\"\r\n    ],\r\n    setSuitesPreferences: [\r\n      \"PATCH /repos/{owner}/{repo}/check-suites/preferences\"\r\n    ],\r\n    update: [\"PATCH /repos/{owner}/{repo}/check-runs/{check_run_id}\"]\r\n  },\r\n  codeScanning: {\r\n    deleteAnalysis: [\r\n      \"DELETE /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}{?confirm_delete}\"\r\n    ],\r\n    getAlert: [\r\n      \"GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}\",\r\n      {},\r\n      { renamedParameters: { alert_id: \"alert_number\" } }\r\n    ],\r\n    getAnalysis: [\r\n      \"GET /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}\"\r\n    ],\r\n    getCodeqlDatabase: [\r\n      \"GET /repos/{owner}/{repo}/code-scanning/codeql/databases/{language}\"\r\n    ],\r\n    getDefaultSetup: [\"GET /repos/{owner}/{repo}/code-scanning/default-setup\"],\r\n    getSarif: [\"GET /repos/{owner}/{repo}/code-scanning/sarifs/{sarif_id}\"],\r\n    listAlertInstances: [\r\n      \"GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances\"\r\n    ],\r\n    listAlertsForOrg: [\"GET /orgs/{org}/code-scanning/alerts\"],\r\n    listAlertsForRepo: [\"GET /repos/{owner}/{repo}/code-scanning/alerts\"],\r\n    listAlertsInstances: [\r\n      \"GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances\",\r\n      {},\r\n      { renamed: [\"codeScanning\", \"listAlertInstances\"] }\r\n    ],\r\n    listCodeqlDatabases: [\r\n      \"GET /repos/{owner}/{repo}/code-scanning/codeql/databases\"\r\n    ],\r\n    listRecentAnalyses: [\"GET /repos/{owner}/{repo}/code-scanning/analyses\"],\r\n    updateAlert: [\r\n      \"PATCH /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}\"\r\n    ],\r\n    updateDefaultSetup: [\r\n      \"PATCH /repos/{owner}/{repo}/code-scanning/default-setup\"\r\n    ],\r\n    uploadSarif: [\"POST /repos/{owner}/{repo}/code-scanning/sarifs\"]\r\n  },\r\n  codesOfConduct: {\r\n    getAllCodesOfConduct: [\"GET /codes_of_conduct\"],\r\n    getConductCode: [\"GET /codes_of_conduct/{key}\"]\r\n  },\r\n  codespaces: {\r\n    addRepositoryForSecretForAuthenticatedUser: [\r\n      \"PUT /user/codespaces/secrets/{secret_name}/repositories/{repository_id}\"\r\n    ],\r\n    addSelectedRepoToOrgSecret: [\r\n      \"PUT /orgs/{org}/codespaces/secrets/{secret_name}/repositories/{repository_id}\"\r\n    ],\r\n    checkPermissionsForDevcontainer: [\r\n      \"GET /repos/{owner}/{repo}/codespaces/permissions_check\"\r\n    ],\r\n    codespaceMachinesForAuthenticatedUser: [\r\n      \"GET /user/codespaces/{codespace_name}/machines\"\r\n    ],\r\n    createForAuthenticatedUser: [\"POST /user/codespaces\"],\r\n    createOrUpdateOrgSecret: [\r\n      \"PUT /orgs/{org}/codespaces/secrets/{secret_name}\"\r\n    ],\r\n    createOrUpdateRepoSecret: [\r\n      \"PUT /repos/{owner}/{repo}/codespaces/secrets/{secret_name}\"\r\n    ],\r\n    createOrUpdateSecretForAuthenticatedUser: [\r\n      \"PUT /user/codespaces/secrets/{secret_name}\"\r\n    ],\r\n    createWithPrForAuthenticatedUser: [\r\n      \"POST /repos/{owner}/{repo}/pulls/{pull_number}/codespaces\"\r\n    ],\r\n    createWithRepoForAuthenticatedUser: [\r\n      \"POST /repos/{owner}/{repo}/codespaces\"\r\n    ],\r\n    deleteForAuthenticatedUser: [\"DELETE /user/codespaces/{codespace_name}\"],\r\n    deleteFromOrganization: [\r\n      \"DELETE /orgs/{org}/members/{username}/codespaces/{codespace_name}\"\r\n    ],\r\n    deleteOrgSecret: [\"DELETE /orgs/{org}/codespaces/secrets/{secret_name}\"],\r\n    deleteRepoSecret: [\r\n      \"DELETE /repos/{owner}/{repo}/codespaces/secrets/{secret_name}\"\r\n    ],\r\n    deleteSecretForAuthenticatedUser: [\r\n      \"DELETE /user/codespaces/secrets/{secret_name}\"\r\n    ],\r\n    exportForAuthenticatedUser: [\r\n      \"POST /user/codespaces/{codespace_name}/exports\"\r\n    ],\r\n    getCodespacesForUserInOrg: [\r\n      \"GET /orgs/{org}/members/{username}/codespaces\"\r\n    ],\r\n    getExportDetailsForAuthenticatedUser: [\r\n      \"GET /user/codespaces/{codespace_name}/exports/{export_id}\"\r\n    ],\r\n    getForAuthenticatedUser: [\"GET /user/codespaces/{codespace_name}\"],\r\n    getOrgPublicKey: [\"GET /orgs/{org}/codespaces/secrets/public-key\"],\r\n    getOrgSecret: [\"GET /orgs/{org}/codespaces/secrets/{secret_name}\"],\r\n    getPublicKeyForAuthenticatedUser: [\r\n      \"GET /user/codespaces/secrets/public-key\"\r\n    ],\r\n    getRepoPublicKey: [\r\n      \"GET /repos/{owner}/{repo}/codespaces/secrets/public-key\"\r\n    ],\r\n    getRepoSecret: [\r\n      \"GET /repos/{owner}/{repo}/codespaces/secrets/{secret_name}\"\r\n    ],\r\n    getSecretForAuthenticatedUser: [\r\n      \"GET /user/codespaces/secrets/{secret_name}\"\r\n    ],\r\n    listDevcontainersInRepositoryForAuthenticatedUser: [\r\n      \"GET /repos/{owner}/{repo}/codespaces/devcontainers\"\r\n    ],\r\n    listForAuthenticatedUser: [\"GET /user/codespaces\"],\r\n    listInOrganization: [\r\n      \"GET /orgs/{org}/codespaces\",\r\n      {},\r\n      { renamedParameters: { org_id: \"org\" } }\r\n    ],\r\n    listInRepositoryForAuthenticatedUser: [\r\n      \"GET /repos/{owner}/{repo}/codespaces\"\r\n    ],\r\n    listOrgSecrets: [\"GET /orgs/{org}/codespaces/secrets\"],\r\n    listRepoSecrets: [\"GET /repos/{owner}/{repo}/codespaces/secrets\"],\r\n    listRepositoriesForSecretForAuthenticatedUser: [\r\n      \"GET /user/codespaces/secrets/{secret_name}/repositories\"\r\n    ],\r\n    listSecretsForAuthenticatedUser: [\"GET /user/codespaces/secrets\"],\r\n    listSelectedReposForOrgSecret: [\r\n      \"GET /orgs/{org}/codespaces/secrets/{secret_name}/repositories\"\r\n    ],\r\n    preFlightWithRepoForAuthenticatedUser: [\r\n      \"GET /repos/{owner}/{repo}/codespaces/new\"\r\n    ],\r\n    publishForAuthenticatedUser: [\r\n      \"POST /user/codespaces/{codespace_name}/publish\"\r\n    ],\r\n    removeRepositoryForSecretForAuthenticatedUser: [\r\n      \"DELETE /user/codespaces/secrets/{secret_name}/repositories/{repository_id}\"\r\n    ],\r\n    removeSelectedRepoFromOrgSecret: [\r\n      \"DELETE /orgs/{org}/codespaces/secrets/{secret_name}/repositories/{repository_id}\"\r\n    ],\r\n    repoMachinesForAuthenticatedUser: [\r\n      \"GET /repos/{owner}/{repo}/codespaces/machines\"\r\n    ],\r\n    setRepositoriesForSecretForAuthenticatedUser: [\r\n      \"PUT /user/codespaces/secrets/{secret_name}/repositories\"\r\n    ],\r\n    setSelectedReposForOrgSecret: [\r\n      \"PUT /orgs/{org}/codespaces/secrets/{secret_name}/repositories\"\r\n    ],\r\n    startForAuthenticatedUser: [\"POST /user/codespaces/{codespace_name}/start\"],\r\n    stopForAuthenticatedUser: [\"POST /user/codespaces/{codespace_name}/stop\"],\r\n    stopInOrganization: [\r\n      \"POST /orgs/{org}/members/{username}/codespaces/{codespace_name}/stop\"\r\n    ],\r\n    updateForAuthenticatedUser: [\"PATCH /user/codespaces/{codespace_name}\"]\r\n  },\r\n  copilot: {\r\n    addCopilotForBusinessSeatsForTeams: [\r\n      \"POST /orgs/{org}/copilot/billing/selected_teams\"\r\n    ],\r\n    addCopilotForBusinessSeatsForUsers: [\r\n      \"POST /orgs/{org}/copilot/billing/selected_users\"\r\n    ],\r\n    cancelCopilotSeatAssignmentForTeams: [\r\n      \"DELETE /orgs/{org}/copilot/billing/selected_teams\"\r\n    ],\r\n    cancelCopilotSeatAssignmentForUsers: [\r\n      \"DELETE /orgs/{org}/copilot/billing/selected_users\"\r\n    ],\r\n    getCopilotOrganizationDetails: [\"GET /orgs/{org}/copilot/billing\"],\r\n    getCopilotSeatDetailsForUser: [\r\n      \"GET /orgs/{org}/members/{username}/copilot\"\r\n    ],\r\n    listCopilotSeats: [\"GET /orgs/{org}/copilot/billing/seats\"]\r\n  },\r\n  dependabot: {\r\n    addSelectedRepoToOrgSecret: [\r\n      \"PUT /orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}\"\r\n    ],\r\n    createOrUpdateOrgSecret: [\r\n      \"PUT /orgs/{org}/dependabot/secrets/{secret_name}\"\r\n    ],\r\n    createOrUpdateRepoSecret: [\r\n      \"PUT /repos/{owner}/{repo}/dependabot/secrets/{secret_name}\"\r\n    ],\r\n    deleteOrgSecret: [\"DELETE /orgs/{org}/dependabot/secrets/{secret_name}\"],\r\n    deleteRepoSecret: [\r\n      \"DELETE /repos/{owner}/{repo}/dependabot/secrets/{secret_name}\"\r\n    ],\r\n    getAlert: [\"GET /repos/{owner}/{repo}/dependabot/alerts/{alert_number}\"],\r\n    getOrgPublicKey: [\"GET /orgs/{org}/dependabot/secrets/public-key\"],\r\n    getOrgSecret: [\"GET /orgs/{org}/dependabot/secrets/{secret_name}\"],\r\n    getRepoPublicKey: [\r\n      \"GET /repos/{owner}/{repo}/dependabot/secrets/public-key\"\r\n    ],\r\n    getRepoSecret: [\r\n      \"GET /repos/{owner}/{repo}/dependabot/secrets/{secret_name}\"\r\n    ],\r\n    listAlertsForEnterprise: [\r\n      \"GET /enterprises/{enterprise}/dependabot/alerts\"\r\n    ],\r\n    listAlertsForOrg: [\"GET /orgs/{org}/dependabot/alerts\"],\r\n    listAlertsForRepo: [\"GET /repos/{owner}/{repo}/dependabot/alerts\"],\r\n    listOrgSecrets: [\"GET /orgs/{org}/dependabot/secrets\"],\r\n    listRepoSecrets: [\"GET /repos/{owner}/{repo}/dependabot/secrets\"],\r\n    listSelectedReposForOrgSecret: [\r\n      \"GET /orgs/{org}/dependabot/secrets/{secret_name}/repositories\"\r\n    ],\r\n    removeSelectedRepoFromOrgSecret: [\r\n      \"DELETE /orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}\"\r\n    ],\r\n    setSelectedReposForOrgSecret: [\r\n      \"PUT /orgs/{org}/dependabot/secrets/{secret_name}/repositories\"\r\n    ],\r\n    updateAlert: [\r\n      \"PATCH /repos/{owner}/{repo}/dependabot/alerts/{alert_number}\"\r\n    ]\r\n  },\r\n  dependencyGraph: {\r\n    createRepositorySnapshot: [\r\n      \"POST /repos/{owner}/{repo}/dependency-graph/snapshots\"\r\n    ],\r\n    diffRange: [\r\n      \"GET /repos/{owner}/{repo}/dependency-graph/compare/{basehead}\"\r\n    ],\r\n    exportSbom: [\"GET /repos/{owner}/{repo}/dependency-graph/sbom\"]\r\n  },\r\n  emojis: { get: [\"GET /emojis\"] },\r\n  gists: {\r\n    checkIsStarred: [\"GET /gists/{gist_id}/star\"],\r\n    create: [\"POST /gists\"],\r\n    createComment: [\"POST /gists/{gist_id}/comments\"],\r\n    delete: [\"DELETE /gists/{gist_id}\"],\r\n    deleteComment: [\"DELETE /gists/{gist_id}/comments/{comment_id}\"],\r\n    fork: [\"POST /gists/{gist_id}/forks\"],\r\n    get: [\"GET /gists/{gist_id}\"],\r\n    getComment: [\"GET /gists/{gist_id}/comments/{comment_id}\"],\r\n    getRevision: [\"GET /gists/{gist_id}/{sha}\"],\r\n    list: [\"GET /gists\"],\r\n    listComments: [\"GET /gists/{gist_id}/comments\"],\r\n    listCommits: [\"GET /gists/{gist_id}/commits\"],\r\n    listForUser: [\"GET /users/{username}/gists\"],\r\n    listForks: [\"GET /gists/{gist_id}/forks\"],\r\n    listPublic: [\"GET /gists/public\"],\r\n    listStarred: [\"GET /gists/starred\"],\r\n    star: [\"PUT /gists/{gist_id}/star\"],\r\n    unstar: [\"DELETE /gists/{gist_id}/star\"],\r\n    update: [\"PATCH /gists/{gist_id}\"],\r\n    updateComment: [\"PATCH /gists/{gist_id}/comments/{comment_id}\"]\r\n  },\r\n  git: {\r\n    createBlob: [\"POST /repos/{owner}/{repo}/git/blobs\"],\r\n    createCommit: [\"POST /repos/{owner}/{repo}/git/commits\"],\r\n    createRef: [\"POST /repos/{owner}/{repo}/git/refs\"],\r\n    createTag: [\"POST /repos/{owner}/{repo}/git/tags\"],\r\n    createTree: [\"POST /repos/{owner}/{repo}/git/trees\"],\r\n    deleteRef: [\"DELETE /repos/{owner}/{repo}/git/refs/{ref}\"],\r\n    getBlob: [\"GET /repos/{owner}/{repo}/git/blobs/{file_sha}\"],\r\n    getCommit: [\"GET /repos/{owner}/{repo}/git/commits/{commit_sha}\"],\r\n    getRef: [\"GET /repos/{owner}/{repo}/git/ref/{ref}\"],\r\n    getTag: [\"GET /repos/{owner}/{repo}/git/tags/{tag_sha}\"],\r\n    getTree: [\"GET /repos/{owner}/{repo}/git/trees/{tree_sha}\"],\r\n    listMatchingRefs: [\"GET /repos/{owner}/{repo}/git/matching-refs/{ref}\"],\r\n    updateRef: [\"PATCH /repos/{owner}/{repo}/git/refs/{ref}\"]\r\n  },\r\n  gitignore: {\r\n    getAllTemplates: [\"GET /gitignore/templates\"],\r\n    getTemplate: [\"GET /gitignore/templates/{name}\"]\r\n  },\r\n  interactions: {\r\n    getRestrictionsForAuthenticatedUser: [\"GET /user/interaction-limits\"],\r\n    getRestrictionsForOrg: [\"GET /orgs/{org}/interaction-limits\"],\r\n    getRestrictionsForRepo: [\"GET /repos/{owner}/{repo}/interaction-limits\"],\r\n    getRestrictionsForYourPublicRepos: [\r\n      \"GET /user/interaction-limits\",\r\n      {},\r\n      { renamed: [\"interactions\", \"getRestrictionsForAuthenticatedUser\"] }\r\n    ],\r\n    removeRestrictionsForAuthenticatedUser: [\"DELETE /user/interaction-limits\"],\r\n    removeRestrictionsForOrg: [\"DELETE /orgs/{org}/interaction-limits\"],\r\n    removeRestrictionsForRepo: [\r\n      \"DELETE /repos/{owner}/{repo}/interaction-limits\"\r\n    ],\r\n    removeRestrictionsForYourPublicRepos: [\r\n      \"DELETE /user/interaction-limits\",\r\n      {},\r\n      { renamed: [\"interactions\", \"removeRestrictionsForAuthenticatedUser\"] }\r\n    ],\r\n    setRestrictionsForAuthenticatedUser: [\"PUT /user/interaction-limits\"],\r\n    setRestrictionsForOrg: [\"PUT /orgs/{org}/interaction-limits\"],\r\n    setRestrictionsForRepo: [\"PUT /repos/{owner}/{repo}/interaction-limits\"],\r\n    setRestrictionsForYourPublicRepos: [\r\n      \"PUT /user/interaction-limits\",\r\n      {},\r\n      { renamed: [\"interactions\", \"setRestrictionsForAuthenticatedUser\"] }\r\n    ]\r\n  },\r\n  issues: {\r\n    addAssignees: [\r\n      \"POST /repos/{owner}/{repo}/issues/{issue_number}/assignees\"\r\n    ],\r\n    addLabels: [\"POST /repos/{owner}/{repo}/issues/{issue_number}/labels\"],\r\n    checkUserCanBeAssigned: [\"GET /repos/{owner}/{repo}/assignees/{assignee}\"],\r\n    checkUserCanBeAssignedToIssue: [\r\n      \"GET /repos/{owner}/{repo}/issues/{issue_number}/assignees/{assignee}\"\r\n    ],\r\n    create: [\"POST /repos/{owner}/{repo}/issues\"],\r\n    createComment: [\r\n      \"POST /repos/{owner}/{repo}/issues/{issue_number}/comments\"\r\n    ],\r\n    createLabel: [\"POST /repos/{owner}/{repo}/labels\"],\r\n    createMilestone: [\"POST /repos/{owner}/{repo}/milestones\"],\r\n    deleteComment: [\r\n      \"DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}\"\r\n    ],\r\n    deleteLabel: [\"DELETE /repos/{owner}/{repo}/labels/{name}\"],\r\n    deleteMilestone: [\r\n      \"DELETE /repos/{owner}/{repo}/milestones/{milestone_number}\"\r\n    ],\r\n    get: [\"GET /repos/{owner}/{repo}/issues/{issue_number}\"],\r\n    getComment: [\"GET /repos/{owner}/{repo}/issues/comments/{comment_id}\"],\r\n    getEvent: [\"GET /repos/{owner}/{repo}/issues/events/{event_id}\"],\r\n    getLabel: [\"GET /repos/{owner}/{repo}/labels/{name}\"],\r\n    getMilestone: [\"GET /repos/{owner}/{repo}/milestones/{milestone_number}\"],\r\n    list: [\"GET /issues\"],\r\n    listAssignees: [\"GET /repos/{owner}/{repo}/assignees\"],\r\n    listComments: [\"GET /repos/{owner}/{repo}/issues/{issue_number}/comments\"],\r\n    listCommentsForRepo: [\"GET /repos/{owner}/{repo}/issues/comments\"],\r\n    listEvents: [\"GET /repos/{owner}/{repo}/issues/{issue_number}/events\"],\r\n    listEventsForRepo: [\"GET /repos/{owner}/{repo}/issues/events\"],\r\n    listEventsForTimeline: [\r\n      \"GET /repos/{owner}/{repo}/issues/{issue_number}/timeline\"\r\n    ],\r\n    listForAuthenticatedUser: [\"GET /user/issues\"],\r\n    listForOrg: [\"GET /orgs/{org}/issues\"],\r\n    listForRepo: [\"GET /repos/{owner}/{repo}/issues\"],\r\n    listLabelsForMilestone: [\r\n      \"GET /repos/{owner}/{repo}/milestones/{milestone_number}/labels\"\r\n    ],\r\n    listLabelsForRepo: [\"GET /repos/{owner}/{repo}/labels\"],\r\n    listLabelsOnIssue: [\r\n      \"GET /repos/{owner}/{repo}/issues/{issue_number}/labels\"\r\n    ],\r\n    listMilestones: [\"GET /repos/{owner}/{repo}/milestones\"],\r\n    lock: [\"PUT /repos/{owner}/{repo}/issues/{issue_number}/lock\"],\r\n    removeAllLabels: [\r\n      \"DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels\"\r\n    ],\r\n    removeAssignees: [\r\n      \"DELETE /repos/{owner}/{repo}/issues/{issue_number}/assignees\"\r\n    ],\r\n    removeLabel: [\r\n      \"DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels/{name}\"\r\n    ],\r\n    setLabels: [\"PUT /repos/{owner}/{repo}/issues/{issue_number}/labels\"],\r\n    unlock: [\"DELETE /repos/{owner}/{repo}/issues/{issue_number}/lock\"],\r\n    update: [\"PATCH /repos/{owner}/{repo}/issues/{issue_number}\"],\r\n    updateComment: [\"PATCH /repos/{owner}/{repo}/issues/comments/{comment_id}\"],\r\n    updateLabel: [\"PATCH /repos/{owner}/{repo}/labels/{name}\"],\r\n    updateMilestone: [\r\n      \"PATCH /repos/{owner}/{repo}/milestones/{milestone_number}\"\r\n    ]\r\n  },\r\n  licenses: {\r\n    get: [\"GET /licenses/{license}\"],\r\n    getAllCommonlyUsed: [\"GET /licenses\"],\r\n    getForRepo: [\"GET /repos/{owner}/{repo}/license\"]\r\n  },\r\n  markdown: {\r\n    render: [\"POST /markdown\"],\r\n    renderRaw: [\r\n      \"POST /markdown/raw\",\r\n      { headers: { \"content-type\": \"text/plain; charset=utf-8\" } }\r\n    ]\r\n  },\r\n  meta: {\r\n    get: [\"GET /meta\"],\r\n    getAllVersions: [\"GET /versions\"],\r\n    getOctocat: [\"GET /octocat\"],\r\n    getZen: [\"GET /zen\"],\r\n    root: [\"GET /\"]\r\n  },\r\n  migrations: {\r\n    cancelImport: [\r\n      \"DELETE /repos/{owner}/{repo}/import\",\r\n      {},\r\n      {\r\n        deprecated: \"octokit.rest.migrations.cancelImport() is deprecated, see https://docs.github.com/rest/migrations/source-imports#cancel-an-import\"\r\n      }\r\n    ],\r\n    deleteArchiveForAuthenticatedUser: [\r\n      \"DELETE /user/migrations/{migration_id}/archive\"\r\n    ],\r\n    deleteArchiveForOrg: [\r\n      \"DELETE /orgs/{org}/migrations/{migration_id}/archive\"\r\n    ],\r\n    downloadArchiveForOrg: [\r\n      \"GET /orgs/{org}/migrations/{migration_id}/archive\"\r\n    ],\r\n    getArchiveForAuthenticatedUser: [\r\n      \"GET /user/migrations/{migration_id}/archive\"\r\n    ],\r\n    getCommitAuthors: [\r\n      \"GET /repos/{owner}/{repo}/import/authors\",\r\n      {},\r\n      {\r\n        deprecated: \"octokit.rest.migrations.getCommitAuthors() is deprecated, see https://docs.github.com/rest/migrations/source-imports#get-commit-authors\"\r\n      }\r\n    ],\r\n    getImportStatus: [\r\n      \"GET /repos/{owner}/{repo}/import\",\r\n      {},\r\n      {\r\n        deprecated: \"octokit.rest.migrations.getImportStatus() is deprecated, see https://docs.github.com/rest/migrations/source-imports#get-an-import-status\"\r\n      }\r\n    ],\r\n    getLargeFiles: [\r\n      \"GET /repos/{owner}/{repo}/import/large_files\",\r\n      {},\r\n      {\r\n        deprecated: \"octokit.rest.migrations.getLargeFiles() is deprecated, see https://docs.github.com/rest/migrations/source-imports#get-large-files\"\r\n      }\r\n    ],\r\n    getStatusForAuthenticatedUser: [\"GET /user/migrations/{migration_id}\"],\r\n    getStatusForOrg: [\"GET /orgs/{org}/migrations/{migration_id}\"],\r\n    listForAuthenticatedUser: [\"GET /user/migrations\"],\r\n    listForOrg: [\"GET /orgs/{org}/migrations\"],\r\n    listReposForAuthenticatedUser: [\r\n      \"GET /user/migrations/{migration_id}/repositories\"\r\n    ],\r\n    listReposForOrg: [\"GET /orgs/{org}/migrations/{migration_id}/repositories\"],\r\n    listReposForUser: [\r\n      \"GET /user/migrations/{migration_id}/repositories\",\r\n      {},\r\n      { renamed: [\"migrations\", \"listReposForAuthenticatedUser\"] }\r\n    ],\r\n    mapCommitAuthor: [\r\n      \"PATCH /repos/{owner}/{repo}/import/authors/{author_id}\",\r\n      {},\r\n      {\r\n        deprecated: \"octokit.rest.migrations.mapCommitAuthor() is deprecated, see https://docs.github.com/rest/migrations/source-imports#map-a-commit-author\"\r\n      }\r\n    ],\r\n    setLfsPreference: [\r\n      \"PATCH /repos/{owner}/{repo}/import/lfs\",\r\n      {},\r\n      {\r\n        deprecated: \"octokit.rest.migrations.setLfsPreference() is deprecated, see https://docs.github.com/rest/migrations/source-imports#update-git-lfs-preference\"\r\n      }\r\n    ],\r\n    startForAuthenticatedUser: [\"POST /user/migrations\"],\r\n    startForOrg: [\"POST /orgs/{org}/migrations\"],\r\n    startImport: [\r\n      \"PUT /repos/{owner}/{repo}/import\",\r\n      {},\r\n      {\r\n        deprecated: \"octokit.rest.migrations.startImport() is deprecated, see https://docs.github.com/rest/migrations/source-imports#start-an-import\"\r\n      }\r\n    ],\r\n    unlockRepoForAuthenticatedUser: [\r\n      \"DELETE /user/migrations/{migration_id}/repos/{repo_name}/lock\"\r\n    ],\r\n    unlockRepoForOrg: [\r\n      \"DELETE /orgs/{org}/migrations/{migration_id}/repos/{repo_name}/lock\"\r\n    ],\r\n    updateImport: [\r\n      \"PATCH /repos/{owner}/{repo}/import\",\r\n      {},\r\n      {\r\n        deprecated: \"octokit.rest.migrations.updateImport() is deprecated, see https://docs.github.com/rest/migrations/source-imports#update-an-import\"\r\n      }\r\n    ]\r\n  },\r\n  orgs: {\r\n    addSecurityManagerTeam: [\r\n      \"PUT /orgs/{org}/security-managers/teams/{team_slug}\"\r\n    ],\r\n    blockUser: [\"PUT /orgs/{org}/blocks/{username}\"],\r\n    cancelInvitation: [\"DELETE /orgs/{org}/invitations/{invitation_id}\"],\r\n    checkBlockedUser: [\"GET /orgs/{org}/blocks/{username}\"],\r\n    checkMembershipForUser: [\"GET /orgs/{org}/members/{username}\"],\r\n    checkPublicMembershipForUser: [\"GET /orgs/{org}/public_members/{username}\"],\r\n    convertMemberToOutsideCollaborator: [\r\n      \"PUT /orgs/{org}/outside_collaborators/{username}\"\r\n    ],\r\n    createInvitation: [\"POST /orgs/{org}/invitations\"],\r\n    createOrUpdateCustomProperties: [\"PATCH /orgs/{org}/properties/schema\"],\r\n    createOrUpdateCustomPropertiesValuesForRepos: [\r\n      \"PATCH /orgs/{org}/properties/values\"\r\n    ],\r\n    createOrUpdateCustomProperty: [\r\n      \"PUT /orgs/{org}/properties/schema/{custom_property_name}\"\r\n    ],\r\n    createWebhook: [\"POST /orgs/{org}/hooks\"],\r\n    delete: [\"DELETE /orgs/{org}\"],\r\n    deleteWebhook: [\"DELETE /orgs/{org}/hooks/{hook_id}\"],\r\n    enableOrDisableSecurityProductOnAllOrgRepos: [\r\n      \"POST /orgs/{org}/{security_product}/{enablement}\"\r\n    ],\r\n    get: [\"GET /orgs/{org}\"],\r\n    getAllCustomProperties: [\"GET /orgs/{org}/properties/schema\"],\r\n    getCustomProperty: [\r\n      \"GET /orgs/{org}/properties/schema/{custom_property_name}\"\r\n    ],\r\n    getMembershipForAuthenticatedUser: [\"GET /user/memberships/orgs/{org}\"],\r\n    getMembershipForUser: [\"GET /orgs/{org}/memberships/{username}\"],\r\n    getWebhook: [\"GET /orgs/{org}/hooks/{hook_id}\"],\r\n    getWebhookConfigForOrg: [\"GET /orgs/{org}/hooks/{hook_id}/config\"],\r\n    getWebhookDelivery: [\r\n      \"GET /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}\"\r\n    ],\r\n    list: [\"GET /organizations\"],\r\n    listAppInstallations: [\"GET /orgs/{org}/installations\"],\r\n    listBlockedUsers: [\"GET /orgs/{org}/blocks\"],\r\n    listCustomPropertiesValuesForRepos: [\"GET /orgs/{org}/properties/values\"],\r\n    listFailedInvitations: [\"GET /orgs/{org}/failed_invitations\"],\r\n    listForAuthenticatedUser: [\"GET /user/orgs\"],\r\n    listForUser: [\"GET /users/{username}/orgs\"],\r\n    listInvitationTeams: [\"GET /orgs/{org}/invitations/{invitation_id}/teams\"],\r\n    listMembers: [\"GET /orgs/{org}/members\"],\r\n    listMembershipsForAuthenticatedUser: [\"GET /user/memberships/orgs\"],\r\n    listOutsideCollaborators: [\"GET /orgs/{org}/outside_collaborators\"],\r\n    listPatGrantRepositories: [\r\n      \"GET /orgs/{org}/personal-access-tokens/{pat_id}/repositories\"\r\n    ],\r\n    listPatGrantRequestRepositories: [\r\n      \"GET /orgs/{org}/personal-access-token-requests/{pat_request_id}/repositories\"\r\n    ],\r\n    listPatGrantRequests: [\"GET /orgs/{org}/personal-access-token-requests\"],\r\n    listPatGrants: [\"GET /orgs/{org}/personal-access-tokens\"],\r\n    listPendingInvitations: [\"GET /orgs/{org}/invitations\"],\r\n    listPublicMembers: [\"GET /orgs/{org}/public_members\"],\r\n    listSecurityManagerTeams: [\"GET /orgs/{org}/security-managers\"],\r\n    listWebhookDeliveries: [\"GET /orgs/{org}/hooks/{hook_id}/deliveries\"],\r\n    listWebhooks: [\"GET /orgs/{org}/hooks\"],\r\n    pingWebhook: [\"POST /orgs/{org}/hooks/{hook_id}/pings\"],\r\n    redeliverWebhookDelivery: [\r\n      \"POST /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}/attempts\"\r\n    ],\r\n    removeCustomProperty: [\r\n      \"DELETE /orgs/{org}/properties/schema/{custom_property_name}\"\r\n    ],\r\n    removeMember: [\"DELETE /orgs/{org}/members/{username}\"],\r\n    removeMembershipForUser: [\"DELETE /orgs/{org}/memberships/{username}\"],\r\n    removeOutsideCollaborator: [\r\n      \"DELETE /orgs/{org}/outside_collaborators/{username}\"\r\n    ],\r\n    removePublicMembershipForAuthenticatedUser: [\r\n      \"DELETE /orgs/{org}/public_members/{username}\"\r\n    ],\r\n    removeSecurityManagerTeam: [\r\n      \"DELETE /orgs/{org}/security-managers/teams/{team_slug}\"\r\n    ],\r\n    reviewPatGrantRequest: [\r\n      \"POST /orgs/{org}/personal-access-token-requests/{pat_request_id}\"\r\n    ],\r\n    reviewPatGrantRequestsInBulk: [\r\n      \"POST /orgs/{org}/personal-access-token-requests\"\r\n    ],\r\n    setMembershipForUser: [\"PUT /orgs/{org}/memberships/{username}\"],\r\n    setPublicMembershipForAuthenticatedUser: [\r\n      \"PUT /orgs/{org}/public_members/{username}\"\r\n    ],\r\n    unblockUser: [\"DELETE /orgs/{org}/blocks/{username}\"],\r\n    update: [\"PATCH /orgs/{org}\"],\r\n    updateMembershipForAuthenticatedUser: [\r\n      \"PATCH /user/memberships/orgs/{org}\"\r\n    ],\r\n    updatePatAccess: [\"POST /orgs/{org}/personal-access-tokens/{pat_id}\"],\r\n    updatePatAccesses: [\"POST /orgs/{org}/personal-access-tokens\"],\r\n    updateWebhook: [\"PATCH /orgs/{org}/hooks/{hook_id}\"],\r\n    updateWebhookConfigForOrg: [\"PATCH /orgs/{org}/hooks/{hook_id}/config\"]\r\n  },\r\n  packages: {\r\n    deletePackageForAuthenticatedUser: [\r\n      \"DELETE /user/packages/{package_type}/{package_name}\"\r\n    ],\r\n    deletePackageForOrg: [\r\n      \"DELETE /orgs/{org}/packages/{package_type}/{package_name}\"\r\n    ],\r\n    deletePackageForUser: [\r\n      \"DELETE /users/{username}/packages/{package_type}/{package_name}\"\r\n    ],\r\n    deletePackageVersionForAuthenticatedUser: [\r\n      \"DELETE /user/packages/{package_type}/{package_name}/versions/{package_version_id}\"\r\n    ],\r\n    deletePackageVersionForOrg: [\r\n      \"DELETE /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}\"\r\n    ],\r\n    deletePackageVersionForUser: [\r\n      \"DELETE /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}\"\r\n    ],\r\n    getAllPackageVersionsForAPackageOwnedByAnOrg: [\r\n      \"GET /orgs/{org}/packages/{package_type}/{package_name}/versions\",\r\n      {},\r\n      { renamed: [\"packages\", \"getAllPackageVersionsForPackageOwnedByOrg\"] }\r\n    ],\r\n    getAllPackageVersionsForAPackageOwnedByTheAuthenticatedUser: [\r\n      \"GET /user/packages/{package_type}/{package_name}/versions\",\r\n      {},\r\n      {\r\n        renamed: [\r\n          \"packages\",\r\n          \"getAllPackageVersionsForPackageOwnedByAuthenticatedUser\"\r\n        ]\r\n      }\r\n    ],\r\n    getAllPackageVersionsForPackageOwnedByAuthenticatedUser: [\r\n      \"GET /user/packages/{package_type}/{package_name}/versions\"\r\n    ],\r\n    getAllPackageVersionsForPackageOwnedByOrg: [\r\n      \"GET /orgs/{org}/packages/{package_type}/{package_name}/versions\"\r\n    ],\r\n    getAllPackageVersionsForPackageOwnedByUser: [\r\n      \"GET /users/{username}/packages/{package_type}/{package_name}/versions\"\r\n    ],\r\n    getPackageForAuthenticatedUser: [\r\n      \"GET /user/packages/{package_type}/{package_name}\"\r\n    ],\r\n    getPackageForOrganization: [\r\n      \"GET /orgs/{org}/packages/{package_type}/{package_name}\"\r\n    ],\r\n    getPackageForUser: [\r\n      \"GET /users/{username}/packages/{package_type}/{package_name}\"\r\n    ],\r\n    getPackageVersionForAuthenticatedUser: [\r\n      \"GET /user/packages/{package_type}/{package_name}/versions/{package_version_id}\"\r\n    ],\r\n    getPackageVersionForOrganization: [\r\n      \"GET /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}\"\r\n    ],\r\n    getPackageVersionForUser: [\r\n      \"GET /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}\"\r\n    ],\r\n    listDockerMigrationConflictingPackagesForAuthenticatedUser: [\r\n      \"GET /user/docker/conflicts\"\r\n    ],\r\n    listDockerMigrationConflictingPackagesForOrganization: [\r\n      \"GET /orgs/{org}/docker/conflicts\"\r\n    ],\r\n    listDockerMigrationConflictingPackagesForUser: [\r\n      \"GET /users/{username}/docker/conflicts\"\r\n    ],\r\n    listPackagesForAuthenticatedUser: [\"GET /user/packages\"],\r\n    listPackagesForOrganization: [\"GET /orgs/{org}/packages\"],\r\n    listPackagesForUser: [\"GET /users/{username}/packages\"],\r\n    restorePackageForAuthenticatedUser: [\r\n      \"POST /user/packages/{package_type}/{package_name}/restore{?token}\"\r\n    ],\r\n    restorePackageForOrg: [\r\n      \"POST /orgs/{org}/packages/{package_type}/{package_name}/restore{?token}\"\r\n    ],\r\n    restorePackageForUser: [\r\n      \"POST /users/{username}/packages/{package_type}/{package_name}/restore{?token}\"\r\n    ],\r\n    restorePackageVersionForAuthenticatedUser: [\r\n      \"POST /user/packages/{package_type}/{package_name}/versions/{package_version_id}/restore\"\r\n    ],\r\n    restorePackageVersionForOrg: [\r\n      \"POST /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore\"\r\n    ],\r\n    restorePackageVersionForUser: [\r\n      \"POST /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore\"\r\n    ]\r\n  },\r\n  projects: {\r\n    addCollaborator: [\"PUT /projects/{project_id}/collaborators/{username}\"],\r\n    createCard: [\"POST /projects/columns/{column_id}/cards\"],\r\n    createColumn: [\"POST /projects/{project_id}/columns\"],\r\n    createForAuthenticatedUser: [\"POST /user/projects\"],\r\n    createForOrg: [\"POST /orgs/{org}/projects\"],\r\n    createForRepo: [\"POST /repos/{owner}/{repo}/projects\"],\r\n    delete: [\"DELETE /projects/{project_id}\"],\r\n    deleteCard: [\"DELETE /projects/columns/cards/{card_id}\"],\r\n    deleteColumn: [\"DELETE /projects/columns/{column_id}\"],\r\n    get: [\"GET /projects/{project_id}\"],\r\n    getCard: [\"GET /projects/columns/cards/{card_id}\"],\r\n    getColumn: [\"GET /projects/columns/{column_id}\"],\r\n    getPermissionForUser: [\r\n      \"GET /projects/{project_id}/collaborators/{username}/permission\"\r\n    ],\r\n    listCards: [\"GET /projects/columns/{column_id}/cards\"],\r\n    listCollaborators: [\"GET /projects/{project_id}/collaborators\"],\r\n    listColumns: [\"GET /projects/{project_id}/columns\"],\r\n    listForOrg: [\"GET /orgs/{org}/projects\"],\r\n    listForRepo: [\"GET /repos/{owner}/{repo}/projects\"],\r\n    listForUser: [\"GET /users/{username}/projects\"],\r\n    moveCard: [\"POST /projects/columns/cards/{card_id}/moves\"],\r\n    moveColumn: [\"POST /projects/columns/{column_id}/moves\"],\r\n    removeCollaborator: [\r\n      \"DELETE /projects/{project_id}/collaborators/{username}\"\r\n    ],\r\n    update: [\"PATCH /projects/{project_id}\"],\r\n    updateCard: [\"PATCH /projects/columns/cards/{card_id}\"],\r\n    updateColumn: [\"PATCH /projects/columns/{column_id}\"]\r\n  },\r\n  pulls: {\r\n    checkIfMerged: [\"GET /repos/{owner}/{repo}/pulls/{pull_number}/merge\"],\r\n    create: [\"POST /repos/{owner}/{repo}/pulls\"],\r\n    createReplyForReviewComment: [\r\n      \"POST /repos/{owner}/{repo}/pulls/{pull_number}/comments/{comment_id}/replies\"\r\n    ],\r\n    createReview: [\"POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews\"],\r\n    createReviewComment: [\r\n      \"POST /repos/{owner}/{repo}/pulls/{pull_number}/comments\"\r\n    ],\r\n    deletePendingReview: [\r\n      \"DELETE /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}\"\r\n    ],\r\n    deleteReviewComment: [\r\n      \"DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}\"\r\n    ],\r\n    dismissReview: [\r\n      \"PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/dismissals\"\r\n    ],\r\n    get: [\"GET /repos/{owner}/{repo}/pulls/{pull_number}\"],\r\n    getReview: [\r\n      \"GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}\"\r\n    ],\r\n    getReviewComment: [\"GET /repos/{owner}/{repo}/pulls/comments/{comment_id}\"],\r\n    list: [\"GET /repos/{owner}/{repo}/pulls\"],\r\n    listCommentsForReview: [\r\n      \"GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/comments\"\r\n    ],\r\n    listCommits: [\"GET /repos/{owner}/{repo}/pulls/{pull_number}/commits\"],\r\n    listFiles: [\"GET /repos/{owner}/{repo}/pulls/{pull_number}/files\"],\r\n    listRequestedReviewers: [\r\n      \"GET /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers\"\r\n    ],\r\n    listReviewComments: [\r\n      \"GET /repos/{owner}/{repo}/pulls/{pull_number}/comments\"\r\n    ],\r\n    listReviewCommentsForRepo: [\"GET /repos/{owner}/{repo}/pulls/comments\"],\r\n    listReviews: [\"GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews\"],\r\n    merge: [\"PUT /repos/{owner}/{repo}/pulls/{pull_number}/merge\"],\r\n    removeRequestedReviewers: [\r\n      \"DELETE /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers\"\r\n    ],\r\n    requestReviewers: [\r\n      \"POST /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers\"\r\n    ],\r\n    submitReview: [\r\n      \"POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/events\"\r\n    ],\r\n    update: [\"PATCH /repos/{owner}/{repo}/pulls/{pull_number}\"],\r\n    updateBranch: [\r\n      \"PUT /repos/{owner}/{repo}/pulls/{pull_number}/update-branch\"\r\n    ],\r\n    updateReview: [\r\n      \"PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}\"\r\n    ],\r\n    updateReviewComment: [\r\n      \"PATCH /repos/{owner}/{repo}/pulls/comments/{comment_id}\"\r\n    ]\r\n  },\r\n  rateLimit: { get: [\"GET /rate_limit\"] },\r\n  reactions: {\r\n    createForCommitComment: [\r\n      \"POST /repos/{owner}/{repo}/comments/{comment_id}/reactions\"\r\n    ],\r\n    createForIssue: [\r\n      \"POST /repos/{owner}/{repo}/issues/{issue_number}/reactions\"\r\n    ],\r\n    createForIssueComment: [\r\n      \"POST /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions\"\r\n    ],\r\n    createForPullRequestReviewComment: [\r\n      \"POST /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions\"\r\n    ],\r\n    createForRelease: [\r\n      \"POST /repos/{owner}/{repo}/releases/{release_id}/reactions\"\r\n    ],\r\n    createForTeamDiscussionCommentInOrg: [\r\n      \"POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions\"\r\n    ],\r\n    createForTeamDiscussionInOrg: [\r\n      \"POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions\"\r\n    ],\r\n    deleteForCommitComment: [\r\n      \"DELETE /repos/{owner}/{repo}/comments/{comment_id}/reactions/{reaction_id}\"\r\n    ],\r\n    deleteForIssue: [\r\n      \"DELETE /repos/{owner}/{repo}/issues/{issue_number}/reactions/{reaction_id}\"\r\n    ],\r\n    deleteForIssueComment: [\r\n      \"DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}\"\r\n    ],\r\n    deleteForPullRequestComment: [\r\n      \"DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions/{reaction_id}\"\r\n    ],\r\n    deleteForRelease: [\r\n      \"DELETE /repos/{owner}/{repo}/releases/{release_id}/reactions/{reaction_id}\"\r\n    ],\r\n    deleteForTeamDiscussion: [\r\n      \"DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions/{reaction_id}\"\r\n    ],\r\n    deleteForTeamDiscussionComment: [\r\n      \"DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions/{reaction_id}\"\r\n    ],\r\n    listForCommitComment: [\r\n      \"GET /repos/{owner}/{repo}/comments/{comment_id}/reactions\"\r\n    ],\r\n    listForIssue: [\"GET /repos/{owner}/{repo}/issues/{issue_number}/reactions\"],\r\n    listForIssueComment: [\r\n      \"GET /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions\"\r\n    ],\r\n    listForPullRequestReviewComment: [\r\n      \"GET /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions\"\r\n    ],\r\n    listForRelease: [\r\n      \"GET /repos/{owner}/{repo}/releases/{release_id}/reactions\"\r\n    ],\r\n    listForTeamDiscussionCommentInOrg: [\r\n      \"GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions\"\r\n    ],\r\n    listForTeamDiscussionInOrg: [\r\n      \"GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions\"\r\n    ]\r\n  },\r\n  repos: {\r\n    acceptInvitation: [\r\n      \"PATCH /user/repository_invitations/{invitation_id}\",\r\n      {},\r\n      { renamed: [\"repos\", \"acceptInvitationForAuthenticatedUser\"] }\r\n    ],\r\n    acceptInvitationForAuthenticatedUser: [\r\n      \"PATCH /user/repository_invitations/{invitation_id}\"\r\n    ],\r\n    addAppAccessRestrictions: [\r\n      \"POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps\",\r\n      {},\r\n      { mapToData: \"apps\" }\r\n    ],\r\n    addCollaborator: [\"PUT /repos/{owner}/{repo}/collaborators/{username}\"],\r\n    addStatusCheckContexts: [\r\n      \"POST /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts\",\r\n      {},\r\n      { mapToData: \"contexts\" }\r\n    ],\r\n    addTeamAccessRestrictions: [\r\n      \"POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams\",\r\n      {},\r\n      { mapToData: \"teams\" }\r\n    ],\r\n    addUserAccessRestrictions: [\r\n      \"POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users\",\r\n      {},\r\n      { mapToData: \"users\" }\r\n    ],\r\n    checkAutomatedSecurityFixes: [\r\n      \"GET /repos/{owner}/{repo}/automated-security-fixes\"\r\n    ],\r\n    checkCollaborator: [\"GET /repos/{owner}/{repo}/collaborators/{username}\"],\r\n    checkVulnerabilityAlerts: [\r\n      \"GET /repos/{owner}/{repo}/vulnerability-alerts\"\r\n    ],\r\n    codeownersErrors: [\"GET /repos/{owner}/{repo}/codeowners/errors\"],\r\n    compareCommits: [\"GET /repos/{owner}/{repo}/compare/{base}...{head}\"],\r\n    compareCommitsWithBasehead: [\r\n      \"GET /repos/{owner}/{repo}/compare/{basehead}\"\r\n    ],\r\n    createAutolink: [\"POST /repos/{owner}/{repo}/autolinks\"],\r\n    createCommitComment: [\r\n      \"POST /repos/{owner}/{repo}/commits/{commit_sha}/comments\"\r\n    ],\r\n    createCommitSignatureProtection: [\r\n      \"POST /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures\"\r\n    ],\r\n    createCommitStatus: [\"POST /repos/{owner}/{repo}/statuses/{sha}\"],\r\n    createDeployKey: [\"POST /repos/{owner}/{repo}/keys\"],\r\n    createDeployment: [\"POST /repos/{owner}/{repo}/deployments\"],\r\n    createDeploymentBranchPolicy: [\r\n      \"POST /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies\"\r\n    ],\r\n    createDeploymentProtectionRule: [\r\n      \"POST /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules\"\r\n    ],\r\n    createDeploymentStatus: [\r\n      \"POST /repos/{owner}/{repo}/deployments/{deployment_id}/statuses\"\r\n    ],\r\n    createDispatchEvent: [\"POST /repos/{owner}/{repo}/dispatches\"],\r\n    createForAuthenticatedUser: [\"POST /user/repos\"],\r\n    createFork: [\"POST /repos/{owner}/{repo}/forks\"],\r\n    createInOrg: [\"POST /orgs/{org}/repos\"],\r\n    createOrUpdateEnvironment: [\r\n      \"PUT /repos/{owner}/{repo}/environments/{environment_name}\"\r\n    ],\r\n    createOrUpdateFileContents: [\"PUT /repos/{owner}/{repo}/contents/{path}\"],\r\n    createOrgRuleset: [\"POST /orgs/{org}/rulesets\"],\r\n    createPagesDeployment: [\"POST /repos/{owner}/{repo}/pages/deployment\"],\r\n    createPagesSite: [\"POST /repos/{owner}/{repo}/pages\"],\r\n    createRelease: [\"POST /repos/{owner}/{repo}/releases\"],\r\n    createRepoRuleset: [\"POST /repos/{owner}/{repo}/rulesets\"],\r\n    createTagProtection: [\"POST /repos/{owner}/{repo}/tags/protection\"],\r\n    createUsingTemplate: [\r\n      \"POST /repos/{template_owner}/{template_repo}/generate\"\r\n    ],\r\n    createWebhook: [\"POST /repos/{owner}/{repo}/hooks\"],\r\n    declineInvitation: [\r\n      \"DELETE /user/repository_invitations/{invitation_id}\",\r\n      {},\r\n      { renamed: [\"repos\", \"declineInvitationForAuthenticatedUser\"] }\r\n    ],\r\n    declineInvitationForAuthenticatedUser: [\r\n      \"DELETE /user/repository_invitations/{invitation_id}\"\r\n    ],\r\n    delete: [\"DELETE /repos/{owner}/{repo}\"],\r\n    deleteAccessRestrictions: [\r\n      \"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions\"\r\n    ],\r\n    deleteAdminBranchProtection: [\r\n      \"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins\"\r\n    ],\r\n    deleteAnEnvironment: [\r\n      \"DELETE /repos/{owner}/{repo}/environments/{environment_name}\"\r\n    ],\r\n    deleteAutolink: [\"DELETE /repos/{owner}/{repo}/autolinks/{autolink_id}\"],\r\n    deleteBranchProtection: [\r\n      \"DELETE /repos/{owner}/{repo}/branches/{branch}/protection\"\r\n    ],\r\n    deleteCommitComment: [\"DELETE /repos/{owner}/{repo}/comments/{comment_id}\"],\r\n    deleteCommitSignatureProtection: [\r\n      \"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures\"\r\n    ],\r\n    deleteDeployKey: [\"DELETE /repos/{owner}/{repo}/keys/{key_id}\"],\r\n    deleteDeployment: [\r\n      \"DELETE /repos/{owner}/{repo}/deployments/{deployment_id}\"\r\n    ],\r\n    deleteDeploymentBranchPolicy: [\r\n      \"DELETE /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}\"\r\n    ],\r\n    deleteFile: [\"DELETE /repos/{owner}/{repo}/contents/{path}\"],\r\n    deleteInvitation: [\r\n      \"DELETE /repos/{owner}/{repo}/invitations/{invitation_id}\"\r\n    ],\r\n    deleteOrgRuleset: [\"DELETE /orgs/{org}/rulesets/{ruleset_id}\"],\r\n    deletePagesSite: [\"DELETE /repos/{owner}/{repo}/pages\"],\r\n    deletePullRequestReviewProtection: [\r\n      \"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews\"\r\n    ],\r\n    deleteRelease: [\"DELETE /repos/{owner}/{repo}/releases/{release_id}\"],\r\n    deleteReleaseAsset: [\r\n      \"DELETE /repos/{owner}/{repo}/releases/assets/{asset_id}\"\r\n    ],\r\n    deleteRepoRuleset: [\"DELETE /repos/{owner}/{repo}/rulesets/{ruleset_id}\"],\r\n    deleteTagProtection: [\r\n      \"DELETE /repos/{owner}/{repo}/tags/protection/{tag_protection_id}\"\r\n    ],\r\n    deleteWebhook: [\"DELETE /repos/{owner}/{repo}/hooks/{hook_id}\"],\r\n    disableAutomatedSecurityFixes: [\r\n      \"DELETE /repos/{owner}/{repo}/automated-security-fixes\"\r\n    ],\r\n    disableDeploymentProtectionRule: [\r\n      \"DELETE /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/{protection_rule_id}\"\r\n    ],\r\n    disablePrivateVulnerabilityReporting: [\r\n      \"DELETE /repos/{owner}/{repo}/private-vulnerability-reporting\"\r\n    ],\r\n    disableVulnerabilityAlerts: [\r\n      \"DELETE /repos/{owner}/{repo}/vulnerability-alerts\"\r\n    ],\r\n    downloadArchive: [\r\n      \"GET /repos/{owner}/{repo}/zipball/{ref}\",\r\n      {},\r\n      { renamed: [\"repos\", \"downloadZipballArchive\"] }\r\n    ],\r\n    downloadTarballArchive: [\"GET /repos/{owner}/{repo}/tarball/{ref}\"],\r\n    downloadZipballArchive: [\"GET /repos/{owner}/{repo}/zipball/{ref}\"],\r\n    enableAutomatedSecurityFixes: [\r\n      \"PUT /repos/{owner}/{repo}/automated-security-fixes\"\r\n    ],\r\n    enablePrivateVulnerabilityReporting: [\r\n      \"PUT /repos/{owner}/{repo}/private-vulnerability-reporting\"\r\n    ],\r\n    enableVulnerabilityAlerts: [\r\n      \"PUT /repos/{owner}/{repo}/vulnerability-alerts\"\r\n    ],\r\n    generateReleaseNotes: [\r\n      \"POST /repos/{owner}/{repo}/releases/generate-notes\"\r\n    ],\r\n    get: [\"GET /repos/{owner}/{repo}\"],\r\n    getAccessRestrictions: [\r\n      \"GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions\"\r\n    ],\r\n    getAdminBranchProtection: [\r\n      \"GET /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins\"\r\n    ],\r\n    getAllDeploymentProtectionRules: [\r\n      \"GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules\"\r\n    ],\r\n    getAllEnvironments: [\"GET /repos/{owner}/{repo}/environments\"],\r\n    getAllStatusCheckContexts: [\r\n      \"GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts\"\r\n    ],\r\n    getAllTopics: [\"GET /repos/{owner}/{repo}/topics\"],\r\n    getAppsWithAccessToProtectedBranch: [\r\n      \"GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps\"\r\n    ],\r\n    getAutolink: [\"GET /repos/{owner}/{repo}/autolinks/{autolink_id}\"],\r\n    getBranch: [\"GET /repos/{owner}/{repo}/branches/{branch}\"],\r\n    getBranchProtection: [\r\n      \"GET /repos/{owner}/{repo}/branches/{branch}/protection\"\r\n    ],\r\n    getBranchRules: [\"GET /repos/{owner}/{repo}/rules/branches/{branch}\"],\r\n    getClones: [\"GET /repos/{owner}/{repo}/traffic/clones\"],\r\n    getCodeFrequencyStats: [\"GET /repos/{owner}/{repo}/stats/code_frequency\"],\r\n    getCollaboratorPermissionLevel: [\r\n      \"GET /repos/{owner}/{repo}/collaborators/{username}/permission\"\r\n    ],\r\n    getCombinedStatusForRef: [\"GET /repos/{owner}/{repo}/commits/{ref}/status\"],\r\n    getCommit: [\"GET /repos/{owner}/{repo}/commits/{ref}\"],\r\n    getCommitActivityStats: [\"GET /repos/{owner}/{repo}/stats/commit_activity\"],\r\n    getCommitComment: [\"GET /repos/{owner}/{repo}/comments/{comment_id}\"],\r\n    getCommitSignatureProtection: [\r\n      \"GET /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures\"\r\n    ],\r\n    getCommunityProfileMetrics: [\"GET /repos/{owner}/{repo}/community/profile\"],\r\n    getContent: [\"GET /repos/{owner}/{repo}/contents/{path}\"],\r\n    getContributorsStats: [\"GET /repos/{owner}/{repo}/stats/contributors\"],\r\n    getCustomDeploymentProtectionRule: [\r\n      \"GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/{protection_rule_id}\"\r\n    ],\r\n    getCustomPropertiesValues: [\"GET /repos/{owner}/{repo}/properties/values\"],\r\n    getDeployKey: [\"GET /repos/{owner}/{repo}/keys/{key_id}\"],\r\n    getDeployment: [\"GET /repos/{owner}/{repo}/deployments/{deployment_id}\"],\r\n    getDeploymentBranchPolicy: [\r\n      \"GET /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}\"\r\n    ],\r\n    getDeploymentStatus: [\r\n      \"GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses/{status_id}\"\r\n    ],\r\n    getEnvironment: [\r\n      \"GET /repos/{owner}/{repo}/environments/{environment_name}\"\r\n    ],\r\n    getLatestPagesBuild: [\"GET /repos/{owner}/{repo}/pages/builds/latest\"],\r\n    getLatestRelease: [\"GET /repos/{owner}/{repo}/releases/latest\"],\r\n    getOrgRuleSuite: [\"GET /orgs/{org}/rulesets/rule-suites/{rule_suite_id}\"],\r\n    getOrgRuleSuites: [\"GET /orgs/{org}/rulesets/rule-suites\"],\r\n    getOrgRuleset: [\"GET /orgs/{org}/rulesets/{ruleset_id}\"],\r\n    getOrgRulesets: [\"GET /orgs/{org}/rulesets\"],\r\n    getPages: [\"GET /repos/{owner}/{repo}/pages\"],\r\n    getPagesBuild: [\"GET /repos/{owner}/{repo}/pages/builds/{build_id}\"],\r\n    getPagesHealthCheck: [\"GET /repos/{owner}/{repo}/pages/health\"],\r\n    getParticipationStats: [\"GET /repos/{owner}/{repo}/stats/participation\"],\r\n    getPullRequestReviewProtection: [\r\n      \"GET /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews\"\r\n    ],\r\n    getPunchCardStats: [\"GET /repos/{owner}/{repo}/stats/punch_card\"],\r\n    getReadme: [\"GET /repos/{owner}/{repo}/readme\"],\r\n    getReadmeInDirectory: [\"GET /repos/{owner}/{repo}/readme/{dir}\"],\r\n    getRelease: [\"GET /repos/{owner}/{repo}/releases/{release_id}\"],\r\n    getReleaseAsset: [\"GET /repos/{owner}/{repo}/releases/assets/{asset_id}\"],\r\n    getReleaseByTag: [\"GET /repos/{owner}/{repo}/releases/tags/{tag}\"],\r\n    getRepoRuleSuite: [\r\n      \"GET /repos/{owner}/{repo}/rulesets/rule-suites/{rule_suite_id}\"\r\n    ],\r\n    getRepoRuleSuites: [\"GET /repos/{owner}/{repo}/rulesets/rule-suites\"],\r\n    getRepoRuleset: [\"GET /repos/{owner}/{repo}/rulesets/{ruleset_id}\"],\r\n    getRepoRulesets: [\"GET /repos/{owner}/{repo}/rulesets\"],\r\n    getStatusChecksProtection: [\r\n      \"GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks\"\r\n    ],\r\n    getTeamsWithAccessToProtectedBranch: [\r\n      \"GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams\"\r\n    ],\r\n    getTopPaths: [\"GET /repos/{owner}/{repo}/traffic/popular/paths\"],\r\n    getTopReferrers: [\"GET /repos/{owner}/{repo}/traffic/popular/referrers\"],\r\n    getUsersWithAccessToProtectedBranch: [\r\n      \"GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users\"\r\n    ],\r\n    getViews: [\"GET /repos/{owner}/{repo}/traffic/views\"],\r\n    getWebhook: [\"GET /repos/{owner}/{repo}/hooks/{hook_id}\"],\r\n    getWebhookConfigForRepo: [\r\n      \"GET /repos/{owner}/{repo}/hooks/{hook_id}/config\"\r\n    ],\r\n    getWebhookDelivery: [\r\n      \"GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}\"\r\n    ],\r\n    listActivities: [\"GET /repos/{owner}/{repo}/activity\"],\r\n    listAutolinks: [\"GET /repos/{owner}/{repo}/autolinks\"],\r\n    listBranches: [\"GET /repos/{owner}/{repo}/branches\"],\r\n    listBranchesForHeadCommit: [\r\n      \"GET /repos/{owner}/{repo}/commits/{commit_sha}/branches-where-head\"\r\n    ],\r\n    listCollaborators: [\"GET /repos/{owner}/{repo}/collaborators\"],\r\n    listCommentsForCommit: [\r\n      \"GET /repos/{owner}/{repo}/commits/{commit_sha}/comments\"\r\n    ],\r\n    listCommitCommentsForRepo: [\"GET /repos/{owner}/{repo}/comments\"],\r\n    listCommitStatusesForRef: [\r\n      \"GET /repos/{owner}/{repo}/commits/{ref}/statuses\"\r\n    ],\r\n    listCommits: [\"GET /repos/{owner}/{repo}/commits\"],\r\n    listContributors: [\"GET /repos/{owner}/{repo}/contributors\"],\r\n    listCustomDeploymentRuleIntegrations: [\r\n      \"GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/apps\"\r\n    ],\r\n    listDeployKeys: [\"GET /repos/{owner}/{repo}/keys\"],\r\n    listDeploymentBranchPolicies: [\r\n      \"GET /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies\"\r\n    ],\r\n    listDeploymentStatuses: [\r\n      \"GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses\"\r\n    ],\r\n    listDeployments: [\"GET /repos/{owner}/{repo}/deployments\"],\r\n    listForAuthenticatedUser: [\"GET /user/repos\"],\r\n    listForOrg: [\"GET /orgs/{org}/repos\"],\r\n    listForUser: [\"GET /users/{username}/repos\"],\r\n    listForks: [\"GET /repos/{owner}/{repo}/forks\"],\r\n    listInvitations: [\"GET /repos/{owner}/{repo}/invitations\"],\r\n    listInvitationsForAuthenticatedUser: [\"GET /user/repository_invitations\"],\r\n    listLanguages: [\"GET /repos/{owner}/{repo}/languages\"],\r\n    listPagesBuilds: [\"GET /repos/{owner}/{repo}/pages/builds\"],\r\n    listPublic: [\"GET /repositories\"],\r\n    listPullRequestsAssociatedWithCommit: [\r\n      \"GET /repos/{owner}/{repo}/commits/{commit_sha}/pulls\"\r\n    ],\r\n    listReleaseAssets: [\r\n      \"GET /repos/{owner}/{repo}/releases/{release_id}/assets\"\r\n    ],\r\n    listReleases: [\"GET /repos/{owner}/{repo}/releases\"],\r\n    listTagProtection: [\"GET /repos/{owner}/{repo}/tags/protection\"],\r\n    listTags: [\"GET /repos/{owner}/{repo}/tags\"],\r\n    listTeams: [\"GET /repos/{owner}/{repo}/teams\"],\r\n    listWebhookDeliveries: [\r\n      \"GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries\"\r\n    ],\r\n    listWebhooks: [\"GET /repos/{owner}/{repo}/hooks\"],\r\n    merge: [\"POST /repos/{owner}/{repo}/merges\"],\r\n    mergeUpstream: [\"POST /repos/{owner}/{repo}/merge-upstream\"],\r\n    pingWebhook: [\"POST /repos/{owner}/{repo}/hooks/{hook_id}/pings\"],\r\n    redeliverWebhookDelivery: [\r\n      \"POST /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}/attempts\"\r\n    ],\r\n    removeAppAccessRestrictions: [\r\n      \"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps\",\r\n      {},\r\n      { mapToData: \"apps\" }\r\n    ],\r\n    removeCollaborator: [\r\n      \"DELETE /repos/{owner}/{repo}/collaborators/{username}\"\r\n    ],\r\n    removeStatusCheckContexts: [\r\n      \"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts\",\r\n      {},\r\n      { mapToData: \"contexts\" }\r\n    ],\r\n    removeStatusCheckProtection: [\r\n      \"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks\"\r\n    ],\r\n    removeTeamAccessRestrictions: [\r\n      \"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams\",\r\n      {},\r\n      { mapToData: \"teams\" }\r\n    ],\r\n    removeUserAccessRestrictions: [\r\n      \"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users\",\r\n      {},\r\n      { mapToData: \"users\" }\r\n    ],\r\n    renameBranch: [\"POST /repos/{owner}/{repo}/branches/{branch}/rename\"],\r\n    replaceAllTopics: [\"PUT /repos/{owner}/{repo}/topics\"],\r\n    requestPagesBuild: [\"POST /repos/{owner}/{repo}/pages/builds\"],\r\n    setAdminBranchProtection: [\r\n      \"POST /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins\"\r\n    ],\r\n    setAppAccessRestrictions: [\r\n      \"PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps\",\r\n      {},\r\n      { mapToData: \"apps\" }\r\n    ],\r\n    setStatusCheckContexts: [\r\n      \"PUT /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts\",\r\n      {},\r\n      { mapToData: \"contexts\" }\r\n    ],\r\n    setTeamAccessRestrictions: [\r\n      \"PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams\",\r\n      {},\r\n      { mapToData: \"teams\" }\r\n    ],\r\n    setUserAccessRestrictions: [\r\n      \"PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users\",\r\n      {},\r\n      { mapToData: \"users\" }\r\n    ],\r\n    testPushWebhook: [\"POST /repos/{owner}/{repo}/hooks/{hook_id}/tests\"],\r\n    transfer: [\"POST /repos/{owner}/{repo}/transfer\"],\r\n    update: [\"PATCH /repos/{owner}/{repo}\"],\r\n    updateBranchProtection: [\r\n      \"PUT /repos/{owner}/{repo}/branches/{branch}/protection\"\r\n    ],\r\n    updateCommitComment: [\"PATCH /repos/{owner}/{repo}/comments/{comment_id}\"],\r\n    updateDeploymentBranchPolicy: [\r\n      \"PUT /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}\"\r\n    ],\r\n    updateInformationAboutPagesSite: [\"PUT /repos/{owner}/{repo}/pages\"],\r\n    updateInvitation: [\r\n      \"PATCH /repos/{owner}/{repo}/invitations/{invitation_id}\"\r\n    ],\r\n    updateOrgRuleset: [\"PUT /orgs/{org}/rulesets/{ruleset_id}\"],\r\n    updatePullRequestReviewProtection: [\r\n      \"PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews\"\r\n    ],\r\n    updateRelease: [\"PATCH /repos/{owner}/{repo}/releases/{release_id}\"],\r\n    updateReleaseAsset: [\r\n      \"PATCH /repos/{owner}/{repo}/releases/assets/{asset_id}\"\r\n    ],\r\n    updateRepoRuleset: [\"PUT /repos/{owner}/{repo}/rulesets/{ruleset_id}\"],\r\n    updateStatusCheckPotection: [\r\n      \"PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks\",\r\n      {},\r\n      { renamed: [\"repos\", \"updateStatusCheckProtection\"] }\r\n    ],\r\n    updateStatusCheckProtection: [\r\n      \"PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks\"\r\n    ],\r\n    updateWebhook: [\"PATCH /repos/{owner}/{repo}/hooks/{hook_id}\"],\r\n    updateWebhookConfigForRepo: [\r\n      \"PATCH /repos/{owner}/{repo}/hooks/{hook_id}/config\"\r\n    ],\r\n    uploadReleaseAsset: [\r\n      \"POST /repos/{owner}/{repo}/releases/{release_id}/assets{?name,label}\",\r\n      { baseUrl: \"https://uploads.github.com\" }\r\n    ]\r\n  },\r\n  search: {\r\n    code: [\"GET /search/code\"],\r\n    commits: [\"GET /search/commits\"],\r\n    issuesAndPullRequests: [\"GET /search/issues\"],\r\n    labels: [\"GET /search/labels\"],\r\n    repos: [\"GET /search/repositories\"],\r\n    topics: [\"GET /search/topics\"],\r\n    users: [\"GET /search/users\"]\r\n  },\r\n  secretScanning: {\r\n    getAlert: [\r\n      \"GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}\"\r\n    ],\r\n    listAlertsForEnterprise: [\r\n      \"GET /enterprises/{enterprise}/secret-scanning/alerts\"\r\n    ],\r\n    listAlertsForOrg: [\"GET /orgs/{org}/secret-scanning/alerts\"],\r\n    listAlertsForRepo: [\"GET /repos/{owner}/{repo}/secret-scanning/alerts\"],\r\n    listLocationsForAlert: [\r\n      \"GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}/locations\"\r\n    ],\r\n    updateAlert: [\r\n      \"PATCH /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}\"\r\n    ]\r\n  },\r\n  securityAdvisories: {\r\n    createPrivateVulnerabilityReport: [\r\n      \"POST /repos/{owner}/{repo}/security-advisories/reports\"\r\n    ],\r\n    createRepositoryAdvisory: [\r\n      \"POST /repos/{owner}/{repo}/security-advisories\"\r\n    ],\r\n    createRepositoryAdvisoryCveRequest: [\r\n      \"POST /repos/{owner}/{repo}/security-advisories/{ghsa_id}/cve\"\r\n    ],\r\n    getGlobalAdvisory: [\"GET /advisories/{ghsa_id}\"],\r\n    getRepositoryAdvisory: [\r\n      \"GET /repos/{owner}/{repo}/security-advisories/{ghsa_id}\"\r\n    ],\r\n    listGlobalAdvisories: [\"GET /advisories\"],\r\n    listOrgRepositoryAdvisories: [\"GET /orgs/{org}/security-advisories\"],\r\n    listRepositoryAdvisories: [\"GET /repos/{owner}/{repo}/security-advisories\"],\r\n    updateRepositoryAdvisory: [\r\n      \"PATCH /repos/{owner}/{repo}/security-advisories/{ghsa_id}\"\r\n    ]\r\n  },\r\n  teams: {\r\n    addOrUpdateMembershipForUserInOrg: [\r\n      \"PUT /orgs/{org}/teams/{team_slug}/memberships/{username}\"\r\n    ],\r\n    addOrUpdateProjectPermissionsInOrg: [\r\n      \"PUT /orgs/{org}/teams/{team_slug}/projects/{project_id}\"\r\n    ],\r\n    addOrUpdateRepoPermissionsInOrg: [\r\n      \"PUT /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}\"\r\n    ],\r\n    checkPermissionsForProjectInOrg: [\r\n      \"GET /orgs/{org}/teams/{team_slug}/projects/{project_id}\"\r\n    ],\r\n    checkPermissionsForRepoInOrg: [\r\n      \"GET /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}\"\r\n    ],\r\n    create: [\"POST /orgs/{org}/teams\"],\r\n    createDiscussionCommentInOrg: [\r\n      \"POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments\"\r\n    ],\r\n    createDiscussionInOrg: [\"POST /orgs/{org}/teams/{team_slug}/discussions\"],\r\n    deleteDiscussionCommentInOrg: [\r\n      \"DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}\"\r\n    ],\r\n    deleteDiscussionInOrg: [\r\n      \"DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}\"\r\n    ],\r\n    deleteInOrg: [\"DELETE /orgs/{org}/teams/{team_slug}\"],\r\n    getByName: [\"GET /orgs/{org}/teams/{team_slug}\"],\r\n    getDiscussionCommentInOrg: [\r\n      \"GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}\"\r\n    ],\r\n    getDiscussionInOrg: [\r\n      \"GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}\"\r\n    ],\r\n    getMembershipForUserInOrg: [\r\n      \"GET /orgs/{org}/teams/{team_slug}/memberships/{username}\"\r\n    ],\r\n    list: [\"GET /orgs/{org}/teams\"],\r\n    listChildInOrg: [\"GET /orgs/{org}/teams/{team_slug}/teams\"],\r\n    listDiscussionCommentsInOrg: [\r\n      \"GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments\"\r\n    ],\r\n    listDiscussionsInOrg: [\"GET /orgs/{org}/teams/{team_slug}/discussions\"],\r\n    listForAuthenticatedUser: [\"GET /user/teams\"],\r\n    listMembersInOrg: [\"GET /orgs/{org}/teams/{team_slug}/members\"],\r\n    listPendingInvitationsInOrg: [\r\n      \"GET /orgs/{org}/teams/{team_slug}/invitations\"\r\n    ],\r\n    listProjectsInOrg: [\"GET /orgs/{org}/teams/{team_slug}/projects\"],\r\n    listReposInOrg: [\"GET /orgs/{org}/teams/{team_slug}/repos\"],\r\n    removeMembershipForUserInOrg: [\r\n      \"DELETE /orgs/{org}/teams/{team_slug}/memberships/{username}\"\r\n    ],\r\n    removeProjectInOrg: [\r\n      \"DELETE /orgs/{org}/teams/{team_slug}/projects/{project_id}\"\r\n    ],\r\n    removeRepoInOrg: [\r\n      \"DELETE /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}\"\r\n    ],\r\n    updateDiscussionCommentInOrg: [\r\n      \"PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}\"\r\n    ],\r\n    updateDiscussionInOrg: [\r\n      \"PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}\"\r\n    ],\r\n    updateInOrg: [\"PATCH /orgs/{org}/teams/{team_slug}\"]\r\n  },\r\n  users: {\r\n    addEmailForAuthenticated: [\r\n      \"POST /user/emails\",\r\n      {},\r\n      { renamed: [\"users\", \"addEmailForAuthenticatedUser\"] }\r\n    ],\r\n    addEmailForAuthenticatedUser: [\"POST /user/emails\"],\r\n    addSocialAccountForAuthenticatedUser: [\"POST /user/social_accounts\"],\r\n    block: [\"PUT /user/blocks/{username}\"],\r\n    checkBlocked: [\"GET /user/blocks/{username}\"],\r\n    checkFollowingForUser: [\"GET /users/{username}/following/{target_user}\"],\r\n    checkPersonIsFollowedByAuthenticated: [\"GET /user/following/{username}\"],\r\n    createGpgKeyForAuthenticated: [\r\n      \"POST /user/gpg_keys\",\r\n      {},\r\n      { renamed: [\"users\", \"createGpgKeyForAuthenticatedUser\"] }\r\n    ],\r\n    createGpgKeyForAuthenticatedUser: [\"POST /user/gpg_keys\"],\r\n    createPublicSshKeyForAuthenticated: [\r\n      \"POST /user/keys\",\r\n      {},\r\n      { renamed: [\"users\", \"createPublicSshKeyForAuthenticatedUser\"] }\r\n    ],\r\n    createPublicSshKeyForAuthenticatedUser: [\"POST /user/keys\"],\r\n    createSshSigningKeyForAuthenticatedUser: [\"POST /user/ssh_signing_keys\"],\r\n    deleteEmailForAuthenticated: [\r\n      \"DELETE /user/emails\",\r\n      {},\r\n      { renamed: [\"users\", \"deleteEmailForAuthenticatedUser\"] }\r\n    ],\r\n    deleteEmailForAuthenticatedUser: [\"DELETE /user/emails\"],\r\n    deleteGpgKeyForAuthenticated: [\r\n      \"DELETE /user/gpg_keys/{gpg_key_id}\",\r\n      {},\r\n      { renamed: [\"users\", \"deleteGpgKeyForAuthenticatedUser\"] }\r\n    ],\r\n    deleteGpgKeyForAuthenticatedUser: [\"DELETE /user/gpg_keys/{gpg_key_id}\"],\r\n    deletePublicSshKeyForAuthenticated: [\r\n      \"DELETE /user/keys/{key_id}\",\r\n      {},\r\n      { renamed: [\"users\", \"deletePublicSshKeyForAuthenticatedUser\"] }\r\n    ],\r\n    deletePublicSshKeyForAuthenticatedUser: [\"DELETE /user/keys/{key_id}\"],\r\n    deleteSocialAccountForAuthenticatedUser: [\"DELETE /user/social_accounts\"],\r\n    deleteSshSigningKeyForAuthenticatedUser: [\r\n      \"DELETE /user/ssh_signing_keys/{ssh_signing_key_id}\"\r\n    ],\r\n    follow: [\"PUT /user/following/{username}\"],\r\n    getAuthenticated: [\"GET /user\"],\r\n    getByUsername: [\"GET /users/{username}\"],\r\n    getContextForUser: [\"GET /users/{username}/hovercard\"],\r\n    getGpgKeyForAuthenticated: [\r\n      \"GET /user/gpg_keys/{gpg_key_id}\",\r\n      {},\r\n      { renamed: [\"users\", \"getGpgKeyForAuthenticatedUser\"] }\r\n    ],\r\n    getGpgKeyForAuthenticatedUser: [\"GET /user/gpg_keys/{gpg_key_id}\"],\r\n    getPublicSshKeyForAuthenticated: [\r\n      \"GET /user/keys/{key_id}\",\r\n      {},\r\n      { renamed: [\"users\", \"getPublicSshKeyForAuthenticatedUser\"] }\r\n    ],\r\n    getPublicSshKeyForAuthenticatedUser: [\"GET /user/keys/{key_id}\"],\r\n    getSshSigningKeyForAuthenticatedUser: [\r\n      \"GET /user/ssh_signing_keys/{ssh_signing_key_id}\"\r\n    ],\r\n    list: [\"GET /users\"],\r\n    listBlockedByAuthenticated: [\r\n      \"GET /user/blocks\",\r\n      {},\r\n      { renamed: [\"users\", \"listBlockedByAuthenticatedUser\"] }\r\n    ],\r\n    listBlockedByAuthenticatedUser: [\"GET /user/blocks\"],\r\n    listEmailsForAuthenticated: [\r\n      \"GET /user/emails\",\r\n      {},\r\n      { renamed: [\"users\", \"listEmailsForAuthenticatedUser\"] }\r\n    ],\r\n    listEmailsForAuthenticatedUser: [\"GET /user/emails\"],\r\n    listFollowedByAuthenticated: [\r\n      \"GET /user/following\",\r\n      {},\r\n      { renamed: [\"users\", \"listFollowedByAuthenticatedUser\"] }\r\n    ],\r\n    listFollowedByAuthenticatedUser: [\"GET /user/following\"],\r\n    listFollowersForAuthenticatedUser: [\"GET /user/followers\"],\r\n    listFollowersForUser: [\"GET /users/{username}/followers\"],\r\n    listFollowingForUser: [\"GET /users/{username}/following\"],\r\n    listGpgKeysForAuthenticated: [\r\n      \"GET /user/gpg_keys\",\r\n      {},\r\n      { renamed: [\"users\", \"listGpgKeysForAuthenticatedUser\"] }\r\n    ],\r\n    listGpgKeysForAuthenticatedUser: [\"GET /user/gpg_keys\"],\r\n    listGpgKeysForUser: [\"GET /users/{username}/gpg_keys\"],\r\n    listPublicEmailsForAuthenticated: [\r\n      \"GET /user/public_emails\",\r\n      {},\r\n      { renamed: [\"users\", \"listPublicEmailsForAuthenticatedUser\"] }\r\n    ],\r\n    listPublicEmailsForAuthenticatedUser: [\"GET /user/public_emails\"],\r\n    listPublicKeysForUser: [\"GET /users/{username}/keys\"],\r\n    listPublicSshKeysForAuthenticated: [\r\n      \"GET /user/keys\",\r\n      {},\r\n      { renamed: [\"users\", \"listPublicSshKeysForAuthenticatedUser\"] }\r\n    ],\r\n    listPublicSshKeysForAuthenticatedUser: [\"GET /user/keys\"],\r\n    listSocialAccountsForAuthenticatedUser: [\"GET /user/social_accounts\"],\r\n    listSocialAccountsForUser: [\"GET /users/{username}/social_accounts\"],\r\n    listSshSigningKeysForAuthenticatedUser: [\"GET /user/ssh_signing_keys\"],\r\n    listSshSigningKeysForUser: [\"GET /users/{username}/ssh_signing_keys\"],\r\n    setPrimaryEmailVisibilityForAuthenticated: [\r\n      \"PATCH /user/email/visibility\",\r\n      {},\r\n      { renamed: [\"users\", \"setPrimaryEmailVisibilityForAuthenticatedUser\"] }\r\n    ],\r\n    setPrimaryEmailVisibilityForAuthenticatedUser: [\r\n      \"PATCH /user/email/visibility\"\r\n    ],\r\n    unblock: [\"DELETE /user/blocks/{username}\"],\r\n    unfollow: [\"DELETE /user/following/{username}\"],\r\n    updateAuthenticated: [\"PATCH /user\"]\r\n  }\r\n};\r\nvar endpoints_default = Endpoints;\r\n\r\n// pkg/dist-src/endpoints-to-methods.js\r\nvar endpointMethodsMap = /* @__PURE__ */ new Map();\r\nfor (const [scope, endpoints] of Object.entries(endpoints_default)) {\r\n  for (const [methodName, endpoint] of Object.entries(endpoints)) {\r\n    const [route, defaults, decorations] = endpoint;\r\n    const [method, url] = route.split(/ /);\r\n    const endpointDefaults = Object.assign(\r\n      {\r\n        method,\r\n        url\r\n      },\r\n      defaults\r\n    );\r\n    if (!endpointMethodsMap.has(scope)) {\r\n      endpointMethodsMap.set(scope, /* @__PURE__ */ new Map());\r\n    }\r\n    endpointMethodsMap.get(scope).set(methodName, {\r\n      scope,\r\n      methodName,\r\n      endpointDefaults,\r\n      decorations\r\n    });\r\n  }\r\n}\r\nvar handler = {\r\n  has({ scope }, methodName) {\r\n    return endpointMethodsMap.get(scope).has(methodName);\r\n  },\r\n  getOwnPropertyDescriptor(target, methodName) {\r\n    return {\r\n      value: this.get(target, methodName),\r\n      // ensures method is in the cache\r\n      configurable: true,\r\n      writable: true,\r\n      enumerable: true\r\n    };\r\n  },\r\n  defineProperty(target, methodName, descriptor) {\r\n    Object.defineProperty(target.cache, methodName, descriptor);\r\n    return true;\r\n  },\r\n  deleteProperty(target, methodName) {\r\n    delete target.cache[methodName];\r\n    return true;\r\n  },\r\n  ownKeys({ scope }) {\r\n    return [...endpointMethodsMap.get(scope).keys()];\r\n  },\r\n  set(target, methodName, value) {\r\n    return target.cache[methodName] = value;\r\n  },\r\n  get({ octokit, scope, cache }, methodName) {\r\n    if (cache[methodName]) {\r\n      return cache[methodName];\r\n    }\r\n    const method = endpointMethodsMap.get(scope).get(methodName);\r\n    if (!method) {\r\n      return void 0;\r\n    }\r\n    const { endpointDefaults, decorations } = method;\r\n    if (decorations) {\r\n      cache[methodName] = decorate(\r\n        octokit,\r\n        scope,\r\n        methodName,\r\n        endpointDefaults,\r\n        decorations\r\n      );\r\n    } else {\r\n      cache[methodName] = octokit.request.defaults(endpointDefaults);\r\n    }\r\n    return cache[methodName];\r\n  }\r\n};\r\nfunction endpointsToMethods(octokit) {\r\n  const newMethods = {};\r\n  for (const scope of endpointMethodsMap.keys()) {\r\n    newMethods[scope] = new Proxy({ octokit, scope, cache: {} }, handler);\r\n  }\r\n  return newMethods;\r\n}\r\nfunction decorate(octokit, scope, methodName, defaults, decorations) {\r\n  const requestWithDefaults = octokit.request.defaults(defaults);\r\n  function withDecorations(...args) {\r\n    let options = requestWithDefaults.endpoint.merge(...args);\r\n    if (decorations.mapToData) {\r\n      options = Object.assign({}, options, {\r\n        data: options[decorations.mapToData],\r\n        [decorations.mapToData]: void 0\r\n      });\r\n      return requestWithDefaults(options);\r\n    }\r\n    if (decorations.renamed) {\r\n      const [newScope, newMethodName] = decorations.renamed;\r\n      octokit.log.warn(\r\n        `octokit.${scope}.${methodName}() has been renamed to octokit.${newScope}.${newMethodName}()`\r\n      );\r\n    }\r\n    if (decorations.deprecated) {\r\n      octokit.log.warn(decorations.deprecated);\r\n    }\r\n    if (decorations.renamedParameters) {\r\n      const options2 = requestWithDefaults.endpoint.merge(...args);\r\n      for (const [name, alias] of Object.entries(\r\n        decorations.renamedParameters\r\n      )) {\r\n        if (name in options2) {\r\n          octokit.log.warn(\r\n            `\"${name}\" parameter is deprecated for \"octokit.${scope}.${methodName}()\". Use \"${alias}\" instead`\r\n          );\r\n          if (!(alias in options2)) {\r\n            options2[alias] = options2[name];\r\n          }\r\n          delete options2[name];\r\n        }\r\n      }\r\n      return requestWithDefaults(options2);\r\n    }\r\n    return requestWithDefaults(...args);\r\n  }\r\n  return Object.assign(withDecorations, requestWithDefaults);\r\n}\r\n\r\n// pkg/dist-src/index.js\r\nfunction restEndpointMethods(octokit) {\r\n  const api = endpointsToMethods(octokit);\r\n  return {\r\n    rest: api\r\n  };\r\n}\r\nrestEndpointMethods.VERSION = VERSION;\r\nfunction legacyRestEndpointMethods(octokit) {\r\n  const api = endpointsToMethods(octokit);\r\n  return {\r\n    ...api,\r\n    rest: api\r\n  };\r\n}\r\nlegacyRestEndpointMethods.VERSION = VERSION;\r\nexport {\r\n  legacyRestEndpointMethods,\r\n  restEndpointMethods\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}