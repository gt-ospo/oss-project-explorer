{"ast":null,"code":"var _jsxFileName = \"/Users/natekim/Downloads/OSPO/react-os-framework/my-app/client/src/components/ProjectFormPage/ProjectForm.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport isUrl from \"is-url\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProjectForm() {\n  _s();\n  const [formData, setFormData] = useState({\n    projectName: '',\n    projectDescription: '',\n    email: '',\n    projectUrl: '',\n    projectTopics: [],\n    licenses: []\n  });\n  const [urlError, setUrlError] = useState('');\n  const [emailError, setEmailError] = useState('');\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const jsonFormData = JSON.stringify(formData);\n    let isValid = true;\n    if (!formData.projectUrl) {\n      setUrlError(\"Please enter a project URL\");\n    } else {\n      const projectUrlCheck = isUrl(formData.projectUrl);\n      if (!projectUrlCheck) {\n        setUrlError(\"Project URL is not in a valid format\");\n        isValid = false;\n      } else {\n        setUrlError(\"\");\n      }\n    }\n    if (!formData.email) {\n      setEmailError(\"Please enter the primary contact's email\");\n    } else {\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n      const emailCheck = emailRegex.test(formData.email);\n      if (!emailCheck) {\n        setEmailError(\"Contact email is not a valid email\");\n        isValid = false;\n      } else {\n        setEmailError(\"\");\n      }\n    }\n    if (isValid) {\n      const response = await fetch('http://localhost:3001/submit-form', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: jsonFormData\n      });\n      if (response.ok) {\n        console.log('Data submitted successfully');\n      } else {\n        console.error('Failed to submit data');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Project Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"projectName\",\n        value: formData.projectName,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Project Description:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"projectDescription\",\n        value: formData.projectDescription,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"email\",\n        value: formData.email,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), emailError && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: [\" \", emailError, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Project URL:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"projectUrl\",\n        value: formData.projectUrl,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), urlError && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"urlError\",\n      children: [\" \", urlError, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n_s(ProjectForm, \"y2uTj0Is8iCOfR/HsbTwpE6Et80=\");\n_c = ProjectForm;\nexport default ProjectForm;\nvar _c;\n$RefreshReg$(_c, \"ProjectForm\");","map":{"version":3,"names":["useState","isUrl","jsxDEV","_jsxDEV","ProjectForm","_s","formData","setFormData","projectName","projectDescription","email","projectUrl","projectTopics","licenses","urlError","setUrlError","emailError","setEmailError","handleChange","e","name","value","target","prevState","handleSubmit","preventDefault","jsonFormData","JSON","stringify","isValid","projectUrlCheck","emailRegex","emailCheck","test","response","fetch","method","headers","body","ok","console","log","error","onSubmit","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","style","color","className","_c","$RefreshReg$"],"sources":["/Users/natekim/Downloads/OSPO/react-os-framework/my-app/client/src/components/ProjectFormPage/ProjectForm.js"],"sourcesContent":["import { useState } from \"react\";\nimport isUrl from \"is-url\";\n\nfunction ProjectForm() {\n  const [formData, setFormData] = useState(\n    { projectName: '', projectDescription: '', email: '', projectUrl: '', projectTopics: [], licenses: []})\n  \n  const [urlError, setUrlError] = useState('');\n  const [emailError, setEmailError] = useState('');\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData(prevState => ({\n        ...prevState,\n        [name]: value\n    }));\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const jsonFormData = JSON.stringify(formData);\n\n    let isValid = true;\n\n    if (!formData.projectUrl) {\n      setUrlError(\"Please enter a project URL\");\n    } else {\n      const projectUrlCheck = isUrl(formData.projectUrl);\n\n      if (!projectUrlCheck) {\n        setUrlError(\"Project URL is not in a valid format\");\n        isValid = false;\n      } else {\n        setUrlError(\"\");\n      }\n    }\n    \n    \n    if (!formData.email) {\n      setEmailError(\"Please enter the primary contact's email\");\n    } else {\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n      const emailCheck = emailRegex.test(formData.email);\n    \n      if (!emailCheck) {\n        setEmailError(\"Contact email is not a valid email\");\n        isValid = false;\n      } else {\n        setEmailError(\"\");\n      }\n    }\n    \n\n    if (isValid) {\n      const response = await fetch('http://localhost:3001/submit-form', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: jsonFormData,\n      });\n\n      if (response.ok) {\n        console.log('Data submitted successfully');\n      } else {\n        console.error('Failed to submit data');\n      }\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label>\n        Project Name:\n        <input\n          type=\"text\"\n          name=\"projectName\"\n          value={formData.projectName}\n          onChange={handleChange}\n        />\n      </label>\n      <label>\n        Project Description:\n        <input\n          type=\"text\"\n          name=\"projectDescription\"\n          value={formData.projectDescription}\n          onChange={handleChange}\n        />\n      </label>\n      <label>\n        Email:\n        <input\n          type=\"text\"\n          name=\"email\"\n          value={formData.email}\n          onChange={handleChange}\n        />\n      </label>\n      {emailError && <p style={{color: 'red'}}> {emailError} </p>}\n      <label>\n        Project URL:\n        <input\n          type=\"text\"\n          name=\"projectUrl\"\n          value={formData.projectUrl}\n          onChange={handleChange}\n        />\n      </label>\n      {urlError && <div className=\"urlError\"> {urlError} </div>}\n      <button type=\"submit\">Submit</button>\n    </form>\n  );\n}\n\nexport default ProjectForm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}