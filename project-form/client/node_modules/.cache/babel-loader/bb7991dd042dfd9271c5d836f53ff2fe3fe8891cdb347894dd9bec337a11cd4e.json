{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\natek\\\\Downloads\\\\OSPO\\\\react-os-framework\\\\project-form\\\\client\\\\src\\\\components\\\\ProjectExplorerPage\\\\ProjectExplorer.js\",\n  _s = $RefreshSig$();\nimport ProjectForm from \"../ProjectFormPage/ProjectForm\";\nimport { useState, useEffect } from \"react\";\nimport { useTable, useExpanded } from '@tanstack/react-table';\nimport { Octokit } from \"octokit\";\n\n// TODO:\n//  - Input HTML for search bar, category checkboxes on side, and database layout\n//  - Add styling\n//  - Move Github API method to separate file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProjectExplorer() {\n  _s();\n  const [projects, setProjects] = useState([]);\n  const projectAreaOptions = [{\n    value: 'ai',\n    label: 'Artifical Intelligence'\n  }, {\n    value: 'bioscience',\n    label: 'Bioscience'\n  }, {\n    value: 'compsci',\n    label: 'Computer Science'\n  }, {\n    value: 'hpc',\n    label: 'High Performance Computing'\n  }, {\n    value: 'graphics',\n    label: 'Computer Graphics'\n  }, {\n    value: 'robotics',\n    label: 'Robotics'\n  }, {\n    value: 'hci',\n    label: 'Human-Computer Interaction'\n  }];\n  const licenseOptions = [{\n    value: 'mit',\n    label: 'MIT License'\n  }, {\n    value: 'apache',\n    label: 'Apache License 2.0'\n  }, {\n    value: 'isc',\n    label: 'ISC License'\n  }, {\n    value: 'bsd-3',\n    label: 'BSD 3-Clause \"New\" or \"Revised\" License'\n  }];\n  const [showForm, setShowForm] = useState(false);\n\n  // Fetch JSON project data and set allProjects\n  useEffect(() => {\n    const octokit = new Octokit({\n      auth: \"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\"\n    });\n    async function fetchProjects() {\n      try {\n        const response = await octokit.request(\"GET /repos/{owner}/{repo}/contents/{path}?ref={branch}\", {\n          owner: \"gt-ospo\",\n          repo: \"open-source-project-explorer\",\n          path: \"project_list.json\",\n          branch: \"json-form-test\"\n        });\n        const content = atob(response.data.content);\n        const projects = JSON.parse(content);\n        setProjects(projects);\n      } catch (error) {\n        console.error(\"Something went wrong while fetching the projects...\", error);\n      }\n    }\n    fetchProjects();\n  }, []);\n  const data = useMemo(() => projects, [projects]);\n  const columns = useMemo(() => [{\n    Header: 'Name',\n    accessor: 'projectName'\n  }, {\n    Header: 'Project Area',\n    accessor: 'projectAreas',\n    // Assuming this is an array, you might need to adjust\n    Cell: ({\n      value\n    }) => value.join(', ') // Adjust based on your data structure\n  }, {\n    Header: 'License',\n    accessor: 'licenses',\n    // Assuming this is an array, adjust as needed\n    Cell: ({\n      value\n    }) => value.join(', ') // Adjust based on your data structure\n  }], []);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    page,\n    // Use 'page' instead of 'rows' for pagination\n    prepareRow,\n    canPreviousPage,\n    canNextPage,\n    pageOptions,\n    nextPage,\n    previousPage,\n    setPageSize,\n    state: {\n      pageIndex,\n      pageSize\n    }\n  } = useTable({\n    columns,\n    data,\n    initialState: {\n      pageIndex: 0,\n      pageSize: 10\n    } // Set page size to 10 as per requirement\n  }, useExpanded, usePagination);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"isolate bg-white px-6 py-24 sm:py-32 lg:px-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      ...getTableProps(),\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", {\n          ...headerGroup.getHeaderGroupProps(),\n          children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", {\n            ...column.getHeaderProps(),\n            children: column.render('Header')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        ...getTableBodyProps(),\n        children: page.map(row => {\n          prepareRow(row);\n          return /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              ...row.getRowProps(),\n              children: row.cells.map(cell => {\n                return /*#__PURE__*/_jsxDEV(\"td\", {\n                  ...cell.getCellProps(),\n                  children: cell.render('Cell')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 29\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 25\n            }, this), row.isExpanded ?\n            /*#__PURE__*/\n            // Render expanded row content here, adjust based on your data structure\n            _jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                colSpan: visibleColumns.length\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 25\n            }, this) : null]\n          }, row.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 21\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-10\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowForm(!showForm),\n        className: `block w-full rounded-md px-3.5 py-2.5 text-center text-sm font-semibold shadow-sm bg-gtgold text-white hover:bg-gtgoldlight focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600`,\n        children: showForm ? \"Close Form\" : \"Submit New Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }, this), showForm && /*#__PURE__*/_jsxDEV(ProjectForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 9\n  }, this);\n}\n_s(ProjectExplorer, \"hQgImkfY9gnAUMMOQL4sXxe3RR8=\", false, function () {\n  return [useTable];\n});\n_c = ProjectExplorer;\n;\nexport default ProjectExplorer;\nvar _c;\n$RefreshReg$(_c, \"ProjectExplorer\");","map":{"version":3,"names":["ProjectForm","useState","useEffect","useTable","useExpanded","Octokit","jsxDEV","_jsxDEV","ProjectExplorer","_s","projects","setProjects","projectAreaOptions","value","label","licenseOptions","showForm","setShowForm","octokit","auth","fetchProjects","response","request","owner","repo","path","branch","content","atob","data","JSON","parse","error","console","useMemo","columns","Header","accessor","Cell","join","getTableProps","getTableBodyProps","headerGroups","page","prepareRow","canPreviousPage","canNextPage","pageOptions","nextPage","previousPage","setPageSize","state","pageIndex","pageSize","initialState","usePagination","className","children","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","fileName","_jsxFileName","lineNumber","columnNumber","row","React","Fragment","getRowProps","cells","cell","getCellProps","isExpanded","colSpan","visibleColumns","length","id","onClick","_c","$RefreshReg$"],"sources":["C:/Users/natek/Downloads/OSPO/react-os-framework/project-form/client/src/components/ProjectExplorerPage/ProjectExplorer.js"],"sourcesContent":["import ProjectForm from \"../ProjectFormPage/ProjectForm\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useTable, useExpanded } from '@tanstack/react-table';\r\nimport { Octokit } from \"octokit\";\r\n\r\n// TODO:\r\n//  - Input HTML for search bar, category checkboxes on side, and database layout\r\n//  - Add styling\r\n//  - Move Github API method to separate file\r\n\r\nfunction ProjectExplorer() {\r\n    const [projects, setProjects] = useState([]);\r\n\r\n    const projectAreaOptions = [\r\n        { value: 'ai', label: 'Artifical Intelligence' },\r\n        { value: 'bioscience', label: 'Bioscience' },\r\n        { value: 'compsci', label: 'Computer Science' },\r\n        { value: 'hpc', label: 'High Performance Computing' },\r\n        { value: 'graphics', label: 'Computer Graphics' },\r\n        { value: 'robotics', label: 'Robotics' },\r\n        { value: 'hci', label: 'Human-Computer Interaction' }\r\n    ];\r\n    const licenseOptions = [\r\n        { value: 'mit', label: 'MIT License' },\r\n        { value: 'apache', label: 'Apache License 2.0' },\r\n        { value: 'isc', label: 'ISC License' },\r\n        { value: 'bsd-3', label: 'BSD 3-Clause \"New\" or \"Revised\" License' },\r\n    ];\r\n\r\n    const [showForm, setShowForm] = useState(false);\r\n\r\n\r\n    // Fetch JSON project data and set allProjects\r\n    useEffect(() => {\r\n        const octokit = new Octokit({\r\n            auth: \"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\"\r\n        })\r\n\r\n        async function fetchProjects() {\r\n            try {\r\n                const response = await octokit.request(\"GET /repos/{owner}/{repo}/contents/{path}?ref={branch}\", {\r\n                    owner: \"gt-ospo\",\r\n                    repo: \"open-source-project-explorer\",\r\n                    path: \"project_list.json\",\r\n                    branch: \"json-form-test\"\r\n                })\r\n\r\n                const content = atob(response.data.content)\r\n                const projects = JSON.parse(content)\r\n\r\n                setProjects(projects);\r\n\r\n            } catch (error) {\r\n                console.error(\"Something went wrong while fetching the projects...\", error);\r\n            }\r\n        }\r\n\r\n        fetchProjects();\r\n    }, []);\r\n\r\n    const data = useMemo(() => projects, [projects]);\r\n    const columns = useMemo(() => [\r\n        {\r\n            Header: 'Name',\r\n            accessor: 'projectName',\r\n        },\r\n        {\r\n            Header: 'Project Area',\r\n            accessor: 'projectAreas', // Assuming this is an array, you might need to adjust\r\n            Cell: ({ value }) => value.join(', '), // Adjust based on your data structure\r\n        },\r\n        {\r\n            Header: 'License',\r\n            accessor: 'licenses', // Assuming this is an array, adjust as needed\r\n            Cell: ({ value }) => value.join(', '), // Adjust based on your data structure\r\n        }\r\n    ], []);\r\n\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        page, // Use 'page' instead of 'rows' for pagination\r\n        prepareRow,\r\n        canPreviousPage,\r\n        canNextPage,\r\n        pageOptions,\r\n        nextPage,\r\n        previousPage,\r\n        setPageSize,\r\n        state: { pageIndex, pageSize },\r\n    } = useTable({\r\n        columns,\r\n        data,\r\n        initialState: { pageIndex: 0, pageSize: 10 }, // Set page size to 10 as per requirement\r\n    }, useExpanded, usePagination);\r\n    \r\n\r\n    return (\r\n        \r\n        <div className=\"isolate bg-white px-6 py-24 sm:py-32 lg:px-8\">\r\n            <table {...getTableProps()}>\r\n                <thead>\r\n                {headerGroups.map(headerGroup => (\r\n                    <tr {...headerGroup.getHeaderGroupProps()}>\r\n                    {headerGroup.headers.map(column => (\r\n                        <th {...column.getHeaderProps()}>{column.render('Header')}</th>\r\n                    ))}\r\n                    </tr>\r\n                ))}\r\n                </thead>\r\n                <tbody {...getTableBodyProps()}>\r\n                {page.map(row => {\r\n                    prepareRow(row);\r\n                    return (\r\n                    <React.Fragment key={row.id}>\r\n                        <tr {...row.getRowProps()}>\r\n                        {row.cells.map(cell => {\r\n                            return (\r\n                            <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                            );\r\n                        })}\r\n                        </tr>\r\n                        {row.isExpanded ? (\r\n                        // Render expanded row content here, adjust based on your data structure\r\n                        <tr>\r\n                            <td colSpan={visibleColumns.length}>\r\n                            {/* Render additional project details here */}\r\n                            </td>\r\n                        </tr>\r\n                        ) : null}\r\n                    </React.Fragment>\r\n                    );\r\n                })}\r\n                </tbody>\r\n            </table>\r\n            \r\n            <div className=\"mt-10\">\r\n                <button \r\n                    onClick={() => setShowForm(!showForm)}\r\n                    className={`block w-full rounded-md px-3.5 py-2.5 text-center text-sm font-semibold shadow-sm bg-gtgold text-white hover:bg-gtgoldlight focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600`}\r\n                >\r\n                    {showForm ? \"Close Form\" : \"Submit New Project\"}\r\n                </button>\r\n            </div>\r\n            \r\n            {showForm && <ProjectForm />}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProjectExplorer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}