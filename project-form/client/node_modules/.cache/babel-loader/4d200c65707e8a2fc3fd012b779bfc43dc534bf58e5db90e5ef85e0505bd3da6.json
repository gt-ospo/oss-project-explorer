{"ast":null,"code":"var _jsxFileName = \"/Users/natekim/Downloads/OSPO/react-os-framework/project-form/client/src/components/ProjectExplorerPage/ProjectExplorer.js\",\n  _s = $RefreshSig$();\nimport ProjectForm from \"../ProjectFormPage/ProjectForm\";\nimport { useMemo, useState, useEffect } from \"react\";\nimport { useReactTable, createColumnHelper, getCoreRowModel, flexRender } from '@tanstack/react-table';\nimport { Octokit } from \"octokit\";\n\n// TODO:\n//  - Input HTML for search bar, category checkboxes on side, and database layout\n//  - Add styling\n//  - Move Github API method to separate file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columnHelper = createColumnHelper();\nconst columns = [columnHelper.accessor(\"projectName\", {\n  header: \"Name\",\n  cell: info => info.getValue()\n}), columnHelper.accessor(row => row.projectAreas.join(\", \"), {\n  id: \"projectAreas\",\n  header: () => \"Project Areas\"\n}), columnHelper.accessor(row => row.licenses.join(\", \"), {\n  id: \"licenses\",\n  header: () => \"Licenses\"\n})];\nfunction ProjectExplorer() {\n  _s();\n  const [projects, setProjects] = useState([]);\n  const projectAreaOptions = [{\n    value: 'ai',\n    label: 'Artifical Intelligence'\n  }, {\n    value: 'bioscience',\n    label: 'Bioscience'\n  }, {\n    value: 'compsci',\n    label: 'Computer Science'\n  }, {\n    value: 'hpc',\n    label: 'High Performance Computing'\n  }, {\n    value: 'graphics',\n    label: 'Computer Graphics'\n  }, {\n    value: 'robotics',\n    label: 'Robotics'\n  }, {\n    value: 'hci',\n    label: 'Human-Computer Interaction'\n  }];\n  const licenseOptions = [{\n    value: 'mit',\n    label: 'MIT License'\n  }, {\n    value: 'apache',\n    label: 'Apache License 2.0'\n  }, {\n    value: 'isc',\n    label: 'ISC License'\n  }, {\n    value: 'bsd-3',\n    label: 'BSD 3-Clause \"New\" or \"Revised\" License'\n  }];\n  const [showForm, setShowForm] = useState(false);\n\n  // Fetch JSON project data and set allProjects\n  useEffect(() => {\n    const octokit = new Octokit({\n      auth: \"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\"\n    });\n    async function fetchProjects() {\n      try {\n        const response = await octokit.request(\"GET /repos/{owner}/{repo}/contents/{path}?ref={branch}\", {\n          owner: \"gt-ospo\",\n          repo: \"open-source-project-explorer\",\n          path: \"project_list.json\",\n          branch: \"json-form-test\"\n        });\n        const content = atob(response.data.content);\n        const projects = JSON.parse(content);\n        setProjects(projects);\n      } catch (error) {\n        console.error(\"Something went wrong while fetching the projects...\", error);\n      }\n    }\n    fetchProjects();\n  }, []);\n  const data = useMemo(() => projects, [projects]);\n  const table = useReactTable({\n    data,\n    columns,\n    getCoreRowModel: getCoreRowModel()\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"isolate bg-white px-6 py-24 sm:py-32 lg:px-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: table.getHeaderGroups().map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: headerGroup.headers.map(header => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: header.isPlaceholder ? null : flexRender(header.column.columnDef.header, header.getContext())\n          }, header.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 29\n          }, this))\n        }, headerGroup.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: table.getRowModel().rows.map(row => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: row.getVisibleCells().map(cell => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: flexRender(cell.column.columnDef.cell, cell.getContext())\n          }, cell.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 33\n          }, this))\n        }, row.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-10\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowForm(!showForm),\n        className: `block w-full rounded-md px-3.5 py-2.5 text-center text-sm font-semibold shadow-sm bg-gtgold text-white hover:bg-gtgoldlight focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600`,\n        children: showForm ? \"Close Form\" : \"Submit New Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this), showForm && /*#__PURE__*/_jsxDEV(ProjectForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n}\n_s(ProjectExplorer, \"AnN2ZwIZtp+6/pfF+H+Bpj9HuO0=\", false, function () {\n  return [useReactTable];\n});\n_c = ProjectExplorer;\n;\nexport default ProjectExplorer;\nvar _c;\n$RefreshReg$(_c, \"ProjectExplorer\");","map":{"version":3,"names":["ProjectForm","useMemo","useState","useEffect","useReactTable","createColumnHelper","getCoreRowModel","flexRender","Octokit","jsxDEV","_jsxDEV","columnHelper","columns","accessor","header","cell","info","getValue","row","projectAreas","join","id","licenses","ProjectExplorer","_s","projects","setProjects","projectAreaOptions","value","label","licenseOptions","showForm","setShowForm","octokit","auth","fetchProjects","response","request","owner","repo","path","branch","content","atob","data","JSON","parse","error","console","table","className","children","getHeaderGroups","map","headerGroup","headers","isPlaceholder","column","columnDef","getContext","fileName","_jsxFileName","lineNumber","columnNumber","getRowModel","rows","getVisibleCells","onClick","_c","$RefreshReg$"],"sources":["/Users/natekim/Downloads/OSPO/react-os-framework/project-form/client/src/components/ProjectExplorerPage/ProjectExplorer.js"],"sourcesContent":["import ProjectForm from \"../ProjectFormPage/ProjectForm\";\nimport { useMemo, useState, useEffect } from \"react\";\nimport { useReactTable, createColumnHelper, getCoreRowModel, flexRender } from '@tanstack/react-table';\nimport { Octokit } from \"octokit\";\n\n// TODO:\n//  - Input HTML for search bar, category checkboxes on side, and database layout\n//  - Add styling\n//  - Move Github API method to separate file\n\nconst columnHelper = createColumnHelper();\nconst columns = [\n    columnHelper.accessor(\"projectName\", {\n        header: \"Name\",\n        cell: info => info.getValue(),\n    }),\n    columnHelper.accessor(row => row.projectAreas.join(\", \"), {\n        id: \"projectAreas\",\n        header: () => \"Project Areas\",\n    }),\n    columnHelper.accessor(row => row.licenses.join(\", \"), {\n        id: \"licenses\",\n        header: () => \"Licenses\",\n    }),\n];\n\nfunction ProjectExplorer() {\n    const [projects, setProjects] = useState([]);\n\n    const projectAreaOptions = [\n        { value: 'ai', label: 'Artifical Intelligence' },\n        { value: 'bioscience', label: 'Bioscience' },\n        { value: 'compsci', label: 'Computer Science' },\n        { value: 'hpc', label: 'High Performance Computing' },\n        { value: 'graphics', label: 'Computer Graphics' },\n        { value: 'robotics', label: 'Robotics' },\n        { value: 'hci', label: 'Human-Computer Interaction' }\n    ];\n    const licenseOptions = [\n        { value: 'mit', label: 'MIT License' },\n        { value: 'apache', label: 'Apache License 2.0' },\n        { value: 'isc', label: 'ISC License' },\n        { value: 'bsd-3', label: 'BSD 3-Clause \"New\" or \"Revised\" License' },\n    ];\n\n    const [showForm, setShowForm] = useState(false);\n\n\n    // Fetch JSON project data and set allProjects\n    useEffect(() => {\n        const octokit = new Octokit({\n            auth: \"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\"\n        })\n\n        async function fetchProjects() {\n            try {\n                const response = await octokit.request(\"GET /repos/{owner}/{repo}/contents/{path}?ref={branch}\", {\n                    owner: \"gt-ospo\",\n                    repo: \"open-source-project-explorer\",\n                    path: \"project_list.json\",\n                    branch: \"json-form-test\"\n                })\n\n                const content = atob(response.data.content)\n                const projects = JSON.parse(content)\n\n                setProjects(projects);\n\n            } catch (error) {\n                console.error(\"Something went wrong while fetching the projects...\", error);\n            }\n        }\n\n        fetchProjects();\n    }, []);\n\n    const data = useMemo(() => projects, [projects]);\n\n    const table = useReactTable({\n        data,\n        columns,\n        getCoreRowModel: getCoreRowModel(),\n    });\n    \n\n    return (\n        <div className=\"isolate bg-white px-6 py-24 sm:py-32 lg:px-8\">\n            <table>\n                <thead>\n                    {table.getHeaderGroups().map(headerGroup => (\n                        <tr key={headerGroup.id}>\n                        {headerGroup.headers.map(header => (\n                            <th key={header.id}>\n                                {header.isPlaceholder ? null : flexRender(header.column.columnDef.header, header.getContext())}\n                            </th>\n                        ))}\n                        </tr>\n                    ))}\n                </thead>\n                <tbody>\n                    {table.getRowModel().rows.map(row => (\n                        <tr key={row.id}>\n                            {row.getVisibleCells().map(cell => (\n                                <td key={cell.id}>\n                                    {flexRender(cell.column.columnDef.cell, cell.getContext())}\n                                </td>\n                            ))}\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n            \n            <div className=\"mt-10\">\n                <button \n                    onClick={() => setShowForm(!showForm)}\n                    className={`block w-full rounded-md px-3.5 py-2.5 text-center text-sm font-semibold shadow-sm bg-gtgold text-white hover:bg-gtgoldlight focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600`}\n                >\n                    {showForm ? \"Close Form\" : \"Submit New Project\"}\n                </button>\n            </div>\n            \n            {showForm && <ProjectForm />}\n        </div>\n    );\n};\n\nexport default ProjectExplorer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}