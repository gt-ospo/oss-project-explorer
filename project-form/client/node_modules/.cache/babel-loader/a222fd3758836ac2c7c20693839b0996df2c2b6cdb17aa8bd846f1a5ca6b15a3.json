{"ast":null,"code":"import { request as defaultRequest } from \"@octokit/request\";\nimport btoa from \"btoa-lite\";\nasync function resetToken(options) {\n  const request = options.request || /* istanbul ignore next: we always pass a custom request in tests */\n  defaultRequest;\n  const auth = btoa(`${options.clientId}:${options.clientSecret}`);\n  const response = await request(\"PATCH /applications/{client_id}/token\", {\n    headers: {\n      authorization: `basic ${auth}`\n    },\n    client_id: options.clientId,\n    access_token: options.token\n  });\n  const authentication = {\n    clientType: options.clientType,\n    clientId: options.clientId,\n    clientSecret: options.clientSecret,\n    token: response.data.token,\n    scopes: response.data.scopes\n  };\n  if (response.data.expires_at) authentication.expiresAt = response.data.expires_at;\n  if (options.clientType === \"github-app\") {\n    delete authentication.scopes;\n  }\n  return {\n    ...response,\n    authentication\n  };\n}\nexport { resetToken };","map":{"version":3,"names":["request","defaultRequest","btoa","resetToken","options","auth","clientId","clientSecret","response","headers","authorization","client_id","access_token","token","authentication","clientType","data","scopes","expires_at","expiresAt"],"sources":["C:/Users/natek/Downloads/OSPO/react-os-framework/project-form/client/node_modules/@octokit/oauth-methods/dist-src/reset-token.js"],"sourcesContent":["import { request as defaultRequest } from \"@octokit/request\";\r\nimport btoa from \"btoa-lite\";\r\nasync function resetToken(options) {\r\n  const request = options.request || /* istanbul ignore next: we always pass a custom request in tests */\r\n  defaultRequest;\r\n  const auth = btoa(`${options.clientId}:${options.clientSecret}`);\r\n  const response = await request(\r\n    \"PATCH /applications/{client_id}/token\",\r\n    {\r\n      headers: {\r\n        authorization: `basic ${auth}`\r\n      },\r\n      client_id: options.clientId,\r\n      access_token: options.token\r\n    }\r\n  );\r\n  const authentication = {\r\n    clientType: options.clientType,\r\n    clientId: options.clientId,\r\n    clientSecret: options.clientSecret,\r\n    token: response.data.token,\r\n    scopes: response.data.scopes\r\n  };\r\n  if (response.data.expires_at)\r\n    authentication.expiresAt = response.data.expires_at;\r\n  if (options.clientType === \"github-app\") {\r\n    delete authentication.scopes;\r\n  }\r\n  return { ...response, authentication };\r\n}\r\nexport {\r\n  resetToken\r\n};\r\n"],"mappings":"AAAA,SAASA,OAAO,IAAIC,cAAc,QAAQ,kBAAkB;AAC5D,OAAOC,IAAI,MAAM,WAAW;AAC5B,eAAeC,UAAUA,CAACC,OAAO,EAAE;EACjC,MAAMJ,OAAO,GAAGI,OAAO,CAACJ,OAAO,IAAI;EACnCC,cAAc;EACd,MAAMI,IAAI,GAAGH,IAAI,CAAE,GAAEE,OAAO,CAACE,QAAS,IAAGF,OAAO,CAACG,YAAa,EAAC,CAAC;EAChE,MAAMC,QAAQ,GAAG,MAAMR,OAAO,CAC5B,uCAAuC,EACvC;IACES,OAAO,EAAE;MACPC,aAAa,EAAG,SAAQL,IAAK;IAC/B,CAAC;IACDM,SAAS,EAAEP,OAAO,CAACE,QAAQ;IAC3BM,YAAY,EAAER,OAAO,CAACS;EACxB,CACF,CAAC;EACD,MAAMC,cAAc,GAAG;IACrBC,UAAU,EAAEX,OAAO,CAACW,UAAU;IAC9BT,QAAQ,EAAEF,OAAO,CAACE,QAAQ;IAC1BC,YAAY,EAAEH,OAAO,CAACG,YAAY;IAClCM,KAAK,EAAEL,QAAQ,CAACQ,IAAI,CAACH,KAAK;IAC1BI,MAAM,EAAET,QAAQ,CAACQ,IAAI,CAACC;EACxB,CAAC;EACD,IAAIT,QAAQ,CAACQ,IAAI,CAACE,UAAU,EAC1BJ,cAAc,CAACK,SAAS,GAAGX,QAAQ,CAACQ,IAAI,CAACE,UAAU;EACrD,IAAId,OAAO,CAACW,UAAU,KAAK,YAAY,EAAE;IACvC,OAAOD,cAAc,CAACG,MAAM;EAC9B;EACA,OAAO;IAAE,GAAGT,QAAQ;IAAEM;EAAe,CAAC;AACxC;AACA,SACEX,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}