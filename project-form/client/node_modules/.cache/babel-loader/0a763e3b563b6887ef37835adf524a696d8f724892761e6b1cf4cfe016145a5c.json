{"ast":null,"code":"// pkg/dist-src/octokit.js\nimport { Octokit as OctokitCore } from \"@octokit/core\";\nimport { paginateRest } from \"@octokit/plugin-paginate-rest\";\nimport { paginateGraphql } from \"@octokit/plugin-paginate-graphql\";\nimport { restEndpointMethods } from \"@octokit/plugin-rest-endpoint-methods\";\nimport { retry } from \"@octokit/plugin-retry\";\nimport { throttling } from \"@octokit/plugin-throttling\";\n\n// pkg/dist-src/version.js\nvar VERSION = \"3.1.2\";\n\n// pkg/dist-src/octokit.js\nimport { RequestError } from \"@octokit/request-error\";\nvar Octokit = OctokitCore.plugin(restEndpointMethods, paginateRest, paginateGraphql, retry, throttling).defaults({\n  userAgent: `octokit.js/${VERSION}`,\n  throttle: {\n    onRateLimit,\n    onSecondaryRateLimit\n  }\n});\nfunction onRateLimit(retryAfter, options, octokit) {\n  octokit.log.warn(`Request quota exhausted for request ${options.method} ${options.url}`);\n  if (options.request.retryCount === 0) {\n    octokit.log.info(`Retrying after ${retryAfter} seconds!`);\n    return true;\n  }\n}\nfunction onSecondaryRateLimit(retryAfter, options, octokit) {\n  octokit.log.warn(`SecondaryRateLimit detected for request ${options.method} ${options.url}`);\n  if (options.request.retryCount === 0) {\n    octokit.log.info(`Retrying after ${retryAfter} seconds!`);\n    return true;\n  }\n}\n\n// pkg/dist-src/app.js\nimport { App as DefaultApp } from \"@octokit/app\";\nimport { OAuthApp as DefaultOAuthApp } from \"@octokit/oauth-app\";\nimport { createNodeMiddleware } from \"@octokit/app\";\nvar App = DefaultApp.defaults({\n  Octokit\n});\nvar OAuthApp = DefaultOAuthApp.defaults({\n  Octokit\n});\nexport { App, OAuthApp, Octokit, RequestError, createNodeMiddleware };","map":{"version":3,"names":["Octokit","OctokitCore","paginateRest","paginateGraphql","restEndpointMethods","retry","throttling","VERSION","RequestError","plugin","defaults","userAgent","throttle","onRateLimit","onSecondaryRateLimit","retryAfter","options","octokit","log","warn","method","url","request","retryCount","info","App","DefaultApp","OAuthApp","DefaultOAuthApp","createNodeMiddleware"],"sources":["C:/Users/natek/Downloads/OSPO/react-os-framework/project-form/client/node_modules/octokit/dist-web/index.js"],"sourcesContent":["// pkg/dist-src/octokit.js\r\nimport { Octokit as OctokitCore } from \"@octokit/core\";\r\nimport { paginateRest } from \"@octokit/plugin-paginate-rest\";\r\nimport { paginateGraphql } from \"@octokit/plugin-paginate-graphql\";\r\nimport { restEndpointMethods } from \"@octokit/plugin-rest-endpoint-methods\";\r\nimport { retry } from \"@octokit/plugin-retry\";\r\nimport { throttling } from \"@octokit/plugin-throttling\";\r\n\r\n// pkg/dist-src/version.js\r\nvar VERSION = \"3.1.2\";\r\n\r\n// pkg/dist-src/octokit.js\r\nimport { RequestError } from \"@octokit/request-error\";\r\nvar Octokit = OctokitCore.plugin(\r\n  restEndpointMethods,\r\n  paginateRest,\r\n  paginateGraphql,\r\n  retry,\r\n  throttling\r\n).defaults({\r\n  userAgent: `octokit.js/${VERSION}`,\r\n  throttle: {\r\n    onRateLimit,\r\n    onSecondaryRateLimit\r\n  }\r\n});\r\nfunction onRateLimit(retryAfter, options, octokit) {\r\n  octokit.log.warn(\r\n    `Request quota exhausted for request ${options.method} ${options.url}`\r\n  );\r\n  if (options.request.retryCount === 0) {\r\n    octokit.log.info(`Retrying after ${retryAfter} seconds!`);\r\n    return true;\r\n  }\r\n}\r\nfunction onSecondaryRateLimit(retryAfter, options, octokit) {\r\n  octokit.log.warn(\r\n    `SecondaryRateLimit detected for request ${options.method} ${options.url}`\r\n  );\r\n  if (options.request.retryCount === 0) {\r\n    octokit.log.info(`Retrying after ${retryAfter} seconds!`);\r\n    return true;\r\n  }\r\n}\r\n\r\n// pkg/dist-src/app.js\r\nimport { App as DefaultApp } from \"@octokit/app\";\r\nimport { OAuthApp as DefaultOAuthApp } from \"@octokit/oauth-app\";\r\nimport { createNodeMiddleware } from \"@octokit/app\";\r\nvar App = DefaultApp.defaults({ Octokit });\r\nvar OAuthApp = DefaultOAuthApp.defaults({ Octokit });\r\nexport {\r\n  App,\r\n  OAuthApp,\r\n  Octokit,\r\n  RequestError,\r\n  createNodeMiddleware\r\n};\r\n"],"mappings":"AAAA;AACA,SAASA,OAAO,IAAIC,WAAW,QAAQ,eAAe;AACtD,SAASC,YAAY,QAAQ,+BAA+B;AAC5D,SAASC,eAAe,QAAQ,kCAAkC;AAClE,SAASC,mBAAmB,QAAQ,uCAAuC;AAC3E,SAASC,KAAK,QAAQ,uBAAuB;AAC7C,SAASC,UAAU,QAAQ,4BAA4B;;AAEvD;AACA,IAAIC,OAAO,GAAG,OAAO;;AAErB;AACA,SAASC,YAAY,QAAQ,wBAAwB;AACrD,IAAIR,OAAO,GAAGC,WAAW,CAACQ,MAAM,CAC9BL,mBAAmB,EACnBF,YAAY,EACZC,eAAe,EACfE,KAAK,EACLC,UACF,CAAC,CAACI,QAAQ,CAAC;EACTC,SAAS,EAAG,cAAaJ,OAAQ,EAAC;EAClCK,QAAQ,EAAE;IACRC,WAAW;IACXC;EACF;AACF,CAAC,CAAC;AACF,SAASD,WAAWA,CAACE,UAAU,EAAEC,OAAO,EAAEC,OAAO,EAAE;EACjDA,OAAO,CAACC,GAAG,CAACC,IAAI,CACb,uCAAsCH,OAAO,CAACI,MAAO,IAAGJ,OAAO,CAACK,GAAI,EACvE,CAAC;EACD,IAAIL,OAAO,CAACM,OAAO,CAACC,UAAU,KAAK,CAAC,EAAE;IACpCN,OAAO,CAACC,GAAG,CAACM,IAAI,CAAE,kBAAiBT,UAAW,WAAU,CAAC;IACzD,OAAO,IAAI;EACb;AACF;AACA,SAASD,oBAAoBA,CAACC,UAAU,EAAEC,OAAO,EAAEC,OAAO,EAAE;EAC1DA,OAAO,CAACC,GAAG,CAACC,IAAI,CACb,2CAA0CH,OAAO,CAACI,MAAO,IAAGJ,OAAO,CAACK,GAAI,EAC3E,CAAC;EACD,IAAIL,OAAO,CAACM,OAAO,CAACC,UAAU,KAAK,CAAC,EAAE;IACpCN,OAAO,CAACC,GAAG,CAACM,IAAI,CAAE,kBAAiBT,UAAW,WAAU,CAAC;IACzD,OAAO,IAAI;EACb;AACF;;AAEA;AACA,SAASU,GAAG,IAAIC,UAAU,QAAQ,cAAc;AAChD,SAASC,QAAQ,IAAIC,eAAe,QAAQ,oBAAoB;AAChE,SAASC,oBAAoB,QAAQ,cAAc;AACnD,IAAIJ,GAAG,GAAGC,UAAU,CAAChB,QAAQ,CAAC;EAAEV;AAAQ,CAAC,CAAC;AAC1C,IAAI2B,QAAQ,GAAGC,eAAe,CAAClB,QAAQ,CAAC;EAAEV;AAAQ,CAAC,CAAC;AACpD,SACEyB,GAAG,EACHE,QAAQ,EACR3B,OAAO,EACPQ,YAAY,EACZqB,oBAAoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}